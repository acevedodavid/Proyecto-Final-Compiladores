
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN CHAR COLON COMMA CTE_CHAR CTE_FLOAT CTE_INT DIV DO ELSE EQUAL FLOAT FOR GREATERTHAN ID IF INT LBRACKET LESSTHAN LPAREN LSQUARE MAIN MINUS MODULE MULT OR PLUS PROGRAM QUOTATION RBRACKET READ RETURN RPAREN RSQUARE SEMICOLON THEN TO VAR VOID WHILE WRITEprogram : PROGRAM ID SEMICOLON vars aux_funcion main\n              | PROGRAM ID SEMICOLON vars main\n              | PROGRAM ID SEMICOLON aux_funcion main\n              | PROGRAM ID SEMICOLON mainmain : MAIN pn_current_function LPAREN RPAREN vars bloque\n            | MAIN pn_current_function LPAREN RPAREN bloqueaux_funcion : funcion\n                   | funcion aux_funcionfuncion : tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN vars bloque\n               | tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN bloque\n               | tipo_retorno MODULE ID pn_current_function LPAREN RPAREN vars bloque\n               | tipo_retorno MODULE ID pn_current_function LPAREN RPAREN bloquevars : VAR varvar : tipo COLON lista_ids SEMICOLON\n           | tipo COLON lista_ids SEMICOLON vartipo_retorno : tipo\n                    | VOID pn_current_typetipo : INT pn_current_type\n          | FLOAT pn_current_type\n          | CHAR pn_current_typeparametros : tipo ID\n                  | tipo ID COMMA parametroslista_ids : aux_lista_recaux_lista_rec : aux_lista\n                    | aux_lista COMMA aux_lista_recaux_lista : ID pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE\n                 | ID pn_add_symbol LSQUARE CTE_INT RSQUARE\n                 | ID pn_add_symbolescritura : WRITE LPAREN aux_escritura RPAREN SEMICOLONaux_escritura : pn_push_write_operator letrero pn_write\n                     | pn_push_write_operator expresion pn_write\n                     | pn_push_write_operator letrero pn_write COMMA aux_escritura\n                     | pn_push_write_operator expresion pn_write COMMA aux_escrituracondicional : WHILE LPAREN expresion RPAREN DO bloquebloque : LBRACKET estatutos RBRACKET\n              | LBRACKET RBRACKETestatutos : estatuto estatutos\n                  | estatutoestatuto : asignacion\n                | condicional\n                | escritura\n                | retorno\n                | lectura\n                | decision\n                | no_condicionalasignacion : ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON\n                  | ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLONretorno : RETURN LPAREN expresion RPARENlectura : READ LPAREN aux_lectura RPAREN SEMICOLONaux_lectura : pn_push_read_operator ID pn_push_operand_and_type pn_read\n                   | pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones\n                   | pn_push_read_operator ID pn_push_operand_and_type pn_read COMMA aux_lectura\n                   | pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones COMMA aux_lecturaletrero : QUOTATION aux_letrero QUOTATION\n               | QUOTATION QUOTATIONaux_letrero : CTE_CHAR\n                   | CTE_CHAR aux_letrerodecision : IF LPAREN expresion RPAREN THEN bloque\n                | IF LPAREN expresion RPAREN THEN bloque ELSE bloquellamada : ID LPAREN aux_llamada RPAREN SEMICOLONaux_llamada : expresion\n                   | expresion COMMA aux_llamadano_condicional : FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion TO expresion DO bloque\n                      | FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion TO expresion DO bloquedimensiones : LSQUARE expresion RSQUARE LSQUARE expresion RSQUARE\n                   | LSQUARE expresion COMMA expresion RSQUARE\n                   | LSQUARE expresion RSQUAREexpresion : comparacion aux_expresion\n                 | aux_comparacionaux_expresion : AND comparacion\n                     | OR comparacion\n                     | AND comparacion aux_expresion\n                     | OR comparacion aux_expresioncomparacion : exp LESSTHAN exp\n                   | exp GREATERTHAN exp\n                   | exp EQUAL expaux_comparacion : exp LESSTHAN exp\n                       | exp GREATERTHAN exp\n                       | exp EQUAL exp\n                       | expexp : termino pn_addition_substraction\n           | termino pn_addition_substraction PLUS pn_push_operator exp\n           | termino pn_addition_substraction MINUS pn_push_operator exptermino : factor pn_multiplication_division\n             | factor pn_multiplication_division MULT pn_push_operator termino\n             | factor pn_multiplication_division DIV pn_push_operator terminofactor : LPAREN expresion RPAREN\n              |  PLUS var_cte\n              |  PLUS llamada\n              |  MINUS var_cte\n              |  MINUS llamada\n              |  var_cte\n              |  llamadavar_cte : ID pn_push_operand_and_type\n               | CTE_INT pn_push_constant_and_type\n               | CTE_FLOAT pn_push_constant_and_typepn_current_function : pn_current_type : pn_add_symbol : pn_push_constant_and_type : pn_push_operand_and_type : pn_push_operator : pn_addition_substraction : pn_multiplication_division : pn_assign : pn_push_read_operator : pn_read : pn_push_write_operator : pn_write : '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,7,18,19,29,43,49,51,71,],[0,-4,-2,-3,-1,-6,-5,-36,-35,]),'ID':([2,14,15,16,24,26,27,28,30,40,44,51,52,53,54,55,56,57,58,59,66,69,71,74,75,76,77,78,86,87,88,94,95,103,106,114,115,120,121,122,123,124,132,139,144,148,151,160,161,162,163,166,172,175,176,180,182,184,185,186,188,189,190,191,193,194,195,199,200,203,218,221,222,224,226,227,233,234,],[3,-98,-98,-98,32,-18,-19,-20,36,36,60,-36,60,-39,-40,-41,-42,-43,-44,-45,79,83,-35,99,-108,99,-106,99,-102,99,99,99,99,99,141,-102,99,99,99,99,99,99,99,-48,-102,99,99,-102,-102,-102,-102,-29,-49,-102,99,99,-34,99,99,99,99,99,99,99,99,-108,-108,-58,99,-47,-106,99,-46,-106,-59,99,-64,-63,]),'SEMICOLON':([3,33,34,35,36,41,47,84,91,92,93,96,97,98,99,100,101,119,125,126,127,128,129,130,131,133,134,135,140,149,152,154,156,157,158,159,177,178,179,183,187,192,202,206,207,208,209,210,211,212,213,],[4,39,-23,-24,-99,-28,-25,-27,-69,-80,-103,-104,-92,-93,-101,-100,-100,-68,-81,-88,-89,-90,-91,-84,-94,-95,-96,166,172,-105,-87,-70,-71,-77,-78,-79,-26,-105,203,-72,-73,213,222,-74,-75,-76,-82,-83,-85,-86,-60,]),'VAR':([4,37,68,80,],[8,8,8,8,]),'MAIN':([4,5,6,9,17,20,22,39,46,51,71,82,110,111,145,],[10,10,10,-7,10,-13,-8,-14,-15,-36,-35,-12,-10,-11,-9,]),'VOID':([4,5,9,20,39,46,51,71,82,110,111,145,],[13,13,13,-13,-14,-15,-36,-35,-12,-10,-11,-9,]),'INT':([4,5,8,9,20,39,45,46,51,71,82,110,111,112,145,],[14,14,14,14,-13,14,14,-15,-36,-35,-12,-10,-11,14,-9,]),'FLOAT':([4,5,8,9,20,39,45,46,51,71,82,110,111,112,145,],[15,15,15,15,-13,15,15,-15,-36,-35,-12,-10,-11,15,-9,]),'CHAR':([4,5,8,9,20,39,45,46,51,71,82,110,111,112,145,],[16,16,16,16,-13,16,16,-15,-36,-35,-12,-10,-11,16,-9,]),'LPAREN':([10,23,32,38,61,62,63,64,65,74,75,76,78,86,87,88,99,103,114,115,120,121,122,123,124,132,144,148,151,160,161,162,163,175,176,180,184,185,186,188,189,190,191,193,194,195,200,221,227,],[-97,31,-97,45,74,75,76,77,78,88,-108,88,88,-102,88,88,132,88,-102,88,88,88,88,88,88,88,-102,88,88,-102,-102,-102,-102,-102,88,88,88,88,88,88,88,88,88,88,-108,-108,88,88,88,]),'MODULE':([11,12,13,14,15,16,25,26,27,28,],[24,-16,-98,-98,-98,-98,-17,-18,-19,-20,]),'COLON':([14,15,16,21,26,27,28,],[-98,-98,-98,30,-18,-19,-20,]),'LBRACKET':([20,37,39,42,46,68,80,81,109,153,174,219,231,232,],[-13,44,-14,44,-15,44,44,44,44,44,44,44,44,44,]),'RPAREN':([31,45,67,83,89,91,92,93,96,97,98,99,100,101,102,104,105,107,117,119,125,126,127,128,129,130,131,133,134,136,137,141,146,150,152,154,156,157,158,159,164,165,167,168,169,173,183,187,196,198,205,206,207,208,209,210,211,212,213,214,215,216,217,223,225,229,],[37,68,80,-21,118,-69,-80,-103,-104,-92,-93,-101,-100,-100,135,139,140,142,152,-68,-81,-88,-89,-90,-91,-84,-94,-95,-96,-109,-109,-101,-22,-67,-87,-70,-71,-77,-78,-79,192,-61,-30,-31,-55,-107,-72,-73,-54,-50,-66,-74,-75,-76,-82,-83,-85,-86,-60,-62,-32,-33,-51,-65,-52,-53,]),'COMMA':([35,36,41,83,84,91,92,93,96,97,98,99,100,101,116,119,125,126,127,128,129,130,131,133,134,136,137,141,150,152,154,156,157,158,159,165,167,168,169,173,177,183,187,196,198,205,206,207,208,209,210,211,212,213,217,223,],[40,-99,-28,112,-27,-69,-80,-103,-104,-92,-93,-101,-100,-100,151,-68,-81,-88,-89,-90,-91,-84,-94,-95,-96,-109,-109,-101,-67,-87,-70,-71,-77,-78,-79,193,194,195,-55,-107,-26,-72,-73,-54,218,-66,-74,-75,-76,-82,-83,-85,-86,-60,224,-65,]),'LSQUARE':([36,41,60,73,79,84,108,141,150,173,198,],[-99,48,-101,87,-101,113,87,-101,180,-107,87,]),'RBRACKET':([44,50,51,52,53,54,55,56,57,58,59,71,72,139,166,172,182,199,203,222,226,233,234,],[51,71,-36,-38,-39,-40,-41,-42,-43,-44,-45,-35,-37,-48,-29,-49,-34,-58,-47,-46,-59,-64,-63,]),'WHILE':([44,51,52,53,54,55,56,57,58,59,71,139,166,172,182,199,203,222,226,233,234,],[61,-36,61,-39,-40,-41,-42,-43,-44,-45,-35,-48,-29,-49,-34,-58,-47,-46,-59,-64,-63,]),'WRITE':([44,51,52,53,54,55,56,57,58,59,71,139,166,172,182,199,203,222,226,233,234,],[62,-36,62,-39,-40,-41,-42,-43,-44,-45,-35,-48,-29,-49,-34,-58,-47,-46,-59,-64,-63,]),'RETURN':([44,51,52,53,54,55,56,57,58,59,71,139,166,172,182,199,203,222,226,233,234,],[63,-36,63,-39,-40,-41,-42,-43,-44,-45,-35,-48,-29,-49,-34,-58,-47,-46,-59,-64,-63,]),'READ':([44,51,52,53,54,55,56,57,58,59,71,139,166,172,182,199,203,222,226,233,234,],[64,-36,64,-39,-40,-41,-42,-43,-44,-45,-35,-48,-29,-49,-34,-58,-47,-46,-59,-64,-63,]),'IF':([44,51,52,53,54,55,56,57,58,59,71,139,166,172,182,199,203,222,226,233,234,],[65,-36,65,-39,-40,-41,-42,-43,-44,-45,-35,-48,-29,-49,-34,-58,-47,-46,-59,-64,-63,]),'FOR':([44,51,52,53,54,55,56,57,58,59,71,139,166,172,182,199,203,222,226,233,234,],[66,-36,66,-39,-40,-41,-42,-43,-44,-45,-35,-48,-29,-49,-34,-58,-47,-46,-59,-64,-63,]),'CTE_INT':([48,74,75,76,78,86,87,88,94,95,103,113,114,115,120,121,122,123,124,132,144,148,151,160,161,162,163,175,176,180,184,185,186,188,189,190,191,193,194,195,200,221,227,],[70,100,-108,100,100,-102,100,100,100,100,100,147,-102,100,100,100,100,100,100,100,-102,100,100,-102,-102,-102,-102,-102,100,100,100,100,100,100,100,100,100,100,-108,-108,100,100,100,]),'ELSE':([51,71,199,],[-36,-35,219,]),'ASSIGN':([60,73,79,85,108,143,150,205,223,],[-101,86,-101,114,144,175,-67,-66,-65,]),'RSQUARE':([70,91,92,93,96,97,98,99,100,101,116,119,125,126,127,128,129,130,131,133,134,147,152,154,156,157,158,159,181,183,187,204,206,207,208,209,210,211,212,213,],[84,-69,-80,-103,-104,-92,-93,-101,-100,-100,150,-68,-81,-88,-89,-90,-91,-84,-94,-95,-96,177,-87,-70,-71,-77,-78,-79,205,-72,-73,223,-74,-75,-76,-82,-83,-85,-86,-60,]),'PLUS':([74,75,76,78,86,87,88,93,96,97,98,99,100,101,103,114,115,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,144,148,151,152,160,161,162,163,175,176,180,184,185,186,188,189,190,191,193,194,195,200,211,212,213,221,227,],[94,-108,94,94,-102,94,94,-103,-104,-92,-93,-101,-100,-100,94,-102,94,94,94,94,94,94,160,-88,-89,-90,-91,-84,-94,94,-95,-96,-102,94,94,-87,-102,-102,-102,-102,-102,94,94,94,94,94,94,94,94,94,94,-108,-108,94,-85,-86,-60,94,94,]),'MINUS':([74,75,76,78,86,87,88,93,96,97,98,99,100,101,103,114,115,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,144,148,151,152,160,161,162,163,175,176,180,184,185,186,188,189,190,191,193,194,195,200,211,212,213,221,227,],[95,-108,95,95,-102,95,95,-103,-104,-92,-93,-101,-100,-100,95,-102,95,95,95,95,95,95,161,-88,-89,-90,-91,-84,-94,95,-95,-96,-102,95,95,-87,-102,-102,-102,-102,-102,95,95,95,95,95,95,95,95,95,95,-108,-108,95,-85,-86,-60,95,95,]),'CTE_FLOAT':([74,75,76,78,86,87,88,94,95,103,114,115,120,121,122,123,124,132,144,148,151,160,161,162,163,175,176,180,184,185,186,188,189,190,191,193,194,195,200,221,227,],[101,-108,101,101,-102,101,101,101,101,101,-102,101,101,101,101,101,101,101,-102,101,101,-102,-102,-102,-102,-102,101,101,101,101,101,101,101,101,101,101,-108,-108,101,101,101,]),'QUOTATION':([75,103,138,170,171,194,195,197,],[-108,138,169,196,-56,-108,-108,-57,]),'AND':([90,93,96,97,98,99,100,101,125,126,127,128,129,130,131,133,134,152,154,156,157,158,159,206,207,208,209,210,211,212,213,],[120,-103,-104,-92,-93,-101,-100,-100,-81,-88,-89,-90,-91,-84,-94,-95,-96,-87,120,120,-74,-75,-76,-74,-75,-76,-82,-83,-85,-86,-60,]),'OR':([90,93,96,97,98,99,100,101,125,126,127,128,129,130,131,133,134,152,154,156,157,158,159,206,207,208,209,210,211,212,213,],[121,-103,-104,-92,-93,-101,-100,-100,-81,-88,-89,-90,-91,-84,-94,-95,-96,-87,121,121,-74,-75,-76,-74,-75,-76,-82,-83,-85,-86,-60,]),'TO':([91,92,93,96,97,98,99,100,101,119,125,126,127,128,129,130,131,133,134,152,154,156,157,158,159,183,187,201,206,207,208,209,210,211,212,213,220,],[-69,-80,-103,-104,-92,-93,-101,-100,-100,-68,-81,-88,-89,-90,-91,-84,-94,-95,-96,-87,-70,-71,-77,-78,-79,-72,-73,221,-74,-75,-76,-82,-83,-85,-86,-60,227,]),'DO':([91,92,93,96,97,98,99,100,101,118,119,125,126,127,128,129,130,131,133,134,152,154,156,157,158,159,183,187,206,207,208,209,210,211,212,213,228,230,],[-69,-80,-103,-104,-92,-93,-101,-100,-100,153,-68,-81,-88,-89,-90,-91,-84,-94,-95,-96,-87,-70,-71,-77,-78,-79,-72,-73,-74,-75,-76,-82,-83,-85,-86,-60,231,232,]),'LESSTHAN':([92,93,96,97,98,99,100,101,125,126,127,128,129,130,131,133,134,152,155,209,210,211,212,213,],[122,-103,-104,-92,-93,-101,-100,-100,-81,-88,-89,-90,-91,-84,-94,-95,-96,-87,184,-82,-83,-85,-86,-60,]),'GREATERTHAN':([92,93,96,97,98,99,100,101,125,126,127,128,129,130,131,133,134,152,155,209,210,211,212,213,],[123,-103,-104,-92,-93,-101,-100,-100,-81,-88,-89,-90,-91,-84,-94,-95,-96,-87,185,-82,-83,-85,-86,-60,]),'EQUAL':([92,93,96,97,98,99,100,101,125,126,127,128,129,130,131,133,134,152,155,209,210,211,212,213,],[124,-103,-104,-92,-93,-101,-100,-100,-81,-88,-89,-90,-91,-84,-94,-95,-96,-87,186,-82,-83,-85,-86,-60,]),'MULT':([96,97,98,99,100,101,126,127,128,129,130,131,133,134,152,213,],[-104,-92,-93,-101,-100,-100,-88,-89,-90,-91,162,-94,-95,-96,-87,-60,]),'DIV':([96,97,98,99,100,101,126,127,128,129,130,131,133,134,152,213,],[-104,-92,-93,-101,-100,-100,-88,-89,-90,-91,163,-94,-95,-96,-87,-60,]),'CTE_CHAR':([138,171,],[171,171,]),'THEN':([142,],[174,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'vars':([4,37,68,80,],[5,42,81,109,]),'aux_funcion':([4,5,9,],[6,17,22,]),'main':([4,5,6,17,],[7,18,19,29,]),'funcion':([4,5,9,],[9,9,9,]),'tipo_retorno':([4,5,9,],[11,11,11,]),'tipo':([4,5,8,9,39,45,112,],[12,12,21,12,21,69,69,]),'var':([8,39,],[20,46,]),'pn_current_function':([10,32,],[23,38,]),'pn_current_type':([13,14,15,16,],[25,26,27,28,]),'lista_ids':([30,],[33,]),'aux_lista_rec':([30,40,],[34,47,]),'aux_lista':([30,40,],[35,35,]),'pn_add_symbol':([36,],[41,]),'bloque':([37,42,68,80,81,109,153,174,219,231,232,],[43,49,82,110,111,145,182,199,226,233,234,]),'estatutos':([44,52,],[50,72,]),'estatuto':([44,52,],[52,52,]),'asignacion':([44,52,],[53,53,]),'condicional':([44,52,],[54,54,]),'escritura':([44,52,],[55,55,]),'retorno':([44,52,],[56,56,]),'lectura':([44,52,],[57,57,]),'decision':([44,52,],[58,58,]),'no_condicional':([44,52,],[59,59,]),'parametros':([45,112,],[67,146,]),'pn_push_operand_and_type':([60,79,99,141,],[73,108,131,173,]),'dimensiones':([73,108,198,],[85,143,217,]),'expresion':([74,76,78,87,88,103,115,132,148,151,176,180,193,200,221,227,],[89,104,107,116,117,137,149,165,178,181,201,204,165,220,228,230,]),'comparacion':([74,76,78,87,88,103,115,120,121,132,148,151,176,180,193,200,221,227,],[90,90,90,90,90,90,90,154,156,90,90,90,90,90,90,90,90,90,]),'aux_comparacion':([74,76,78,87,88,103,115,132,148,151,176,180,193,200,221,227,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'exp':([74,76,78,87,88,103,115,120,121,122,123,124,132,148,151,176,180,184,185,186,188,189,193,200,221,227,],[92,92,92,92,92,92,92,155,155,157,158,159,92,92,92,92,92,206,207,208,209,210,92,92,92,92,]),'termino':([74,76,78,87,88,103,115,120,121,122,123,124,132,148,151,176,180,184,185,186,188,189,190,191,193,200,221,227,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,211,212,93,93,93,93,]),'factor':([74,76,78,87,88,103,115,120,121,122,123,124,132,148,151,176,180,184,185,186,188,189,190,191,193,200,221,227,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'var_cte':([74,76,78,87,88,94,95,103,115,120,121,122,123,124,132,148,151,176,180,184,185,186,188,189,190,191,193,200,221,227,],[97,97,97,97,97,126,128,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'llamada':([74,76,78,87,88,94,95,103,115,120,121,122,123,124,132,148,151,176,180,184,185,186,188,189,190,191,193,200,221,227,],[98,98,98,98,98,127,129,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'aux_escritura':([75,194,195,],[102,215,216,]),'pn_push_write_operator':([75,194,195,],[103,103,103,]),'aux_lectura':([77,218,224,],[105,225,229,]),'pn_push_read_operator':([77,218,224,],[106,106,106,]),'pn_push_operator':([86,114,144,160,161,162,163,175,],[115,148,176,188,189,190,191,200,]),'aux_expresion':([90,154,156,],[119,183,187,]),'pn_addition_substraction':([93,],[125,]),'pn_multiplication_division':([96,],[130,]),'pn_push_constant_and_type':([100,101,],[133,134,]),'letrero':([103,],[136,]),'aux_llamada':([132,193,],[164,214,]),'pn_write':([136,137,],[167,168,]),'aux_letrero':([138,171,],[170,197,]),'pn_assign':([149,178,],[179,202,]),'pn_read':([173,],[198,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON vars aux_funcion main','program',6,'p_program','main.py',183),
  ('program -> PROGRAM ID SEMICOLON vars main','program',5,'p_program','main.py',184),
  ('program -> PROGRAM ID SEMICOLON aux_funcion main','program',5,'p_program','main.py',185),
  ('program -> PROGRAM ID SEMICOLON main','program',4,'p_program','main.py',186),
  ('main -> MAIN pn_current_function LPAREN RPAREN vars bloque','main',6,'p_main','main.py',195),
  ('main -> MAIN pn_current_function LPAREN RPAREN bloque','main',5,'p_main','main.py',196),
  ('aux_funcion -> funcion','aux_funcion',1,'p_aux_funcion','main.py',200),
  ('aux_funcion -> funcion aux_funcion','aux_funcion',2,'p_aux_funcion','main.py',201),
  ('funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN vars bloque','funcion',9,'p_funcion','main.py',205),
  ('funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN bloque','funcion',8,'p_funcion','main.py',206),
  ('funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN vars bloque','funcion',8,'p_funcion','main.py',207),
  ('funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN bloque','funcion',7,'p_funcion','main.py',208),
  ('vars -> VAR var','vars',2,'p_vars','main.py',212),
  ('var -> tipo COLON lista_ids SEMICOLON','var',4,'p_var','main.py',216),
  ('var -> tipo COLON lista_ids SEMICOLON var','var',5,'p_var','main.py',217),
  ('tipo_retorno -> tipo','tipo_retorno',1,'p_tipo_retorno','main.py',220),
  ('tipo_retorno -> VOID pn_current_type','tipo_retorno',2,'p_tipo_retorno','main.py',221),
  ('tipo -> INT pn_current_type','tipo',2,'p_tipo','main.py',224),
  ('tipo -> FLOAT pn_current_type','tipo',2,'p_tipo','main.py',225),
  ('tipo -> CHAR pn_current_type','tipo',2,'p_tipo','main.py',226),
  ('parametros -> tipo ID','parametros',2,'p_parametros','main.py',230),
  ('parametros -> tipo ID COMMA parametros','parametros',4,'p_parametros','main.py',231),
  ('lista_ids -> aux_lista_rec','lista_ids',1,'p_lista_ids','main.py',235),
  ('aux_lista_rec -> aux_lista','aux_lista_rec',1,'p_aux_lista_rec','main.py',239),
  ('aux_lista_rec -> aux_lista COMMA aux_lista_rec','aux_lista_rec',3,'p_aux_lista_rec','main.py',240),
  ('aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE','aux_lista',8,'p_aux_lista','main.py',244),
  ('aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE','aux_lista',5,'p_aux_lista','main.py',245),
  ('aux_lista -> ID pn_add_symbol','aux_lista',2,'p_aux_lista','main.py',246),
  ('escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON','escritura',5,'p_escritura','main.py',250),
  ('aux_escritura -> pn_push_write_operator letrero pn_write','aux_escritura',3,'p_aux_escritura','main.py',254),
  ('aux_escritura -> pn_push_write_operator expresion pn_write','aux_escritura',3,'p_aux_escritura','main.py',255),
  ('aux_escritura -> pn_push_write_operator letrero pn_write COMMA aux_escritura','aux_escritura',5,'p_aux_escritura','main.py',256),
  ('aux_escritura -> pn_push_write_operator expresion pn_write COMMA aux_escritura','aux_escritura',5,'p_aux_escritura','main.py',257),
  ('condicional -> WHILE LPAREN expresion RPAREN DO bloque','condicional',6,'p_condicional','main.py',261),
  ('bloque -> LBRACKET estatutos RBRACKET','bloque',3,'p_bloque','main.py',265),
  ('bloque -> LBRACKET RBRACKET','bloque',2,'p_bloque','main.py',266),
  ('estatutos -> estatuto estatutos','estatutos',2,'p_estatutos','main.py',270),
  ('estatutos -> estatuto','estatutos',1,'p_estatutos','main.py',271),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','main.py',275),
  ('estatuto -> condicional','estatuto',1,'p_estatuto','main.py',276),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','main.py',277),
  ('estatuto -> retorno','estatuto',1,'p_estatuto','main.py',278),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','main.py',279),
  ('estatuto -> decision','estatuto',1,'p_estatuto','main.py',280),
  ('estatuto -> no_condicional','estatuto',1,'p_estatuto','main.py',281),
  ('asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON','asignacion',8,'p_asignacion','main.py',285),
  ('asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON','asignacion',7,'p_asignacion','main.py',286),
  ('retorno -> RETURN LPAREN expresion RPAREN','retorno',4,'p_retorno','main.py',290),
  ('lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON','lectura',5,'p_lectura','main.py',294),
  ('aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read','aux_lectura',4,'p_aux_lectura','main.py',300),
  ('aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones','aux_lectura',5,'p_aux_lectura','main.py',301),
  ('aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read COMMA aux_lectura','aux_lectura',6,'p_aux_lectura','main.py',302),
  ('aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones COMMA aux_lectura','aux_lectura',7,'p_aux_lectura','main.py',303),
  ('letrero -> QUOTATION aux_letrero QUOTATION','letrero',3,'p_letrero','main.py',306),
  ('letrero -> QUOTATION QUOTATION','letrero',2,'p_letrero','main.py',307),
  ('aux_letrero -> CTE_CHAR','aux_letrero',1,'p_aux_letrero','main.py',311),
  ('aux_letrero -> CTE_CHAR aux_letrero','aux_letrero',2,'p_aux_letrero','main.py',312),
  ('decision -> IF LPAREN expresion RPAREN THEN bloque','decision',6,'p_decision','main.py',316),
  ('decision -> IF LPAREN expresion RPAREN THEN bloque ELSE bloque','decision',8,'p_decision','main.py',317),
  ('llamada -> ID LPAREN aux_llamada RPAREN SEMICOLON','llamada',5,'p_llamada','main.py',328),
  ('aux_llamada -> expresion','aux_llamada',1,'p_aux_llamada','main.py',332),
  ('aux_llamada -> expresion COMMA aux_llamada','aux_llamada',3,'p_aux_llamada','main.py',333),
  ('no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion TO expresion DO bloque','no_condicional',11,'p_no_condicional','main.py',337),
  ('no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion TO expresion DO bloque','no_condicional',10,'p_no_condicional','main.py',338),
  ('dimensiones -> LSQUARE expresion RSQUARE LSQUARE expresion RSQUARE','dimensiones',6,'p_dimensiones','main.py',342),
  ('dimensiones -> LSQUARE expresion COMMA expresion RSQUARE','dimensiones',5,'p_dimensiones','main.py',343),
  ('dimensiones -> LSQUARE expresion RSQUARE','dimensiones',3,'p_dimensiones','main.py',344),
  ('expresion -> comparacion aux_expresion','expresion',2,'p_expresion','main.py',348),
  ('expresion -> aux_comparacion','expresion',1,'p_expresion','main.py',349),
  ('aux_expresion -> AND comparacion','aux_expresion',2,'p_aux_expresion','main.py',353),
  ('aux_expresion -> OR comparacion','aux_expresion',2,'p_aux_expresion','main.py',354),
  ('aux_expresion -> AND comparacion aux_expresion','aux_expresion',3,'p_aux_expresion','main.py',355),
  ('aux_expresion -> OR comparacion aux_expresion','aux_expresion',3,'p_aux_expresion','main.py',356),
  ('comparacion -> exp LESSTHAN exp','comparacion',3,'p_comparacion','main.py',360),
  ('comparacion -> exp GREATERTHAN exp','comparacion',3,'p_comparacion','main.py',361),
  ('comparacion -> exp EQUAL exp','comparacion',3,'p_comparacion','main.py',362),
  ('aux_comparacion -> exp LESSTHAN exp','aux_comparacion',3,'p_aux_comparacion','main.py',366),
  ('aux_comparacion -> exp GREATERTHAN exp','aux_comparacion',3,'p_aux_comparacion','main.py',367),
  ('aux_comparacion -> exp EQUAL exp','aux_comparacion',3,'p_aux_comparacion','main.py',368),
  ('aux_comparacion -> exp','aux_comparacion',1,'p_aux_comparacion','main.py',369),
  ('exp -> termino pn_addition_substraction','exp',2,'p_exp','main.py',373),
  ('exp -> termino pn_addition_substraction PLUS pn_push_operator exp','exp',5,'p_exp','main.py',374),
  ('exp -> termino pn_addition_substraction MINUS pn_push_operator exp','exp',5,'p_exp','main.py',375),
  ('termino -> factor pn_multiplication_division','termino',2,'p_termino','main.py',379),
  ('termino -> factor pn_multiplication_division MULT pn_push_operator termino','termino',5,'p_termino','main.py',380),
  ('termino -> factor pn_multiplication_division DIV pn_push_operator termino','termino',5,'p_termino','main.py',381),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor','main.py',385),
  ('factor -> PLUS var_cte','factor',2,'p_factor','main.py',386),
  ('factor -> PLUS llamada','factor',2,'p_factor','main.py',387),
  ('factor -> MINUS var_cte','factor',2,'p_factor','main.py',388),
  ('factor -> MINUS llamada','factor',2,'p_factor','main.py',389),
  ('factor -> var_cte','factor',1,'p_factor','main.py',390),
  ('factor -> llamada','factor',1,'p_factor','main.py',391),
  ('var_cte -> ID pn_push_operand_and_type','var_cte',2,'p_var_cte','main.py',395),
  ('var_cte -> CTE_INT pn_push_constant_and_type','var_cte',2,'p_var_cte','main.py',396),
  ('var_cte -> CTE_FLOAT pn_push_constant_and_type','var_cte',2,'p_var_cte','main.py',397),
  ('pn_current_function -> <empty>','pn_current_function',0,'p_pn_current_function','main.py',407),
  ('pn_current_type -> <empty>','pn_current_type',0,'p_pn_current_type','main.py',413),
  ('pn_add_symbol -> <empty>','pn_add_symbol',0,'p_pn_add_symbol','main.py',419),
  ('pn_push_constant_and_type -> <empty>','pn_push_constant_and_type',0,'p_pn_push_constant_and_type','main.py',461),
  ('pn_push_operand_and_type -> <empty>','pn_push_operand_and_type',0,'p_pn_push_operand_and_type','main.py',483),
  ('pn_push_operator -> <empty>','pn_push_operator',0,'p_pn_push_operator','main.py',503),
  ('pn_addition_substraction -> <empty>','pn_addition_substraction',0,'p_pn_addition_substraction','main.py',511),
  ('pn_multiplication_division -> <empty>','pn_multiplication_division',0,'p_pn_multiplication_division','main.py',540),
  ('pn_assign -> <empty>','pn_assign',0,'p_pn_assign','main.py',571),
  ('pn_push_read_operator -> <empty>','pn_push_read_operator',0,'p_pn_push_read_operator','main.py',603),
  ('pn_read -> <empty>','pn_read',0,'p_pn_read','main.py',607),
  ('pn_push_write_operator -> <empty>','pn_push_write_operator',0,'p_pn_push_write_operator','main.py',619),
  ('pn_write -> <empty>','pn_write',0,'p_pn_write','main.py',623),
]
