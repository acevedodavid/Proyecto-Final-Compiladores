Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON vars aux_funcion main
Rule 2     program -> PROGRAM ID SEMICOLON vars main
Rule 3     program -> PROGRAM ID SEMICOLON aux_funcion main
Rule 4     program -> PROGRAM ID SEMICOLON main
Rule 5     main -> MAIN pn_current_function LPAREN RPAREN vars bloque
Rule 6     main -> MAIN pn_current_function LPAREN RPAREN bloque
Rule 7     aux_funcion -> funcion
Rule 8     aux_funcion -> funcion aux_funcion
Rule 9     funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN vars bloque
Rule 10    funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN bloque
Rule 11    funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN vars bloque
Rule 12    funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN bloque
Rule 13    vars -> VAR var
Rule 14    var -> tipo COLON lista_ids SEMICOLON
Rule 15    var -> tipo COLON lista_ids SEMICOLON var
Rule 16    tipo_retorno -> tipo
Rule 17    tipo_retorno -> VOID pn_current_type
Rule 18    tipo -> INT pn_current_type
Rule 19    tipo -> FLOAT pn_current_type
Rule 20    tipo -> CHAR pn_current_type
Rule 21    parametros -> tipo ID
Rule 22    parametros -> tipo ID COMMA parametros
Rule 23    lista_ids -> aux_lista_rec
Rule 24    aux_lista_rec -> aux_lista
Rule 25    aux_lista_rec -> aux_lista COMMA aux_lista_rec
Rule 26    aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE
Rule 27    aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE
Rule 28    aux_lista -> ID pn_add_symbol
Rule 29    escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON
Rule 30    aux_escritura -> letrero
Rule 31    aux_escritura -> expresion
Rule 32    aux_escritura -> letrero COMMA aux_escritura
Rule 33    aux_escritura -> expresion COMMA aux_escritura
Rule 34    condicional -> WHILE LPAREN expresion RPAREN DO bloque
Rule 35    bloque -> LBRACKET estatutos RBRACKET
Rule 36    bloque -> LBRACKET RBRACKET
Rule 37    estatutos -> estatuto estatutos
Rule 38    estatutos -> estatuto
Rule 39    estatuto -> asignacion
Rule 40    estatuto -> condicional
Rule 41    estatuto -> escritura
Rule 42    estatuto -> retorno
Rule 43    estatuto -> lectura
Rule 44    estatuto -> llamada_void
Rule 45    estatuto -> decision
Rule 46    estatuto -> no_condicional
Rule 47    asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON
Rule 48    asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON
Rule 49    retorno -> RETURN LPAREN expresion RPAREN
Rule 50    lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON
Rule 51    aux_lectura -> ID pn_push_operand_and_type
Rule 52    aux_lectura -> ID pn_push_operand_and_type dimensiones
Rule 53    aux_lectura -> ID pn_push_operand_and_type COMMA aux_lectura
Rule 54    aux_lectura -> ID pn_push_operand_and_type dimensiones COMMA aux_lectura
Rule 55    letrero -> QUOTATION aux_letrero QUOTATION
Rule 56    letrero -> QUOTATION QUOTATION
Rule 57    aux_letrero -> CTE_CHAR
Rule 58    aux_letrero -> CTE_CHAR aux_letrero
Rule 59    decision -> IF LPAREN expresion RPAREN THEN bloque
Rule 60    decision -> IF LPAREN expresion RPAREN THEN bloque ELSE bloque
Rule 61    llamada_void -> llamada
Rule 62    llamada -> ID LPAREN aux_llamada RPAREN
Rule 63    aux_llamada -> expresion
Rule 64    aux_llamada -> expresion aux_llamada
Rule 65    no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion TO expresion DO bloque
Rule 66    no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion TO expresion DO bloque
Rule 67    dimensiones -> LSQUARE expresion RSQUARE LSQUARE expresion RSQUARE
Rule 68    dimensiones -> LSQUARE expresion COMMA expresion RSQUARE
Rule 69    dimensiones -> LSQUARE expresion RSQUARE
Rule 70    expresion -> comparacion aux_expresion
Rule 71    expresion -> aux_comparacion
Rule 72    aux_expresion -> AND comparacion
Rule 73    aux_expresion -> OR comparacion
Rule 74    aux_expresion -> AND comparacion aux_expresion
Rule 75    aux_expresion -> OR comparacion aux_expresion
Rule 76    comparacion -> exp LESSTHAN exp
Rule 77    comparacion -> exp GREATERTHAN exp
Rule 78    comparacion -> exp EQUAL exp
Rule 79    aux_comparacion -> exp LESSTHAN exp
Rule 80    aux_comparacion -> exp GREATERTHAN exp
Rule 81    aux_comparacion -> exp EQUAL exp
Rule 82    aux_comparacion -> exp
Rule 83    exp -> termino pn_addition_substraction
Rule 84    exp -> termino pn_addition_substraction PLUS pn_push_operator exp
Rule 85    exp -> termino pn_addition_substraction MINUS pn_push_operator exp
Rule 86    termino -> factor pn_multiplication_division
Rule 87    termino -> factor pn_multiplication_division MULT pn_push_operator termino
Rule 88    termino -> factor pn_multiplication_division DIV pn_push_operator termino
Rule 89    factor -> LPAREN expresion RPAREN
Rule 90    factor -> PLUS var_cte
Rule 91    factor -> PLUS llamada
Rule 92    factor -> MINUS var_cte
Rule 93    factor -> MINUS llamada
Rule 94    factor -> var_cte
Rule 95    factor -> llamada
Rule 96    var_cte -> ID pn_push_operand_and_type
Rule 97    var_cte -> CTE_INT pn_push_constant_and_type
Rule 98    var_cte -> CTE_FLOAT pn_push_constant_and_type
Rule 99    pn_current_function -> <empty>
Rule 100   pn_current_type -> <empty>
Rule 101   pn_add_symbol -> <empty>
Rule 102   pn_push_constant_and_type -> <empty>
Rule 103   pn_push_operand_and_type -> <empty>
Rule 104   pn_push_operator -> <empty>
Rule 105   pn_addition_substraction -> <empty>
Rule 106   pn_multiplication_division -> <empty>
Rule 107   pn_assign -> <empty>

Terminals, with rules where they appear

AND                  : 72 74
ASSIGN               : 47 48 65 66
CHAR                 : 20
COLON                : 14 15
COMMA                : 22 25 32 33 53 54 68
CTE_CHAR             : 57 58
CTE_FLOAT            : 98
CTE_INT              : 26 26 27 97
DIV                  : 88
DO                   : 34 65 66
ELSE                 : 60
EQUAL                : 78 81
FLOAT                : 19
FOR                  : 65 66
GREATERTHAN          : 77 80
ID                   : 1 2 3 4 9 10 11 12 21 22 26 27 28 47 48 51 52 53 54 62 65 66 96
IF                   : 59 60
INT                  : 18
LBRACKET             : 35 36
LESSTHAN             : 76 79
LPAREN               : 5 6 9 10 11 12 29 34 49 50 59 60 62 89
LSQUARE              : 26 26 27 67 67 68 69
MAIN                 : 5 6
MINUS                : 85 92 93
MODULE               : 9 10 11 12
MULT                 : 87
OR                   : 73 75
PLUS                 : 84 90 91
PROGRAM              : 1 2 3 4
QUOTATION            : 55 55 56 56
RBRACKET             : 35 36
READ                 : 50
RETURN               : 49
RPAREN               : 5 6 9 10 11 12 29 34 49 50 59 60 62 89
RSQUARE              : 26 26 27 67 67 68 69
SEMICOLON            : 1 2 3 4 14 15 29 47 48 50
THEN                 : 59 60
TO                   : 65 66
VAR                  : 13
VOID                 : 17
WHILE                : 34
WRITE                : 29
error                : 

Nonterminals, with rules where they appear

asignacion           : 39
aux_comparacion      : 71
aux_escritura        : 29 32 33
aux_expresion        : 70 74 75
aux_funcion          : 1 3 8
aux_lectura          : 50 53 54
aux_letrero          : 55 58
aux_lista            : 24 25
aux_lista_rec        : 23 25
aux_llamada          : 62 64
bloque               : 5 6 9 10 11 12 34 59 60 60 65 66
comparacion          : 70 72 73 74 75
condicional          : 40
decision             : 45
dimensiones          : 47 52 54 65
escritura            : 41
estatuto             : 37 38
estatutos            : 35 37
exp                  : 76 76 77 77 78 78 79 79 80 80 81 81 82 84 85
expresion            : 31 33 34 47 48 49 59 60 63 64 65 65 66 66 67 67 68 68 69 89
factor               : 86 87 88
funcion              : 7 8
lectura              : 43
letrero              : 30 32
lista_ids            : 14 15
llamada              : 61 91 93 95
llamada_void         : 44
main                 : 1 2 3 4
no_condicional       : 46
parametros           : 9 10 22
pn_add_symbol        : 26 27 28
pn_addition_substraction : 83 84 85
pn_assign            : 47 48
pn_current_function  : 5 6 9 10 11 12
pn_current_type      : 17 18 19 20
pn_multiplication_division : 86 87 88
pn_push_constant_and_type : 97 98
pn_push_operand_and_type : 47 48 51 52 53 54 65 66 96
pn_push_operator     : 47 48 65 66 84 85 87 88
program              : 0
retorno              : 42
termino              : 83 84 85 87 88
tipo                 : 14 15 16 21 22
tipo_retorno         : 9 10 11 12
var                  : 13 15
var_cte              : 90 92 94
vars                 : 1 2 5 9 11

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON vars aux_funcion main
    (2) program -> . PROGRAM ID SEMICOLON vars main
    (3) program -> . PROGRAM ID SEMICOLON aux_funcion main
    (4) program -> . PROGRAM ID SEMICOLON main

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON vars aux_funcion main
    (2) program -> PROGRAM . ID SEMICOLON vars main
    (3) program -> PROGRAM . ID SEMICOLON aux_funcion main
    (4) program -> PROGRAM . ID SEMICOLON main

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON vars aux_funcion main
    (2) program -> PROGRAM ID . SEMICOLON vars main
    (3) program -> PROGRAM ID . SEMICOLON aux_funcion main
    (4) program -> PROGRAM ID . SEMICOLON main

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . vars aux_funcion main
    (2) program -> PROGRAM ID SEMICOLON . vars main
    (3) program -> PROGRAM ID SEMICOLON . aux_funcion main
    (4) program -> PROGRAM ID SEMICOLON . main
    (13) vars -> . VAR var
    (7) aux_funcion -> . funcion
    (8) aux_funcion -> . funcion aux_funcion
    (5) main -> . MAIN pn_current_function LPAREN RPAREN vars bloque
    (6) main -> . MAIN pn_current_function LPAREN RPAREN bloque
    (9) funcion -> . tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN vars bloque
    (10) funcion -> . tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN bloque
    (11) funcion -> . tipo_retorno MODULE ID pn_current_function LPAREN RPAREN vars bloque
    (12) funcion -> . tipo_retorno MODULE ID pn_current_function LPAREN RPAREN bloque
    (16) tipo_retorno -> . tipo
    (17) tipo_retorno -> . VOID pn_current_type
    (18) tipo -> . INT pn_current_type
    (19) tipo -> . FLOAT pn_current_type
    (20) tipo -> . CHAR pn_current_type

    VAR             shift and go to state 8
    MAIN            shift and go to state 10
    VOID            shift and go to state 13
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    vars                           shift and go to state 5
    aux_funcion                    shift and go to state 6
    main                           shift and go to state 7
    funcion                        shift and go to state 9
    tipo_retorno                   shift and go to state 11
    tipo                           shift and go to state 12

state 5

    (1) program -> PROGRAM ID SEMICOLON vars . aux_funcion main
    (2) program -> PROGRAM ID SEMICOLON vars . main
    (7) aux_funcion -> . funcion
    (8) aux_funcion -> . funcion aux_funcion
    (5) main -> . MAIN pn_current_function LPAREN RPAREN vars bloque
    (6) main -> . MAIN pn_current_function LPAREN RPAREN bloque
    (9) funcion -> . tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN vars bloque
    (10) funcion -> . tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN bloque
    (11) funcion -> . tipo_retorno MODULE ID pn_current_function LPAREN RPAREN vars bloque
    (12) funcion -> . tipo_retorno MODULE ID pn_current_function LPAREN RPAREN bloque
    (16) tipo_retorno -> . tipo
    (17) tipo_retorno -> . VOID pn_current_type
    (18) tipo -> . INT pn_current_type
    (19) tipo -> . FLOAT pn_current_type
    (20) tipo -> . CHAR pn_current_type

    MAIN            shift and go to state 10
    VOID            shift and go to state 13
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    aux_funcion                    shift and go to state 17
    main                           shift and go to state 18
    funcion                        shift and go to state 9
    tipo_retorno                   shift and go to state 11
    tipo                           shift and go to state 12

state 6

    (3) program -> PROGRAM ID SEMICOLON aux_funcion . main
    (5) main -> . MAIN pn_current_function LPAREN RPAREN vars bloque
    (6) main -> . MAIN pn_current_function LPAREN RPAREN bloque

    MAIN            shift and go to state 10

    main                           shift and go to state 19

state 7

    (4) program -> PROGRAM ID SEMICOLON main .

    $end            reduce using rule 4 (program -> PROGRAM ID SEMICOLON main .)


state 8

    (13) vars -> VAR . var
    (14) var -> . tipo COLON lista_ids SEMICOLON
    (15) var -> . tipo COLON lista_ids SEMICOLON var
    (18) tipo -> . INT pn_current_type
    (19) tipo -> . FLOAT pn_current_type
    (20) tipo -> . CHAR pn_current_type

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    var                            shift and go to state 20
    tipo                           shift and go to state 21

state 9

    (7) aux_funcion -> funcion .
    (8) aux_funcion -> funcion . aux_funcion
    (7) aux_funcion -> . funcion
    (8) aux_funcion -> . funcion aux_funcion
    (9) funcion -> . tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN vars bloque
    (10) funcion -> . tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN bloque
    (11) funcion -> . tipo_retorno MODULE ID pn_current_function LPAREN RPAREN vars bloque
    (12) funcion -> . tipo_retorno MODULE ID pn_current_function LPAREN RPAREN bloque
    (16) tipo_retorno -> . tipo
    (17) tipo_retorno -> . VOID pn_current_type
    (18) tipo -> . INT pn_current_type
    (19) tipo -> . FLOAT pn_current_type
    (20) tipo -> . CHAR pn_current_type

    MAIN            reduce using rule 7 (aux_funcion -> funcion .)
    VOID            shift and go to state 13
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    funcion                        shift and go to state 9
    aux_funcion                    shift and go to state 22
    tipo_retorno                   shift and go to state 11
    tipo                           shift and go to state 12

state 10

    (5) main -> MAIN . pn_current_function LPAREN RPAREN vars bloque
    (6) main -> MAIN . pn_current_function LPAREN RPAREN bloque
    (99) pn_current_function -> .

    LPAREN          reduce using rule 99 (pn_current_function -> .)

    pn_current_function            shift and go to state 23

state 11

    (9) funcion -> tipo_retorno . MODULE ID pn_current_function LPAREN parametros RPAREN vars bloque
    (10) funcion -> tipo_retorno . MODULE ID pn_current_function LPAREN parametros RPAREN bloque
    (11) funcion -> tipo_retorno . MODULE ID pn_current_function LPAREN RPAREN vars bloque
    (12) funcion -> tipo_retorno . MODULE ID pn_current_function LPAREN RPAREN bloque

    MODULE          shift and go to state 24


state 12

    (16) tipo_retorno -> tipo .

    MODULE          reduce using rule 16 (tipo_retorno -> tipo .)


state 13

    (17) tipo_retorno -> VOID . pn_current_type
    (100) pn_current_type -> .

    MODULE          reduce using rule 100 (pn_current_type -> .)

    pn_current_type                shift and go to state 25

state 14

    (18) tipo -> INT . pn_current_type
    (100) pn_current_type -> .

    MODULE          reduce using rule 100 (pn_current_type -> .)
    COLON           reduce using rule 100 (pn_current_type -> .)
    ID              reduce using rule 100 (pn_current_type -> .)

    pn_current_type                shift and go to state 26

state 15

    (19) tipo -> FLOAT . pn_current_type
    (100) pn_current_type -> .

    MODULE          reduce using rule 100 (pn_current_type -> .)
    COLON           reduce using rule 100 (pn_current_type -> .)
    ID              reduce using rule 100 (pn_current_type -> .)

    pn_current_type                shift and go to state 27

state 16

    (20) tipo -> CHAR . pn_current_type
    (100) pn_current_type -> .

    MODULE          reduce using rule 100 (pn_current_type -> .)
    COLON           reduce using rule 100 (pn_current_type -> .)
    ID              reduce using rule 100 (pn_current_type -> .)

    pn_current_type                shift and go to state 28

state 17

    (1) program -> PROGRAM ID SEMICOLON vars aux_funcion . main
    (5) main -> . MAIN pn_current_function LPAREN RPAREN vars bloque
    (6) main -> . MAIN pn_current_function LPAREN RPAREN bloque

    MAIN            shift and go to state 10

    main                           shift and go to state 29

state 18

    (2) program -> PROGRAM ID SEMICOLON vars main .

    $end            reduce using rule 2 (program -> PROGRAM ID SEMICOLON vars main .)


state 19

    (3) program -> PROGRAM ID SEMICOLON aux_funcion main .

    $end            reduce using rule 3 (program -> PROGRAM ID SEMICOLON aux_funcion main .)


state 20

    (13) vars -> VAR var .

    MAIN            reduce using rule 13 (vars -> VAR var .)
    VOID            reduce using rule 13 (vars -> VAR var .)
    INT             reduce using rule 13 (vars -> VAR var .)
    FLOAT           reduce using rule 13 (vars -> VAR var .)
    CHAR            reduce using rule 13 (vars -> VAR var .)
    LBRACKET        reduce using rule 13 (vars -> VAR var .)


state 21

    (14) var -> tipo . COLON lista_ids SEMICOLON
    (15) var -> tipo . COLON lista_ids SEMICOLON var

    COLON           shift and go to state 30


state 22

    (8) aux_funcion -> funcion aux_funcion .

    MAIN            reduce using rule 8 (aux_funcion -> funcion aux_funcion .)


state 23

    (5) main -> MAIN pn_current_function . LPAREN RPAREN vars bloque
    (6) main -> MAIN pn_current_function . LPAREN RPAREN bloque

    LPAREN          shift and go to state 31


state 24

    (9) funcion -> tipo_retorno MODULE . ID pn_current_function LPAREN parametros RPAREN vars bloque
    (10) funcion -> tipo_retorno MODULE . ID pn_current_function LPAREN parametros RPAREN bloque
    (11) funcion -> tipo_retorno MODULE . ID pn_current_function LPAREN RPAREN vars bloque
    (12) funcion -> tipo_retorno MODULE . ID pn_current_function LPAREN RPAREN bloque

    ID              shift and go to state 32


state 25

    (17) tipo_retorno -> VOID pn_current_type .

    MODULE          reduce using rule 17 (tipo_retorno -> VOID pn_current_type .)


state 26

    (18) tipo -> INT pn_current_type .

    MODULE          reduce using rule 18 (tipo -> INT pn_current_type .)
    COLON           reduce using rule 18 (tipo -> INT pn_current_type .)
    ID              reduce using rule 18 (tipo -> INT pn_current_type .)


state 27

    (19) tipo -> FLOAT pn_current_type .

    MODULE          reduce using rule 19 (tipo -> FLOAT pn_current_type .)
    COLON           reduce using rule 19 (tipo -> FLOAT pn_current_type .)
    ID              reduce using rule 19 (tipo -> FLOAT pn_current_type .)


state 28

    (20) tipo -> CHAR pn_current_type .

    MODULE          reduce using rule 20 (tipo -> CHAR pn_current_type .)
    COLON           reduce using rule 20 (tipo -> CHAR pn_current_type .)
    ID              reduce using rule 20 (tipo -> CHAR pn_current_type .)


state 29

    (1) program -> PROGRAM ID SEMICOLON vars aux_funcion main .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON vars aux_funcion main .)


state 30

    (14) var -> tipo COLON . lista_ids SEMICOLON
    (15) var -> tipo COLON . lista_ids SEMICOLON var
    (23) lista_ids -> . aux_lista_rec
    (24) aux_lista_rec -> . aux_lista
    (25) aux_lista_rec -> . aux_lista COMMA aux_lista_rec
    (26) aux_lista -> . ID pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE
    (27) aux_lista -> . ID pn_add_symbol LSQUARE CTE_INT RSQUARE
    (28) aux_lista -> . ID pn_add_symbol

    ID              shift and go to state 36

    lista_ids                      shift and go to state 33
    aux_lista_rec                  shift and go to state 34
    aux_lista                      shift and go to state 35

state 31

    (5) main -> MAIN pn_current_function LPAREN . RPAREN vars bloque
    (6) main -> MAIN pn_current_function LPAREN . RPAREN bloque

    RPAREN          shift and go to state 37


state 32

    (9) funcion -> tipo_retorno MODULE ID . pn_current_function LPAREN parametros RPAREN vars bloque
    (10) funcion -> tipo_retorno MODULE ID . pn_current_function LPAREN parametros RPAREN bloque
    (11) funcion -> tipo_retorno MODULE ID . pn_current_function LPAREN RPAREN vars bloque
    (12) funcion -> tipo_retorno MODULE ID . pn_current_function LPAREN RPAREN bloque
    (99) pn_current_function -> .

    LPAREN          reduce using rule 99 (pn_current_function -> .)

    pn_current_function            shift and go to state 38

state 33

    (14) var -> tipo COLON lista_ids . SEMICOLON
    (15) var -> tipo COLON lista_ids . SEMICOLON var

    SEMICOLON       shift and go to state 39


state 34

    (23) lista_ids -> aux_lista_rec .

    SEMICOLON       reduce using rule 23 (lista_ids -> aux_lista_rec .)


state 35

    (24) aux_lista_rec -> aux_lista .
    (25) aux_lista_rec -> aux_lista . COMMA aux_lista_rec

    SEMICOLON       reduce using rule 24 (aux_lista_rec -> aux_lista .)
    COMMA           shift and go to state 40


state 36

    (26) aux_lista -> ID . pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE
    (27) aux_lista -> ID . pn_add_symbol LSQUARE CTE_INT RSQUARE
    (28) aux_lista -> ID . pn_add_symbol
    (101) pn_add_symbol -> .

    LSQUARE         reduce using rule 101 (pn_add_symbol -> .)
    COMMA           reduce using rule 101 (pn_add_symbol -> .)
    SEMICOLON       reduce using rule 101 (pn_add_symbol -> .)

    pn_add_symbol                  shift and go to state 41

state 37

    (5) main -> MAIN pn_current_function LPAREN RPAREN . vars bloque
    (6) main -> MAIN pn_current_function LPAREN RPAREN . bloque
    (13) vars -> . VAR var
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    VAR             shift and go to state 8
    LBRACKET        shift and go to state 44

    vars                           shift and go to state 42
    bloque                         shift and go to state 43

state 38

    (9) funcion -> tipo_retorno MODULE ID pn_current_function . LPAREN parametros RPAREN vars bloque
    (10) funcion -> tipo_retorno MODULE ID pn_current_function . LPAREN parametros RPAREN bloque
    (11) funcion -> tipo_retorno MODULE ID pn_current_function . LPAREN RPAREN vars bloque
    (12) funcion -> tipo_retorno MODULE ID pn_current_function . LPAREN RPAREN bloque

    LPAREN          shift and go to state 45


state 39

    (14) var -> tipo COLON lista_ids SEMICOLON .
    (15) var -> tipo COLON lista_ids SEMICOLON . var
    (14) var -> . tipo COLON lista_ids SEMICOLON
    (15) var -> . tipo COLON lista_ids SEMICOLON var
    (18) tipo -> . INT pn_current_type
    (19) tipo -> . FLOAT pn_current_type
    (20) tipo -> . CHAR pn_current_type

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    MAIN            reduce using rule 14 (var -> tipo COLON lista_ids SEMICOLON .)
    VOID            reduce using rule 14 (var -> tipo COLON lista_ids SEMICOLON .)
    LBRACKET        reduce using rule 14 (var -> tipo COLON lista_ids SEMICOLON .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

  ! INT             [ reduce using rule 14 (var -> tipo COLON lista_ids SEMICOLON .) ]
  ! FLOAT           [ reduce using rule 14 (var -> tipo COLON lista_ids SEMICOLON .) ]
  ! CHAR            [ reduce using rule 14 (var -> tipo COLON lista_ids SEMICOLON .) ]

    tipo                           shift and go to state 21
    var                            shift and go to state 46

state 40

    (25) aux_lista_rec -> aux_lista COMMA . aux_lista_rec
    (24) aux_lista_rec -> . aux_lista
    (25) aux_lista_rec -> . aux_lista COMMA aux_lista_rec
    (26) aux_lista -> . ID pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE
    (27) aux_lista -> . ID pn_add_symbol LSQUARE CTE_INT RSQUARE
    (28) aux_lista -> . ID pn_add_symbol

    ID              shift and go to state 36

    aux_lista                      shift and go to state 35
    aux_lista_rec                  shift and go to state 47

state 41

    (26) aux_lista -> ID pn_add_symbol . LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE
    (27) aux_lista -> ID pn_add_symbol . LSQUARE CTE_INT RSQUARE
    (28) aux_lista -> ID pn_add_symbol .

    LSQUARE         shift and go to state 48
    COMMA           reduce using rule 28 (aux_lista -> ID pn_add_symbol .)
    SEMICOLON       reduce using rule 28 (aux_lista -> ID pn_add_symbol .)


state 42

    (5) main -> MAIN pn_current_function LPAREN RPAREN vars . bloque
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 44

    bloque                         shift and go to state 49

state 43

    (6) main -> MAIN pn_current_function LPAREN RPAREN bloque .

    $end            reduce using rule 6 (main -> MAIN pn_current_function LPAREN RPAREN bloque .)


state 44

    (35) bloque -> LBRACKET . estatutos RBRACKET
    (36) bloque -> LBRACKET . RBRACKET
    (37) estatutos -> . estatuto estatutos
    (38) estatutos -> . estatuto
    (39) estatuto -> . asignacion
    (40) estatuto -> . condicional
    (41) estatuto -> . escritura
    (42) estatuto -> . retorno
    (43) estatuto -> . lectura
    (44) estatuto -> . llamada_void
    (45) estatuto -> . decision
    (46) estatuto -> . no_condicional
    (47) asignacion -> . ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON
    (48) asignacion -> . ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON
    (34) condicional -> . WHILE LPAREN expresion RPAREN DO bloque
    (29) escritura -> . WRITE LPAREN aux_escritura RPAREN SEMICOLON
    (49) retorno -> . RETURN LPAREN expresion RPAREN
    (50) lectura -> . READ LPAREN aux_lectura RPAREN SEMICOLON
    (61) llamada_void -> . llamada
    (59) decision -> . IF LPAREN expresion RPAREN THEN bloque
    (60) decision -> . IF LPAREN expresion RPAREN THEN bloque ELSE bloque
    (65) no_condicional -> . FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion TO expresion DO bloque
    (66) no_condicional -> . FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion TO expresion DO bloque
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    RBRACKET        shift and go to state 51
    ID              shift and go to state 61
    WHILE           shift and go to state 62
    WRITE           shift and go to state 63
    RETURN          shift and go to state 64
    READ            shift and go to state 65
    IF              shift and go to state 67
    FOR             shift and go to state 68

    estatutos                      shift and go to state 50
    estatuto                       shift and go to state 52
    asignacion                     shift and go to state 53
    condicional                    shift and go to state 54
    escritura                      shift and go to state 55
    retorno                        shift and go to state 56
    lectura                        shift and go to state 57
    llamada_void                   shift and go to state 58
    decision                       shift and go to state 59
    no_condicional                 shift and go to state 60
    llamada                        shift and go to state 66

state 45

    (9) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN . parametros RPAREN vars bloque
    (10) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN . parametros RPAREN bloque
    (11) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN . RPAREN vars bloque
    (12) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN . RPAREN bloque
    (21) parametros -> . tipo ID
    (22) parametros -> . tipo ID COMMA parametros
    (18) tipo -> . INT pn_current_type
    (19) tipo -> . FLOAT pn_current_type
    (20) tipo -> . CHAR pn_current_type

    RPAREN          shift and go to state 70
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    parametros                     shift and go to state 69
    tipo                           shift and go to state 71

state 46

    (15) var -> tipo COLON lista_ids SEMICOLON var .

    MAIN            reduce using rule 15 (var -> tipo COLON lista_ids SEMICOLON var .)
    VOID            reduce using rule 15 (var -> tipo COLON lista_ids SEMICOLON var .)
    INT             reduce using rule 15 (var -> tipo COLON lista_ids SEMICOLON var .)
    FLOAT           reduce using rule 15 (var -> tipo COLON lista_ids SEMICOLON var .)
    CHAR            reduce using rule 15 (var -> tipo COLON lista_ids SEMICOLON var .)
    LBRACKET        reduce using rule 15 (var -> tipo COLON lista_ids SEMICOLON var .)


state 47

    (25) aux_lista_rec -> aux_lista COMMA aux_lista_rec .

    SEMICOLON       reduce using rule 25 (aux_lista_rec -> aux_lista COMMA aux_lista_rec .)


state 48

    (26) aux_lista -> ID pn_add_symbol LSQUARE . CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE
    (27) aux_lista -> ID pn_add_symbol LSQUARE . CTE_INT RSQUARE

    CTE_INT         shift and go to state 72


state 49

    (5) main -> MAIN pn_current_function LPAREN RPAREN vars bloque .

    $end            reduce using rule 5 (main -> MAIN pn_current_function LPAREN RPAREN vars bloque .)


state 50

    (35) bloque -> LBRACKET estatutos . RBRACKET

    RBRACKET        shift and go to state 73


state 51

    (36) bloque -> LBRACKET RBRACKET .

    $end            reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    VOID            reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    INT             reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    FLOAT           reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    CHAR            reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    MAIN            reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    ID              reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    WHILE           reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    WRITE           reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    RETURN          reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    READ            reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    IF              reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    FOR             reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    ELSE            reduce using rule 36 (bloque -> LBRACKET RBRACKET .)


state 52

    (37) estatutos -> estatuto . estatutos
    (38) estatutos -> estatuto .
    (37) estatutos -> . estatuto estatutos
    (38) estatutos -> . estatuto
    (39) estatuto -> . asignacion
    (40) estatuto -> . condicional
    (41) estatuto -> . escritura
    (42) estatuto -> . retorno
    (43) estatuto -> . lectura
    (44) estatuto -> . llamada_void
    (45) estatuto -> . decision
    (46) estatuto -> . no_condicional
    (47) asignacion -> . ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON
    (48) asignacion -> . ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON
    (34) condicional -> . WHILE LPAREN expresion RPAREN DO bloque
    (29) escritura -> . WRITE LPAREN aux_escritura RPAREN SEMICOLON
    (49) retorno -> . RETURN LPAREN expresion RPAREN
    (50) lectura -> . READ LPAREN aux_lectura RPAREN SEMICOLON
    (61) llamada_void -> . llamada
    (59) decision -> . IF LPAREN expresion RPAREN THEN bloque
    (60) decision -> . IF LPAREN expresion RPAREN THEN bloque ELSE bloque
    (65) no_condicional -> . FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion TO expresion DO bloque
    (66) no_condicional -> . FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion TO expresion DO bloque
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    RBRACKET        reduce using rule 38 (estatutos -> estatuto .)
    ID              shift and go to state 61
    WHILE           shift and go to state 62
    WRITE           shift and go to state 63
    RETURN          shift and go to state 64
    READ            shift and go to state 65
    IF              shift and go to state 67
    FOR             shift and go to state 68

    estatuto                       shift and go to state 52
    estatutos                      shift and go to state 74
    asignacion                     shift and go to state 53
    condicional                    shift and go to state 54
    escritura                      shift and go to state 55
    retorno                        shift and go to state 56
    lectura                        shift and go to state 57
    llamada_void                   shift and go to state 58
    decision                       shift and go to state 59
    no_condicional                 shift and go to state 60
    llamada                        shift and go to state 66

state 53

    (39) estatuto -> asignacion .

    ID              reduce using rule 39 (estatuto -> asignacion .)
    WHILE           reduce using rule 39 (estatuto -> asignacion .)
    WRITE           reduce using rule 39 (estatuto -> asignacion .)
    RETURN          reduce using rule 39 (estatuto -> asignacion .)
    READ            reduce using rule 39 (estatuto -> asignacion .)
    IF              reduce using rule 39 (estatuto -> asignacion .)
    FOR             reduce using rule 39 (estatuto -> asignacion .)
    RBRACKET        reduce using rule 39 (estatuto -> asignacion .)


state 54

    (40) estatuto -> condicional .

    ID              reduce using rule 40 (estatuto -> condicional .)
    WHILE           reduce using rule 40 (estatuto -> condicional .)
    WRITE           reduce using rule 40 (estatuto -> condicional .)
    RETURN          reduce using rule 40 (estatuto -> condicional .)
    READ            reduce using rule 40 (estatuto -> condicional .)
    IF              reduce using rule 40 (estatuto -> condicional .)
    FOR             reduce using rule 40 (estatuto -> condicional .)
    RBRACKET        reduce using rule 40 (estatuto -> condicional .)


state 55

    (41) estatuto -> escritura .

    ID              reduce using rule 41 (estatuto -> escritura .)
    WHILE           reduce using rule 41 (estatuto -> escritura .)
    WRITE           reduce using rule 41 (estatuto -> escritura .)
    RETURN          reduce using rule 41 (estatuto -> escritura .)
    READ            reduce using rule 41 (estatuto -> escritura .)
    IF              reduce using rule 41 (estatuto -> escritura .)
    FOR             reduce using rule 41 (estatuto -> escritura .)
    RBRACKET        reduce using rule 41 (estatuto -> escritura .)


state 56

    (42) estatuto -> retorno .

    ID              reduce using rule 42 (estatuto -> retorno .)
    WHILE           reduce using rule 42 (estatuto -> retorno .)
    WRITE           reduce using rule 42 (estatuto -> retorno .)
    RETURN          reduce using rule 42 (estatuto -> retorno .)
    READ            reduce using rule 42 (estatuto -> retorno .)
    IF              reduce using rule 42 (estatuto -> retorno .)
    FOR             reduce using rule 42 (estatuto -> retorno .)
    RBRACKET        reduce using rule 42 (estatuto -> retorno .)


state 57

    (43) estatuto -> lectura .

    ID              reduce using rule 43 (estatuto -> lectura .)
    WHILE           reduce using rule 43 (estatuto -> lectura .)
    WRITE           reduce using rule 43 (estatuto -> lectura .)
    RETURN          reduce using rule 43 (estatuto -> lectura .)
    READ            reduce using rule 43 (estatuto -> lectura .)
    IF              reduce using rule 43 (estatuto -> lectura .)
    FOR             reduce using rule 43 (estatuto -> lectura .)
    RBRACKET        reduce using rule 43 (estatuto -> lectura .)


state 58

    (44) estatuto -> llamada_void .

    ID              reduce using rule 44 (estatuto -> llamada_void .)
    WHILE           reduce using rule 44 (estatuto -> llamada_void .)
    WRITE           reduce using rule 44 (estatuto -> llamada_void .)
    RETURN          reduce using rule 44 (estatuto -> llamada_void .)
    READ            reduce using rule 44 (estatuto -> llamada_void .)
    IF              reduce using rule 44 (estatuto -> llamada_void .)
    FOR             reduce using rule 44 (estatuto -> llamada_void .)
    RBRACKET        reduce using rule 44 (estatuto -> llamada_void .)


state 59

    (45) estatuto -> decision .

    ID              reduce using rule 45 (estatuto -> decision .)
    WHILE           reduce using rule 45 (estatuto -> decision .)
    WRITE           reduce using rule 45 (estatuto -> decision .)
    RETURN          reduce using rule 45 (estatuto -> decision .)
    READ            reduce using rule 45 (estatuto -> decision .)
    IF              reduce using rule 45 (estatuto -> decision .)
    FOR             reduce using rule 45 (estatuto -> decision .)
    RBRACKET        reduce using rule 45 (estatuto -> decision .)


state 60

    (46) estatuto -> no_condicional .

    ID              reduce using rule 46 (estatuto -> no_condicional .)
    WHILE           reduce using rule 46 (estatuto -> no_condicional .)
    WRITE           reduce using rule 46 (estatuto -> no_condicional .)
    RETURN          reduce using rule 46 (estatuto -> no_condicional .)
    READ            reduce using rule 46 (estatuto -> no_condicional .)
    IF              reduce using rule 46 (estatuto -> no_condicional .)
    FOR             reduce using rule 46 (estatuto -> no_condicional .)
    RBRACKET        reduce using rule 46 (estatuto -> no_condicional .)


state 61

    (47) asignacion -> ID . pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON
    (48) asignacion -> ID . pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON
    (62) llamada -> ID . LPAREN aux_llamada RPAREN
    (103) pn_push_operand_and_type -> .

    LPAREN          shift and go to state 76
    ASSIGN          reduce using rule 103 (pn_push_operand_and_type -> .)
    LSQUARE         reduce using rule 103 (pn_push_operand_and_type -> .)

    pn_push_operand_and_type       shift and go to state 75

state 62

    (34) condicional -> WHILE . LPAREN expresion RPAREN DO bloque

    LPAREN          shift and go to state 77


state 63

    (29) escritura -> WRITE . LPAREN aux_escritura RPAREN SEMICOLON

    LPAREN          shift and go to state 78


state 64

    (49) retorno -> RETURN . LPAREN expresion RPAREN

    LPAREN          shift and go to state 79


state 65

    (50) lectura -> READ . LPAREN aux_lectura RPAREN SEMICOLON

    LPAREN          shift and go to state 80


state 66

    (61) llamada_void -> llamada .

    ID              reduce using rule 61 (llamada_void -> llamada .)
    WHILE           reduce using rule 61 (llamada_void -> llamada .)
    WRITE           reduce using rule 61 (llamada_void -> llamada .)
    RETURN          reduce using rule 61 (llamada_void -> llamada .)
    READ            reduce using rule 61 (llamada_void -> llamada .)
    IF              reduce using rule 61 (llamada_void -> llamada .)
    FOR             reduce using rule 61 (llamada_void -> llamada .)
    RBRACKET        reduce using rule 61 (llamada_void -> llamada .)


state 67

    (59) decision -> IF . LPAREN expresion RPAREN THEN bloque
    (60) decision -> IF . LPAREN expresion RPAREN THEN bloque ELSE bloque

    LPAREN          shift and go to state 81


state 68

    (65) no_condicional -> FOR . ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion TO expresion DO bloque
    (66) no_condicional -> FOR . ID pn_push_operand_and_type ASSIGN pn_push_operator expresion TO expresion DO bloque

    ID              shift and go to state 82


state 69

    (9) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros . RPAREN vars bloque
    (10) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros . RPAREN bloque

    RPAREN          shift and go to state 83


state 70

    (11) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN . vars bloque
    (12) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN . bloque
    (13) vars -> . VAR var
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    VAR             shift and go to state 8
    LBRACKET        shift and go to state 44

    vars                           shift and go to state 84
    bloque                         shift and go to state 85

state 71

    (21) parametros -> tipo . ID
    (22) parametros -> tipo . ID COMMA parametros

    ID              shift and go to state 86


state 72

    (26) aux_lista -> ID pn_add_symbol LSQUARE CTE_INT . RSQUARE LSQUARE CTE_INT RSQUARE
    (27) aux_lista -> ID pn_add_symbol LSQUARE CTE_INT . RSQUARE

    RSQUARE         shift and go to state 87


state 73

    (35) bloque -> LBRACKET estatutos RBRACKET .

    $end            reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    VOID            reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    INT             reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    FLOAT           reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    CHAR            reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    MAIN            reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    ID              reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    WHILE           reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    WRITE           reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    RETURN          reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    READ            reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    IF              reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    FOR             reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    RBRACKET        reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    ELSE            reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)


state 74

    (37) estatutos -> estatuto estatutos .

    RBRACKET        reduce using rule 37 (estatutos -> estatuto estatutos .)


state 75

    (47) asignacion -> ID pn_push_operand_and_type . dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON
    (48) asignacion -> ID pn_push_operand_and_type . ASSIGN pn_push_operator expresion pn_assign SEMICOLON
    (67) dimensiones -> . LSQUARE expresion RSQUARE LSQUARE expresion RSQUARE
    (68) dimensiones -> . LSQUARE expresion COMMA expresion RSQUARE
    (69) dimensiones -> . LSQUARE expresion RSQUARE

    ASSIGN          shift and go to state 89
    LSQUARE         shift and go to state 90

    dimensiones                    shift and go to state 88

state 76

    (62) llamada -> ID LPAREN . aux_llamada RPAREN
    (63) aux_llamada -> . expresion
    (64) aux_llamada -> . expresion aux_llamada
    (70) expresion -> . comparacion aux_expresion
    (71) expresion -> . aux_comparacion
    (76) comparacion -> . exp LESSTHAN exp
    (77) comparacion -> . exp GREATERTHAN exp
    (78) comparacion -> . exp EQUAL exp
    (79) aux_comparacion -> . exp LESSTHAN exp
    (80) aux_comparacion -> . exp GREATERTHAN exp
    (81) aux_comparacion -> . exp EQUAL exp
    (82) aux_comparacion -> . exp
    (83) exp -> . termino pn_addition_substraction
    (84) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (85) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (86) termino -> . factor pn_multiplication_division
    (87) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (89) factor -> . LPAREN expresion RPAREN
    (90) factor -> . PLUS var_cte
    (91) factor -> . PLUS llamada
    (92) factor -> . MINUS var_cte
    (93) factor -> . MINUS llamada
    (94) factor -> . var_cte
    (95) factor -> . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 92
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    aux_llamada                    shift and go to state 93
    expresion                      shift and go to state 94
    comparacion                    shift and go to state 95
    aux_comparacion                shift and go to state 96
    exp                            shift and go to state 97
    termino                        shift and go to state 98
    factor                         shift and go to state 101
    var_cte                        shift and go to state 102
    llamada                        shift and go to state 103

state 77

    (34) condicional -> WHILE LPAREN . expresion RPAREN DO bloque
    (70) expresion -> . comparacion aux_expresion
    (71) expresion -> . aux_comparacion
    (76) comparacion -> . exp LESSTHAN exp
    (77) comparacion -> . exp GREATERTHAN exp
    (78) comparacion -> . exp EQUAL exp
    (79) aux_comparacion -> . exp LESSTHAN exp
    (80) aux_comparacion -> . exp GREATERTHAN exp
    (81) aux_comparacion -> . exp EQUAL exp
    (82) aux_comparacion -> . exp
    (83) exp -> . termino pn_addition_substraction
    (84) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (85) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (86) termino -> . factor pn_multiplication_division
    (87) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (89) factor -> . LPAREN expresion RPAREN
    (90) factor -> . PLUS var_cte
    (91) factor -> . PLUS llamada
    (92) factor -> . MINUS var_cte
    (93) factor -> . MINUS llamada
    (94) factor -> . var_cte
    (95) factor -> . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 92
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    expresion                      shift and go to state 106
    comparacion                    shift and go to state 95
    aux_comparacion                shift and go to state 96
    exp                            shift and go to state 97
    termino                        shift and go to state 98
    factor                         shift and go to state 101
    var_cte                        shift and go to state 102
    llamada                        shift and go to state 103

state 78

    (29) escritura -> WRITE LPAREN . aux_escritura RPAREN SEMICOLON
    (30) aux_escritura -> . letrero
    (31) aux_escritura -> . expresion
    (32) aux_escritura -> . letrero COMMA aux_escritura
    (33) aux_escritura -> . expresion COMMA aux_escritura
    (55) letrero -> . QUOTATION aux_letrero QUOTATION
    (56) letrero -> . QUOTATION QUOTATION
    (70) expresion -> . comparacion aux_expresion
    (71) expresion -> . aux_comparacion
    (76) comparacion -> . exp LESSTHAN exp
    (77) comparacion -> . exp GREATERTHAN exp
    (78) comparacion -> . exp EQUAL exp
    (79) aux_comparacion -> . exp LESSTHAN exp
    (80) aux_comparacion -> . exp GREATERTHAN exp
    (81) aux_comparacion -> . exp EQUAL exp
    (82) aux_comparacion -> . exp
    (83) exp -> . termino pn_addition_substraction
    (84) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (85) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (86) termino -> . factor pn_multiplication_division
    (87) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (89) factor -> . LPAREN expresion RPAREN
    (90) factor -> . PLUS var_cte
    (91) factor -> . PLUS llamada
    (92) factor -> . MINUS var_cte
    (93) factor -> . MINUS llamada
    (94) factor -> . var_cte
    (95) factor -> . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    QUOTATION       shift and go to state 110
    LPAREN          shift and go to state 92
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    aux_escritura                  shift and go to state 107
    letrero                        shift and go to state 108
    expresion                      shift and go to state 109
    comparacion                    shift and go to state 95
    aux_comparacion                shift and go to state 96
    exp                            shift and go to state 97
    termino                        shift and go to state 98
    factor                         shift and go to state 101
    var_cte                        shift and go to state 102
    llamada                        shift and go to state 103

state 79

    (49) retorno -> RETURN LPAREN . expresion RPAREN
    (70) expresion -> . comparacion aux_expresion
    (71) expresion -> . aux_comparacion
    (76) comparacion -> . exp LESSTHAN exp
    (77) comparacion -> . exp GREATERTHAN exp
    (78) comparacion -> . exp EQUAL exp
    (79) aux_comparacion -> . exp LESSTHAN exp
    (80) aux_comparacion -> . exp GREATERTHAN exp
    (81) aux_comparacion -> . exp EQUAL exp
    (82) aux_comparacion -> . exp
    (83) exp -> . termino pn_addition_substraction
    (84) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (85) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (86) termino -> . factor pn_multiplication_division
    (87) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (89) factor -> . LPAREN expresion RPAREN
    (90) factor -> . PLUS var_cte
    (91) factor -> . PLUS llamada
    (92) factor -> . MINUS var_cte
    (93) factor -> . MINUS llamada
    (94) factor -> . var_cte
    (95) factor -> . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 92
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    expresion                      shift and go to state 111
    comparacion                    shift and go to state 95
    aux_comparacion                shift and go to state 96
    exp                            shift and go to state 97
    termino                        shift and go to state 98
    factor                         shift and go to state 101
    var_cte                        shift and go to state 102
    llamada                        shift and go to state 103

state 80

    (50) lectura -> READ LPAREN . aux_lectura RPAREN SEMICOLON
    (51) aux_lectura -> . ID pn_push_operand_and_type
    (52) aux_lectura -> . ID pn_push_operand_and_type dimensiones
    (53) aux_lectura -> . ID pn_push_operand_and_type COMMA aux_lectura
    (54) aux_lectura -> . ID pn_push_operand_and_type dimensiones COMMA aux_lectura

    ID              shift and go to state 113

    aux_lectura                    shift and go to state 112

state 81

    (59) decision -> IF LPAREN . expresion RPAREN THEN bloque
    (60) decision -> IF LPAREN . expresion RPAREN THEN bloque ELSE bloque
    (70) expresion -> . comparacion aux_expresion
    (71) expresion -> . aux_comparacion
    (76) comparacion -> . exp LESSTHAN exp
    (77) comparacion -> . exp GREATERTHAN exp
    (78) comparacion -> . exp EQUAL exp
    (79) aux_comparacion -> . exp LESSTHAN exp
    (80) aux_comparacion -> . exp GREATERTHAN exp
    (81) aux_comparacion -> . exp EQUAL exp
    (82) aux_comparacion -> . exp
    (83) exp -> . termino pn_addition_substraction
    (84) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (85) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (86) termino -> . factor pn_multiplication_division
    (87) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (89) factor -> . LPAREN expresion RPAREN
    (90) factor -> . PLUS var_cte
    (91) factor -> . PLUS llamada
    (92) factor -> . MINUS var_cte
    (93) factor -> . MINUS llamada
    (94) factor -> . var_cte
    (95) factor -> . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 92
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    expresion                      shift and go to state 114
    comparacion                    shift and go to state 95
    aux_comparacion                shift and go to state 96
    exp                            shift and go to state 97
    termino                        shift and go to state 98
    factor                         shift and go to state 101
    var_cte                        shift and go to state 102
    llamada                        shift and go to state 103

state 82

    (65) no_condicional -> FOR ID . pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion TO expresion DO bloque
    (66) no_condicional -> FOR ID . pn_push_operand_and_type ASSIGN pn_push_operator expresion TO expresion DO bloque
    (103) pn_push_operand_and_type -> .

    ASSIGN          reduce using rule 103 (pn_push_operand_and_type -> .)
    LSQUARE         reduce using rule 103 (pn_push_operand_and_type -> .)

    pn_push_operand_and_type       shift and go to state 115

state 83

    (9) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN . vars bloque
    (10) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN . bloque
    (13) vars -> . VAR var
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    VAR             shift and go to state 8
    LBRACKET        shift and go to state 44

    vars                           shift and go to state 116
    bloque                         shift and go to state 117

state 84

    (11) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN vars . bloque
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 44

    bloque                         shift and go to state 118

state 85

    (12) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN bloque .

    VOID            reduce using rule 12 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN bloque .)
    INT             reduce using rule 12 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN bloque .)
    FLOAT           reduce using rule 12 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN bloque .)
    CHAR            reduce using rule 12 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN bloque .)
    MAIN            reduce using rule 12 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN bloque .)


state 86

    (21) parametros -> tipo ID .
    (22) parametros -> tipo ID . COMMA parametros

    RPAREN          reduce using rule 21 (parametros -> tipo ID .)
    COMMA           shift and go to state 119


state 87

    (26) aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE . LSQUARE CTE_INT RSQUARE
    (27) aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE .

    LSQUARE         shift and go to state 120
    COMMA           reduce using rule 27 (aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE .)
    SEMICOLON       reduce using rule 27 (aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE .)


state 88

    (47) asignacion -> ID pn_push_operand_and_type dimensiones . ASSIGN pn_push_operator expresion pn_assign SEMICOLON

    ASSIGN          shift and go to state 121


state 89

    (48) asignacion -> ID pn_push_operand_and_type ASSIGN . pn_push_operator expresion pn_assign SEMICOLON
    (104) pn_push_operator -> .

    LPAREN          reduce using rule 104 (pn_push_operator -> .)
    PLUS            reduce using rule 104 (pn_push_operator -> .)
    MINUS           reduce using rule 104 (pn_push_operator -> .)
    ID              reduce using rule 104 (pn_push_operator -> .)
    CTE_INT         reduce using rule 104 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 104 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 122

state 90

    (67) dimensiones -> LSQUARE . expresion RSQUARE LSQUARE expresion RSQUARE
    (68) dimensiones -> LSQUARE . expresion COMMA expresion RSQUARE
    (69) dimensiones -> LSQUARE . expresion RSQUARE
    (70) expresion -> . comparacion aux_expresion
    (71) expresion -> . aux_comparacion
    (76) comparacion -> . exp LESSTHAN exp
    (77) comparacion -> . exp GREATERTHAN exp
    (78) comparacion -> . exp EQUAL exp
    (79) aux_comparacion -> . exp LESSTHAN exp
    (80) aux_comparacion -> . exp GREATERTHAN exp
    (81) aux_comparacion -> . exp EQUAL exp
    (82) aux_comparacion -> . exp
    (83) exp -> . termino pn_addition_substraction
    (84) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (85) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (86) termino -> . factor pn_multiplication_division
    (87) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (89) factor -> . LPAREN expresion RPAREN
    (90) factor -> . PLUS var_cte
    (91) factor -> . PLUS llamada
    (92) factor -> . MINUS var_cte
    (93) factor -> . MINUS llamada
    (94) factor -> . var_cte
    (95) factor -> . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 92
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    expresion                      shift and go to state 123
    comparacion                    shift and go to state 95
    aux_comparacion                shift and go to state 96
    exp                            shift and go to state 97
    termino                        shift and go to state 98
    factor                         shift and go to state 101
    var_cte                        shift and go to state 102
    llamada                        shift and go to state 103

state 91

    (96) var_cte -> ID . pn_push_operand_and_type
    (62) llamada -> ID . LPAREN aux_llamada RPAREN
    (103) pn_push_operand_and_type -> .

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 76
    MULT            reduce using rule 103 (pn_push_operand_and_type -> .)
    DIV             reduce using rule 103 (pn_push_operand_and_type -> .)
    PLUS            reduce using rule 103 (pn_push_operand_and_type -> .)
    MINUS           reduce using rule 103 (pn_push_operand_and_type -> .)
    LESSTHAN        reduce using rule 103 (pn_push_operand_and_type -> .)
    GREATERTHAN     reduce using rule 103 (pn_push_operand_and_type -> .)
    EQUAL           reduce using rule 103 (pn_push_operand_and_type -> .)
    ID              reduce using rule 103 (pn_push_operand_and_type -> .)
    CTE_INT         reduce using rule 103 (pn_push_operand_and_type -> .)
    CTE_FLOAT       reduce using rule 103 (pn_push_operand_and_type -> .)
    RPAREN          reduce using rule 103 (pn_push_operand_and_type -> .)
    COMMA           reduce using rule 103 (pn_push_operand_and_type -> .)
    RSQUARE         reduce using rule 103 (pn_push_operand_and_type -> .)
    SEMICOLON       reduce using rule 103 (pn_push_operand_and_type -> .)
    AND             reduce using rule 103 (pn_push_operand_and_type -> .)
    OR              reduce using rule 103 (pn_push_operand_and_type -> .)
    TO              reduce using rule 103 (pn_push_operand_and_type -> .)
    DO              reduce using rule 103 (pn_push_operand_and_type -> .)

  ! LPAREN          [ reduce using rule 103 (pn_push_operand_and_type -> .) ]

    pn_push_operand_and_type       shift and go to state 124

state 92

    (89) factor -> LPAREN . expresion RPAREN
    (70) expresion -> . comparacion aux_expresion
    (71) expresion -> . aux_comparacion
    (76) comparacion -> . exp LESSTHAN exp
    (77) comparacion -> . exp GREATERTHAN exp
    (78) comparacion -> . exp EQUAL exp
    (79) aux_comparacion -> . exp LESSTHAN exp
    (80) aux_comparacion -> . exp GREATERTHAN exp
    (81) aux_comparacion -> . exp EQUAL exp
    (82) aux_comparacion -> . exp
    (83) exp -> . termino pn_addition_substraction
    (84) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (85) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (86) termino -> . factor pn_multiplication_division
    (87) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (89) factor -> . LPAREN expresion RPAREN
    (90) factor -> . PLUS var_cte
    (91) factor -> . PLUS llamada
    (92) factor -> . MINUS var_cte
    (93) factor -> . MINUS llamada
    (94) factor -> . var_cte
    (95) factor -> . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 92
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    expresion                      shift and go to state 125
    comparacion                    shift and go to state 95
    aux_comparacion                shift and go to state 96
    exp                            shift and go to state 97
    termino                        shift and go to state 98
    factor                         shift and go to state 101
    var_cte                        shift and go to state 102
    llamada                        shift and go to state 103

state 93

    (62) llamada -> ID LPAREN aux_llamada . RPAREN

    RPAREN          shift and go to state 126


state 94

    (63) aux_llamada -> expresion .
    (64) aux_llamada -> expresion . aux_llamada
    (63) aux_llamada -> . expresion
    (64) aux_llamada -> . expresion aux_llamada
    (70) expresion -> . comparacion aux_expresion
    (71) expresion -> . aux_comparacion
    (76) comparacion -> . exp LESSTHAN exp
    (77) comparacion -> . exp GREATERTHAN exp
    (78) comparacion -> . exp EQUAL exp
    (79) aux_comparacion -> . exp LESSTHAN exp
    (80) aux_comparacion -> . exp GREATERTHAN exp
    (81) aux_comparacion -> . exp EQUAL exp
    (82) aux_comparacion -> . exp
    (83) exp -> . termino pn_addition_substraction
    (84) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (85) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (86) termino -> . factor pn_multiplication_division
    (87) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (89) factor -> . LPAREN expresion RPAREN
    (90) factor -> . PLUS var_cte
    (91) factor -> . PLUS llamada
    (92) factor -> . MINUS var_cte
    (93) factor -> . MINUS llamada
    (94) factor -> . var_cte
    (95) factor -> . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    RPAREN          reduce using rule 63 (aux_llamada -> expresion .)
    LPAREN          shift and go to state 92
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    expresion                      shift and go to state 94
    aux_llamada                    shift and go to state 127
    comparacion                    shift and go to state 95
    aux_comparacion                shift and go to state 96
    exp                            shift and go to state 97
    termino                        shift and go to state 98
    factor                         shift and go to state 101
    var_cte                        shift and go to state 102
    llamada                        shift and go to state 103

state 95

    (70) expresion -> comparacion . aux_expresion
    (72) aux_expresion -> . AND comparacion
    (73) aux_expresion -> . OR comparacion
    (74) aux_expresion -> . AND comparacion aux_expresion
    (75) aux_expresion -> . OR comparacion aux_expresion

    AND             shift and go to state 129
    OR              shift and go to state 130

    aux_expresion                  shift and go to state 128

state 96

    (71) expresion -> aux_comparacion .

    LPAREN          reduce using rule 71 (expresion -> aux_comparacion .)
    PLUS            reduce using rule 71 (expresion -> aux_comparacion .)
    MINUS           reduce using rule 71 (expresion -> aux_comparacion .)
    ID              reduce using rule 71 (expresion -> aux_comparacion .)
    CTE_INT         reduce using rule 71 (expresion -> aux_comparacion .)
    CTE_FLOAT       reduce using rule 71 (expresion -> aux_comparacion .)
    RPAREN          reduce using rule 71 (expresion -> aux_comparacion .)
    COMMA           reduce using rule 71 (expresion -> aux_comparacion .)
    RSQUARE         reduce using rule 71 (expresion -> aux_comparacion .)
    SEMICOLON       reduce using rule 71 (expresion -> aux_comparacion .)
    TO              reduce using rule 71 (expresion -> aux_comparacion .)
    DO              reduce using rule 71 (expresion -> aux_comparacion .)


state 97

    (76) comparacion -> exp . LESSTHAN exp
    (77) comparacion -> exp . GREATERTHAN exp
    (78) comparacion -> exp . EQUAL exp
    (79) aux_comparacion -> exp . LESSTHAN exp
    (80) aux_comparacion -> exp . GREATERTHAN exp
    (81) aux_comparacion -> exp . EQUAL exp
    (82) aux_comparacion -> exp .

    LESSTHAN        shift and go to state 131
    GREATERTHAN     shift and go to state 132
    EQUAL           shift and go to state 133
    LPAREN          reduce using rule 82 (aux_comparacion -> exp .)
    PLUS            reduce using rule 82 (aux_comparacion -> exp .)
    MINUS           reduce using rule 82 (aux_comparacion -> exp .)
    ID              reduce using rule 82 (aux_comparacion -> exp .)
    CTE_INT         reduce using rule 82 (aux_comparacion -> exp .)
    CTE_FLOAT       reduce using rule 82 (aux_comparacion -> exp .)
    RPAREN          reduce using rule 82 (aux_comparacion -> exp .)
    COMMA           reduce using rule 82 (aux_comparacion -> exp .)
    RSQUARE         reduce using rule 82 (aux_comparacion -> exp .)
    SEMICOLON       reduce using rule 82 (aux_comparacion -> exp .)
    TO              reduce using rule 82 (aux_comparacion -> exp .)
    DO              reduce using rule 82 (aux_comparacion -> exp .)


state 98

    (83) exp -> termino . pn_addition_substraction
    (84) exp -> termino . pn_addition_substraction PLUS pn_push_operator exp
    (85) exp -> termino . pn_addition_substraction MINUS pn_push_operator exp
    (105) pn_addition_substraction -> .

    PLUS            reduce using rule 105 (pn_addition_substraction -> .)
    MINUS           reduce using rule 105 (pn_addition_substraction -> .)
    LESSTHAN        reduce using rule 105 (pn_addition_substraction -> .)
    GREATERTHAN     reduce using rule 105 (pn_addition_substraction -> .)
    EQUAL           reduce using rule 105 (pn_addition_substraction -> .)
    LPAREN          reduce using rule 105 (pn_addition_substraction -> .)
    ID              reduce using rule 105 (pn_addition_substraction -> .)
    CTE_INT         reduce using rule 105 (pn_addition_substraction -> .)
    CTE_FLOAT       reduce using rule 105 (pn_addition_substraction -> .)
    RPAREN          reduce using rule 105 (pn_addition_substraction -> .)
    COMMA           reduce using rule 105 (pn_addition_substraction -> .)
    RSQUARE         reduce using rule 105 (pn_addition_substraction -> .)
    SEMICOLON       reduce using rule 105 (pn_addition_substraction -> .)
    AND             reduce using rule 105 (pn_addition_substraction -> .)
    OR              reduce using rule 105 (pn_addition_substraction -> .)
    TO              reduce using rule 105 (pn_addition_substraction -> .)
    DO              reduce using rule 105 (pn_addition_substraction -> .)

    pn_addition_substraction       shift and go to state 134

state 99

    (90) factor -> PLUS . var_cte
    (91) factor -> PLUS . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    var_cte                        shift and go to state 135
    llamada                        shift and go to state 136

state 100

    (92) factor -> MINUS . var_cte
    (93) factor -> MINUS . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    var_cte                        shift and go to state 137
    llamada                        shift and go to state 138

state 101

    (86) termino -> factor . pn_multiplication_division
    (87) termino -> factor . pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> factor . pn_multiplication_division DIV pn_push_operator termino
    (106) pn_multiplication_division -> .

    MULT            reduce using rule 106 (pn_multiplication_division -> .)
    DIV             reduce using rule 106 (pn_multiplication_division -> .)
    PLUS            reduce using rule 106 (pn_multiplication_division -> .)
    MINUS           reduce using rule 106 (pn_multiplication_division -> .)
    LESSTHAN        reduce using rule 106 (pn_multiplication_division -> .)
    GREATERTHAN     reduce using rule 106 (pn_multiplication_division -> .)
    EQUAL           reduce using rule 106 (pn_multiplication_division -> .)
    LPAREN          reduce using rule 106 (pn_multiplication_division -> .)
    ID              reduce using rule 106 (pn_multiplication_division -> .)
    CTE_INT         reduce using rule 106 (pn_multiplication_division -> .)
    CTE_FLOAT       reduce using rule 106 (pn_multiplication_division -> .)
    RPAREN          reduce using rule 106 (pn_multiplication_division -> .)
    COMMA           reduce using rule 106 (pn_multiplication_division -> .)
    RSQUARE         reduce using rule 106 (pn_multiplication_division -> .)
    SEMICOLON       reduce using rule 106 (pn_multiplication_division -> .)
    AND             reduce using rule 106 (pn_multiplication_division -> .)
    OR              reduce using rule 106 (pn_multiplication_division -> .)
    TO              reduce using rule 106 (pn_multiplication_division -> .)
    DO              reduce using rule 106 (pn_multiplication_division -> .)

    pn_multiplication_division     shift and go to state 139

state 102

    (94) factor -> var_cte .

    MULT            reduce using rule 94 (factor -> var_cte .)
    DIV             reduce using rule 94 (factor -> var_cte .)
    PLUS            reduce using rule 94 (factor -> var_cte .)
    MINUS           reduce using rule 94 (factor -> var_cte .)
    LESSTHAN        reduce using rule 94 (factor -> var_cte .)
    GREATERTHAN     reduce using rule 94 (factor -> var_cte .)
    EQUAL           reduce using rule 94 (factor -> var_cte .)
    LPAREN          reduce using rule 94 (factor -> var_cte .)
    ID              reduce using rule 94 (factor -> var_cte .)
    CTE_INT         reduce using rule 94 (factor -> var_cte .)
    CTE_FLOAT       reduce using rule 94 (factor -> var_cte .)
    RPAREN          reduce using rule 94 (factor -> var_cte .)
    COMMA           reduce using rule 94 (factor -> var_cte .)
    RSQUARE         reduce using rule 94 (factor -> var_cte .)
    SEMICOLON       reduce using rule 94 (factor -> var_cte .)
    AND             reduce using rule 94 (factor -> var_cte .)
    OR              reduce using rule 94 (factor -> var_cte .)
    TO              reduce using rule 94 (factor -> var_cte .)
    DO              reduce using rule 94 (factor -> var_cte .)


state 103

    (95) factor -> llamada .

    MULT            reduce using rule 95 (factor -> llamada .)
    DIV             reduce using rule 95 (factor -> llamada .)
    PLUS            reduce using rule 95 (factor -> llamada .)
    MINUS           reduce using rule 95 (factor -> llamada .)
    LESSTHAN        reduce using rule 95 (factor -> llamada .)
    GREATERTHAN     reduce using rule 95 (factor -> llamada .)
    EQUAL           reduce using rule 95 (factor -> llamada .)
    LPAREN          reduce using rule 95 (factor -> llamada .)
    ID              reduce using rule 95 (factor -> llamada .)
    CTE_INT         reduce using rule 95 (factor -> llamada .)
    CTE_FLOAT       reduce using rule 95 (factor -> llamada .)
    RPAREN          reduce using rule 95 (factor -> llamada .)
    COMMA           reduce using rule 95 (factor -> llamada .)
    RSQUARE         reduce using rule 95 (factor -> llamada .)
    SEMICOLON       reduce using rule 95 (factor -> llamada .)
    AND             reduce using rule 95 (factor -> llamada .)
    OR              reduce using rule 95 (factor -> llamada .)
    TO              reduce using rule 95 (factor -> llamada .)
    DO              reduce using rule 95 (factor -> llamada .)


state 104

    (97) var_cte -> CTE_INT . pn_push_constant_and_type
    (102) pn_push_constant_and_type -> .

    MULT            reduce using rule 102 (pn_push_constant_and_type -> .)
    DIV             reduce using rule 102 (pn_push_constant_and_type -> .)
    PLUS            reduce using rule 102 (pn_push_constant_and_type -> .)
    MINUS           reduce using rule 102 (pn_push_constant_and_type -> .)
    LESSTHAN        reduce using rule 102 (pn_push_constant_and_type -> .)
    GREATERTHAN     reduce using rule 102 (pn_push_constant_and_type -> .)
    EQUAL           reduce using rule 102 (pn_push_constant_and_type -> .)
    LPAREN          reduce using rule 102 (pn_push_constant_and_type -> .)
    ID              reduce using rule 102 (pn_push_constant_and_type -> .)
    CTE_INT         reduce using rule 102 (pn_push_constant_and_type -> .)
    CTE_FLOAT       reduce using rule 102 (pn_push_constant_and_type -> .)
    RPAREN          reduce using rule 102 (pn_push_constant_and_type -> .)
    COMMA           reduce using rule 102 (pn_push_constant_and_type -> .)
    RSQUARE         reduce using rule 102 (pn_push_constant_and_type -> .)
    SEMICOLON       reduce using rule 102 (pn_push_constant_and_type -> .)
    AND             reduce using rule 102 (pn_push_constant_and_type -> .)
    OR              reduce using rule 102 (pn_push_constant_and_type -> .)
    TO              reduce using rule 102 (pn_push_constant_and_type -> .)
    DO              reduce using rule 102 (pn_push_constant_and_type -> .)

    pn_push_constant_and_type      shift and go to state 140

state 105

    (98) var_cte -> CTE_FLOAT . pn_push_constant_and_type
    (102) pn_push_constant_and_type -> .

    MULT            reduce using rule 102 (pn_push_constant_and_type -> .)
    DIV             reduce using rule 102 (pn_push_constant_and_type -> .)
    PLUS            reduce using rule 102 (pn_push_constant_and_type -> .)
    MINUS           reduce using rule 102 (pn_push_constant_and_type -> .)
    LESSTHAN        reduce using rule 102 (pn_push_constant_and_type -> .)
    GREATERTHAN     reduce using rule 102 (pn_push_constant_and_type -> .)
    EQUAL           reduce using rule 102 (pn_push_constant_and_type -> .)
    LPAREN          reduce using rule 102 (pn_push_constant_and_type -> .)
    ID              reduce using rule 102 (pn_push_constant_and_type -> .)
    CTE_INT         reduce using rule 102 (pn_push_constant_and_type -> .)
    CTE_FLOAT       reduce using rule 102 (pn_push_constant_and_type -> .)
    RPAREN          reduce using rule 102 (pn_push_constant_and_type -> .)
    COMMA           reduce using rule 102 (pn_push_constant_and_type -> .)
    RSQUARE         reduce using rule 102 (pn_push_constant_and_type -> .)
    SEMICOLON       reduce using rule 102 (pn_push_constant_and_type -> .)
    AND             reduce using rule 102 (pn_push_constant_and_type -> .)
    OR              reduce using rule 102 (pn_push_constant_and_type -> .)
    TO              reduce using rule 102 (pn_push_constant_and_type -> .)
    DO              reduce using rule 102 (pn_push_constant_and_type -> .)

    pn_push_constant_and_type      shift and go to state 141

state 106

    (34) condicional -> WHILE LPAREN expresion . RPAREN DO bloque

    RPAREN          shift and go to state 142


state 107

    (29) escritura -> WRITE LPAREN aux_escritura . RPAREN SEMICOLON

    RPAREN          shift and go to state 143


state 108

    (30) aux_escritura -> letrero .
    (32) aux_escritura -> letrero . COMMA aux_escritura

    RPAREN          reduce using rule 30 (aux_escritura -> letrero .)
    COMMA           shift and go to state 144


state 109

    (31) aux_escritura -> expresion .
    (33) aux_escritura -> expresion . COMMA aux_escritura

    RPAREN          reduce using rule 31 (aux_escritura -> expresion .)
    COMMA           shift and go to state 145


state 110

    (55) letrero -> QUOTATION . aux_letrero QUOTATION
    (56) letrero -> QUOTATION . QUOTATION
    (57) aux_letrero -> . CTE_CHAR
    (58) aux_letrero -> . CTE_CHAR aux_letrero

    QUOTATION       shift and go to state 146
    CTE_CHAR        shift and go to state 148

    aux_letrero                    shift and go to state 147

state 111

    (49) retorno -> RETURN LPAREN expresion . RPAREN

    RPAREN          shift and go to state 149


state 112

    (50) lectura -> READ LPAREN aux_lectura . RPAREN SEMICOLON

    RPAREN          shift and go to state 150


state 113

    (51) aux_lectura -> ID . pn_push_operand_and_type
    (52) aux_lectura -> ID . pn_push_operand_and_type dimensiones
    (53) aux_lectura -> ID . pn_push_operand_and_type COMMA aux_lectura
    (54) aux_lectura -> ID . pn_push_operand_and_type dimensiones COMMA aux_lectura
    (103) pn_push_operand_and_type -> .

    COMMA           reduce using rule 103 (pn_push_operand_and_type -> .)
    LSQUARE         reduce using rule 103 (pn_push_operand_and_type -> .)
    RPAREN          reduce using rule 103 (pn_push_operand_and_type -> .)

    pn_push_operand_and_type       shift and go to state 151

state 114

    (59) decision -> IF LPAREN expresion . RPAREN THEN bloque
    (60) decision -> IF LPAREN expresion . RPAREN THEN bloque ELSE bloque

    RPAREN          shift and go to state 152


state 115

    (65) no_condicional -> FOR ID pn_push_operand_and_type . dimensiones ASSIGN pn_push_operator expresion TO expresion DO bloque
    (66) no_condicional -> FOR ID pn_push_operand_and_type . ASSIGN pn_push_operator expresion TO expresion DO bloque
    (67) dimensiones -> . LSQUARE expresion RSQUARE LSQUARE expresion RSQUARE
    (68) dimensiones -> . LSQUARE expresion COMMA expresion RSQUARE
    (69) dimensiones -> . LSQUARE expresion RSQUARE

    ASSIGN          shift and go to state 154
    LSQUARE         shift and go to state 90

    dimensiones                    shift and go to state 153

state 116

    (9) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN vars . bloque
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 44

    bloque                         shift and go to state 155

state 117

    (10) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN bloque .

    VOID            reduce using rule 10 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN bloque .)
    INT             reduce using rule 10 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN bloque .)
    FLOAT           reduce using rule 10 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN bloque .)
    CHAR            reduce using rule 10 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN bloque .)
    MAIN            reduce using rule 10 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN bloque .)


state 118

    (11) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN vars bloque .

    VOID            reduce using rule 11 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN vars bloque .)
    INT             reduce using rule 11 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN vars bloque .)
    FLOAT           reduce using rule 11 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN vars bloque .)
    CHAR            reduce using rule 11 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN vars bloque .)
    MAIN            reduce using rule 11 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN vars bloque .)


state 119

    (22) parametros -> tipo ID COMMA . parametros
    (21) parametros -> . tipo ID
    (22) parametros -> . tipo ID COMMA parametros
    (18) tipo -> . INT pn_current_type
    (19) tipo -> . FLOAT pn_current_type
    (20) tipo -> . CHAR pn_current_type

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    tipo                           shift and go to state 71
    parametros                     shift and go to state 156

state 120

    (26) aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE . CTE_INT RSQUARE

    CTE_INT         shift and go to state 157


state 121

    (47) asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN . pn_push_operator expresion pn_assign SEMICOLON
    (104) pn_push_operator -> .

    LPAREN          reduce using rule 104 (pn_push_operator -> .)
    PLUS            reduce using rule 104 (pn_push_operator -> .)
    MINUS           reduce using rule 104 (pn_push_operator -> .)
    ID              reduce using rule 104 (pn_push_operator -> .)
    CTE_INT         reduce using rule 104 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 104 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 158

state 122

    (48) asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator . expresion pn_assign SEMICOLON
    (70) expresion -> . comparacion aux_expresion
    (71) expresion -> . aux_comparacion
    (76) comparacion -> . exp LESSTHAN exp
    (77) comparacion -> . exp GREATERTHAN exp
    (78) comparacion -> . exp EQUAL exp
    (79) aux_comparacion -> . exp LESSTHAN exp
    (80) aux_comparacion -> . exp GREATERTHAN exp
    (81) aux_comparacion -> . exp EQUAL exp
    (82) aux_comparacion -> . exp
    (83) exp -> . termino pn_addition_substraction
    (84) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (85) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (86) termino -> . factor pn_multiplication_division
    (87) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (89) factor -> . LPAREN expresion RPAREN
    (90) factor -> . PLUS var_cte
    (91) factor -> . PLUS llamada
    (92) factor -> . MINUS var_cte
    (93) factor -> . MINUS llamada
    (94) factor -> . var_cte
    (95) factor -> . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 92
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    expresion                      shift and go to state 159
    comparacion                    shift and go to state 95
    aux_comparacion                shift and go to state 96
    exp                            shift and go to state 97
    termino                        shift and go to state 98
    factor                         shift and go to state 101
    var_cte                        shift and go to state 102
    llamada                        shift and go to state 103

state 123

    (67) dimensiones -> LSQUARE expresion . RSQUARE LSQUARE expresion RSQUARE
    (68) dimensiones -> LSQUARE expresion . COMMA expresion RSQUARE
    (69) dimensiones -> LSQUARE expresion . RSQUARE

    RSQUARE         shift and go to state 160
    COMMA           shift and go to state 161


state 124

    (96) var_cte -> ID pn_push_operand_and_type .

    MULT            reduce using rule 96 (var_cte -> ID pn_push_operand_and_type .)
    DIV             reduce using rule 96 (var_cte -> ID pn_push_operand_and_type .)
    PLUS            reduce using rule 96 (var_cte -> ID pn_push_operand_and_type .)
    MINUS           reduce using rule 96 (var_cte -> ID pn_push_operand_and_type .)
    LESSTHAN        reduce using rule 96 (var_cte -> ID pn_push_operand_and_type .)
    GREATERTHAN     reduce using rule 96 (var_cte -> ID pn_push_operand_and_type .)
    EQUAL           reduce using rule 96 (var_cte -> ID pn_push_operand_and_type .)
    LPAREN          reduce using rule 96 (var_cte -> ID pn_push_operand_and_type .)
    ID              reduce using rule 96 (var_cte -> ID pn_push_operand_and_type .)
    CTE_INT         reduce using rule 96 (var_cte -> ID pn_push_operand_and_type .)
    CTE_FLOAT       reduce using rule 96 (var_cte -> ID pn_push_operand_and_type .)
    RPAREN          reduce using rule 96 (var_cte -> ID pn_push_operand_and_type .)
    COMMA           reduce using rule 96 (var_cte -> ID pn_push_operand_and_type .)
    RSQUARE         reduce using rule 96 (var_cte -> ID pn_push_operand_and_type .)
    SEMICOLON       reduce using rule 96 (var_cte -> ID pn_push_operand_and_type .)
    AND             reduce using rule 96 (var_cte -> ID pn_push_operand_and_type .)
    OR              reduce using rule 96 (var_cte -> ID pn_push_operand_and_type .)
    TO              reduce using rule 96 (var_cte -> ID pn_push_operand_and_type .)
    DO              reduce using rule 96 (var_cte -> ID pn_push_operand_and_type .)


state 125

    (89) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 162


state 126

    (62) llamada -> ID LPAREN aux_llamada RPAREN .

    ID              reduce using rule 62 (llamada -> ID LPAREN aux_llamada RPAREN .)
    WHILE           reduce using rule 62 (llamada -> ID LPAREN aux_llamada RPAREN .)
    WRITE           reduce using rule 62 (llamada -> ID LPAREN aux_llamada RPAREN .)
    RETURN          reduce using rule 62 (llamada -> ID LPAREN aux_llamada RPAREN .)
    READ            reduce using rule 62 (llamada -> ID LPAREN aux_llamada RPAREN .)
    IF              reduce using rule 62 (llamada -> ID LPAREN aux_llamada RPAREN .)
    FOR             reduce using rule 62 (llamada -> ID LPAREN aux_llamada RPAREN .)
    RBRACKET        reduce using rule 62 (llamada -> ID LPAREN aux_llamada RPAREN .)
    MULT            reduce using rule 62 (llamada -> ID LPAREN aux_llamada RPAREN .)
    DIV             reduce using rule 62 (llamada -> ID LPAREN aux_llamada RPAREN .)
    PLUS            reduce using rule 62 (llamada -> ID LPAREN aux_llamada RPAREN .)
    MINUS           reduce using rule 62 (llamada -> ID LPAREN aux_llamada RPAREN .)
    LESSTHAN        reduce using rule 62 (llamada -> ID LPAREN aux_llamada RPAREN .)
    GREATERTHAN     reduce using rule 62 (llamada -> ID LPAREN aux_llamada RPAREN .)
    EQUAL           reduce using rule 62 (llamada -> ID LPAREN aux_llamada RPAREN .)
    LPAREN          reduce using rule 62 (llamada -> ID LPAREN aux_llamada RPAREN .)
    CTE_INT         reduce using rule 62 (llamada -> ID LPAREN aux_llamada RPAREN .)
    CTE_FLOAT       reduce using rule 62 (llamada -> ID LPAREN aux_llamada RPAREN .)
    RPAREN          reduce using rule 62 (llamada -> ID LPAREN aux_llamada RPAREN .)
    COMMA           reduce using rule 62 (llamada -> ID LPAREN aux_llamada RPAREN .)
    RSQUARE         reduce using rule 62 (llamada -> ID LPAREN aux_llamada RPAREN .)
    SEMICOLON       reduce using rule 62 (llamada -> ID LPAREN aux_llamada RPAREN .)
    AND             reduce using rule 62 (llamada -> ID LPAREN aux_llamada RPAREN .)
    OR              reduce using rule 62 (llamada -> ID LPAREN aux_llamada RPAREN .)
    TO              reduce using rule 62 (llamada -> ID LPAREN aux_llamada RPAREN .)
    DO              reduce using rule 62 (llamada -> ID LPAREN aux_llamada RPAREN .)


state 127

    (64) aux_llamada -> expresion aux_llamada .

    RPAREN          reduce using rule 64 (aux_llamada -> expresion aux_llamada .)


state 128

    (70) expresion -> comparacion aux_expresion .

    LPAREN          reduce using rule 70 (expresion -> comparacion aux_expresion .)
    PLUS            reduce using rule 70 (expresion -> comparacion aux_expresion .)
    MINUS           reduce using rule 70 (expresion -> comparacion aux_expresion .)
    ID              reduce using rule 70 (expresion -> comparacion aux_expresion .)
    CTE_INT         reduce using rule 70 (expresion -> comparacion aux_expresion .)
    CTE_FLOAT       reduce using rule 70 (expresion -> comparacion aux_expresion .)
    RPAREN          reduce using rule 70 (expresion -> comparacion aux_expresion .)
    COMMA           reduce using rule 70 (expresion -> comparacion aux_expresion .)
    RSQUARE         reduce using rule 70 (expresion -> comparacion aux_expresion .)
    SEMICOLON       reduce using rule 70 (expresion -> comparacion aux_expresion .)
    TO              reduce using rule 70 (expresion -> comparacion aux_expresion .)
    DO              reduce using rule 70 (expresion -> comparacion aux_expresion .)


state 129

    (72) aux_expresion -> AND . comparacion
    (74) aux_expresion -> AND . comparacion aux_expresion
    (76) comparacion -> . exp LESSTHAN exp
    (77) comparacion -> . exp GREATERTHAN exp
    (78) comparacion -> . exp EQUAL exp
    (83) exp -> . termino pn_addition_substraction
    (84) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (85) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (86) termino -> . factor pn_multiplication_division
    (87) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (89) factor -> . LPAREN expresion RPAREN
    (90) factor -> . PLUS var_cte
    (91) factor -> . PLUS llamada
    (92) factor -> . MINUS var_cte
    (93) factor -> . MINUS llamada
    (94) factor -> . var_cte
    (95) factor -> . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 92
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    comparacion                    shift and go to state 163
    exp                            shift and go to state 164
    termino                        shift and go to state 98
    factor                         shift and go to state 101
    var_cte                        shift and go to state 102
    llamada                        shift and go to state 103

state 130

    (73) aux_expresion -> OR . comparacion
    (75) aux_expresion -> OR . comparacion aux_expresion
    (76) comparacion -> . exp LESSTHAN exp
    (77) comparacion -> . exp GREATERTHAN exp
    (78) comparacion -> . exp EQUAL exp
    (83) exp -> . termino pn_addition_substraction
    (84) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (85) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (86) termino -> . factor pn_multiplication_division
    (87) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (89) factor -> . LPAREN expresion RPAREN
    (90) factor -> . PLUS var_cte
    (91) factor -> . PLUS llamada
    (92) factor -> . MINUS var_cte
    (93) factor -> . MINUS llamada
    (94) factor -> . var_cte
    (95) factor -> . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 92
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    comparacion                    shift and go to state 165
    exp                            shift and go to state 164
    termino                        shift and go to state 98
    factor                         shift and go to state 101
    var_cte                        shift and go to state 102
    llamada                        shift and go to state 103

state 131

    (76) comparacion -> exp LESSTHAN . exp
    (79) aux_comparacion -> exp LESSTHAN . exp
    (83) exp -> . termino pn_addition_substraction
    (84) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (85) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (86) termino -> . factor pn_multiplication_division
    (87) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (89) factor -> . LPAREN expresion RPAREN
    (90) factor -> . PLUS var_cte
    (91) factor -> . PLUS llamada
    (92) factor -> . MINUS var_cte
    (93) factor -> . MINUS llamada
    (94) factor -> . var_cte
    (95) factor -> . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 92
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    exp                            shift and go to state 166
    termino                        shift and go to state 98
    factor                         shift and go to state 101
    var_cte                        shift and go to state 102
    llamada                        shift and go to state 103

state 132

    (77) comparacion -> exp GREATERTHAN . exp
    (80) aux_comparacion -> exp GREATERTHAN . exp
    (83) exp -> . termino pn_addition_substraction
    (84) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (85) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (86) termino -> . factor pn_multiplication_division
    (87) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (89) factor -> . LPAREN expresion RPAREN
    (90) factor -> . PLUS var_cte
    (91) factor -> . PLUS llamada
    (92) factor -> . MINUS var_cte
    (93) factor -> . MINUS llamada
    (94) factor -> . var_cte
    (95) factor -> . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 92
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    exp                            shift and go to state 167
    termino                        shift and go to state 98
    factor                         shift and go to state 101
    var_cte                        shift and go to state 102
    llamada                        shift and go to state 103

state 133

    (78) comparacion -> exp EQUAL . exp
    (81) aux_comparacion -> exp EQUAL . exp
    (83) exp -> . termino pn_addition_substraction
    (84) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (85) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (86) termino -> . factor pn_multiplication_division
    (87) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (89) factor -> . LPAREN expresion RPAREN
    (90) factor -> . PLUS var_cte
    (91) factor -> . PLUS llamada
    (92) factor -> . MINUS var_cte
    (93) factor -> . MINUS llamada
    (94) factor -> . var_cte
    (95) factor -> . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 92
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    exp                            shift and go to state 168
    termino                        shift and go to state 98
    factor                         shift and go to state 101
    var_cte                        shift and go to state 102
    llamada                        shift and go to state 103

state 134

    (83) exp -> termino pn_addition_substraction .
    (84) exp -> termino pn_addition_substraction . PLUS pn_push_operator exp
    (85) exp -> termino pn_addition_substraction . MINUS pn_push_operator exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    LESSTHAN        reduce using rule 83 (exp -> termino pn_addition_substraction .)
    GREATERTHAN     reduce using rule 83 (exp -> termino pn_addition_substraction .)
    EQUAL           reduce using rule 83 (exp -> termino pn_addition_substraction .)
    LPAREN          reduce using rule 83 (exp -> termino pn_addition_substraction .)
    ID              reduce using rule 83 (exp -> termino pn_addition_substraction .)
    CTE_INT         reduce using rule 83 (exp -> termino pn_addition_substraction .)
    CTE_FLOAT       reduce using rule 83 (exp -> termino pn_addition_substraction .)
    RPAREN          reduce using rule 83 (exp -> termino pn_addition_substraction .)
    COMMA           reduce using rule 83 (exp -> termino pn_addition_substraction .)
    RSQUARE         reduce using rule 83 (exp -> termino pn_addition_substraction .)
    SEMICOLON       reduce using rule 83 (exp -> termino pn_addition_substraction .)
    AND             reduce using rule 83 (exp -> termino pn_addition_substraction .)
    OR              reduce using rule 83 (exp -> termino pn_addition_substraction .)
    TO              reduce using rule 83 (exp -> termino pn_addition_substraction .)
    DO              reduce using rule 83 (exp -> termino pn_addition_substraction .)
    PLUS            shift and go to state 169
    MINUS           shift and go to state 170

  ! PLUS            [ reduce using rule 83 (exp -> termino pn_addition_substraction .) ]
  ! MINUS           [ reduce using rule 83 (exp -> termino pn_addition_substraction .) ]


state 135

    (90) factor -> PLUS var_cte .

    MULT            reduce using rule 90 (factor -> PLUS var_cte .)
    DIV             reduce using rule 90 (factor -> PLUS var_cte .)
    PLUS            reduce using rule 90 (factor -> PLUS var_cte .)
    MINUS           reduce using rule 90 (factor -> PLUS var_cte .)
    LESSTHAN        reduce using rule 90 (factor -> PLUS var_cte .)
    GREATERTHAN     reduce using rule 90 (factor -> PLUS var_cte .)
    EQUAL           reduce using rule 90 (factor -> PLUS var_cte .)
    LPAREN          reduce using rule 90 (factor -> PLUS var_cte .)
    ID              reduce using rule 90 (factor -> PLUS var_cte .)
    CTE_INT         reduce using rule 90 (factor -> PLUS var_cte .)
    CTE_FLOAT       reduce using rule 90 (factor -> PLUS var_cte .)
    RPAREN          reduce using rule 90 (factor -> PLUS var_cte .)
    COMMA           reduce using rule 90 (factor -> PLUS var_cte .)
    RSQUARE         reduce using rule 90 (factor -> PLUS var_cte .)
    SEMICOLON       reduce using rule 90 (factor -> PLUS var_cte .)
    AND             reduce using rule 90 (factor -> PLUS var_cte .)
    OR              reduce using rule 90 (factor -> PLUS var_cte .)
    TO              reduce using rule 90 (factor -> PLUS var_cte .)
    DO              reduce using rule 90 (factor -> PLUS var_cte .)


state 136

    (91) factor -> PLUS llamada .

    MULT            reduce using rule 91 (factor -> PLUS llamada .)
    DIV             reduce using rule 91 (factor -> PLUS llamada .)
    PLUS            reduce using rule 91 (factor -> PLUS llamada .)
    MINUS           reduce using rule 91 (factor -> PLUS llamada .)
    LESSTHAN        reduce using rule 91 (factor -> PLUS llamada .)
    GREATERTHAN     reduce using rule 91 (factor -> PLUS llamada .)
    EQUAL           reduce using rule 91 (factor -> PLUS llamada .)
    LPAREN          reduce using rule 91 (factor -> PLUS llamada .)
    ID              reduce using rule 91 (factor -> PLUS llamada .)
    CTE_INT         reduce using rule 91 (factor -> PLUS llamada .)
    CTE_FLOAT       reduce using rule 91 (factor -> PLUS llamada .)
    RPAREN          reduce using rule 91 (factor -> PLUS llamada .)
    COMMA           reduce using rule 91 (factor -> PLUS llamada .)
    RSQUARE         reduce using rule 91 (factor -> PLUS llamada .)
    SEMICOLON       reduce using rule 91 (factor -> PLUS llamada .)
    AND             reduce using rule 91 (factor -> PLUS llamada .)
    OR              reduce using rule 91 (factor -> PLUS llamada .)
    TO              reduce using rule 91 (factor -> PLUS llamada .)
    DO              reduce using rule 91 (factor -> PLUS llamada .)


state 137

    (92) factor -> MINUS var_cte .

    MULT            reduce using rule 92 (factor -> MINUS var_cte .)
    DIV             reduce using rule 92 (factor -> MINUS var_cte .)
    PLUS            reduce using rule 92 (factor -> MINUS var_cte .)
    MINUS           reduce using rule 92 (factor -> MINUS var_cte .)
    LESSTHAN        reduce using rule 92 (factor -> MINUS var_cte .)
    GREATERTHAN     reduce using rule 92 (factor -> MINUS var_cte .)
    EQUAL           reduce using rule 92 (factor -> MINUS var_cte .)
    LPAREN          reduce using rule 92 (factor -> MINUS var_cte .)
    ID              reduce using rule 92 (factor -> MINUS var_cte .)
    CTE_INT         reduce using rule 92 (factor -> MINUS var_cte .)
    CTE_FLOAT       reduce using rule 92 (factor -> MINUS var_cte .)
    RPAREN          reduce using rule 92 (factor -> MINUS var_cte .)
    COMMA           reduce using rule 92 (factor -> MINUS var_cte .)
    RSQUARE         reduce using rule 92 (factor -> MINUS var_cte .)
    SEMICOLON       reduce using rule 92 (factor -> MINUS var_cte .)
    AND             reduce using rule 92 (factor -> MINUS var_cte .)
    OR              reduce using rule 92 (factor -> MINUS var_cte .)
    TO              reduce using rule 92 (factor -> MINUS var_cte .)
    DO              reduce using rule 92 (factor -> MINUS var_cte .)


state 138

    (93) factor -> MINUS llamada .

    MULT            reduce using rule 93 (factor -> MINUS llamada .)
    DIV             reduce using rule 93 (factor -> MINUS llamada .)
    PLUS            reduce using rule 93 (factor -> MINUS llamada .)
    MINUS           reduce using rule 93 (factor -> MINUS llamada .)
    LESSTHAN        reduce using rule 93 (factor -> MINUS llamada .)
    GREATERTHAN     reduce using rule 93 (factor -> MINUS llamada .)
    EQUAL           reduce using rule 93 (factor -> MINUS llamada .)
    LPAREN          reduce using rule 93 (factor -> MINUS llamada .)
    ID              reduce using rule 93 (factor -> MINUS llamada .)
    CTE_INT         reduce using rule 93 (factor -> MINUS llamada .)
    CTE_FLOAT       reduce using rule 93 (factor -> MINUS llamada .)
    RPAREN          reduce using rule 93 (factor -> MINUS llamada .)
    COMMA           reduce using rule 93 (factor -> MINUS llamada .)
    RSQUARE         reduce using rule 93 (factor -> MINUS llamada .)
    SEMICOLON       reduce using rule 93 (factor -> MINUS llamada .)
    AND             reduce using rule 93 (factor -> MINUS llamada .)
    OR              reduce using rule 93 (factor -> MINUS llamada .)
    TO              reduce using rule 93 (factor -> MINUS llamada .)
    DO              reduce using rule 93 (factor -> MINUS llamada .)


state 139

    (86) termino -> factor pn_multiplication_division .
    (87) termino -> factor pn_multiplication_division . MULT pn_push_operator termino
    (88) termino -> factor pn_multiplication_division . DIV pn_push_operator termino

    PLUS            reduce using rule 86 (termino -> factor pn_multiplication_division .)
    MINUS           reduce using rule 86 (termino -> factor pn_multiplication_division .)
    LESSTHAN        reduce using rule 86 (termino -> factor pn_multiplication_division .)
    GREATERTHAN     reduce using rule 86 (termino -> factor pn_multiplication_division .)
    EQUAL           reduce using rule 86 (termino -> factor pn_multiplication_division .)
    LPAREN          reduce using rule 86 (termino -> factor pn_multiplication_division .)
    ID              reduce using rule 86 (termino -> factor pn_multiplication_division .)
    CTE_INT         reduce using rule 86 (termino -> factor pn_multiplication_division .)
    CTE_FLOAT       reduce using rule 86 (termino -> factor pn_multiplication_division .)
    RPAREN          reduce using rule 86 (termino -> factor pn_multiplication_division .)
    COMMA           reduce using rule 86 (termino -> factor pn_multiplication_division .)
    RSQUARE         reduce using rule 86 (termino -> factor pn_multiplication_division .)
    SEMICOLON       reduce using rule 86 (termino -> factor pn_multiplication_division .)
    AND             reduce using rule 86 (termino -> factor pn_multiplication_division .)
    OR              reduce using rule 86 (termino -> factor pn_multiplication_division .)
    TO              reduce using rule 86 (termino -> factor pn_multiplication_division .)
    DO              reduce using rule 86 (termino -> factor pn_multiplication_division .)
    MULT            shift and go to state 171
    DIV             shift and go to state 172


state 140

    (97) var_cte -> CTE_INT pn_push_constant_and_type .

    MULT            reduce using rule 97 (var_cte -> CTE_INT pn_push_constant_and_type .)
    DIV             reduce using rule 97 (var_cte -> CTE_INT pn_push_constant_and_type .)
    PLUS            reduce using rule 97 (var_cte -> CTE_INT pn_push_constant_and_type .)
    MINUS           reduce using rule 97 (var_cte -> CTE_INT pn_push_constant_and_type .)
    LESSTHAN        reduce using rule 97 (var_cte -> CTE_INT pn_push_constant_and_type .)
    GREATERTHAN     reduce using rule 97 (var_cte -> CTE_INT pn_push_constant_and_type .)
    EQUAL           reduce using rule 97 (var_cte -> CTE_INT pn_push_constant_and_type .)
    LPAREN          reduce using rule 97 (var_cte -> CTE_INT pn_push_constant_and_type .)
    ID              reduce using rule 97 (var_cte -> CTE_INT pn_push_constant_and_type .)
    CTE_INT         reduce using rule 97 (var_cte -> CTE_INT pn_push_constant_and_type .)
    CTE_FLOAT       reduce using rule 97 (var_cte -> CTE_INT pn_push_constant_and_type .)
    RPAREN          reduce using rule 97 (var_cte -> CTE_INT pn_push_constant_and_type .)
    COMMA           reduce using rule 97 (var_cte -> CTE_INT pn_push_constant_and_type .)
    RSQUARE         reduce using rule 97 (var_cte -> CTE_INT pn_push_constant_and_type .)
    SEMICOLON       reduce using rule 97 (var_cte -> CTE_INT pn_push_constant_and_type .)
    AND             reduce using rule 97 (var_cte -> CTE_INT pn_push_constant_and_type .)
    OR              reduce using rule 97 (var_cte -> CTE_INT pn_push_constant_and_type .)
    TO              reduce using rule 97 (var_cte -> CTE_INT pn_push_constant_and_type .)
    DO              reduce using rule 97 (var_cte -> CTE_INT pn_push_constant_and_type .)


state 141

    (98) var_cte -> CTE_FLOAT pn_push_constant_and_type .

    MULT            reduce using rule 98 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    DIV             reduce using rule 98 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    PLUS            reduce using rule 98 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    MINUS           reduce using rule 98 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    LESSTHAN        reduce using rule 98 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    GREATERTHAN     reduce using rule 98 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    EQUAL           reduce using rule 98 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    LPAREN          reduce using rule 98 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    ID              reduce using rule 98 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    CTE_INT         reduce using rule 98 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    CTE_FLOAT       reduce using rule 98 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    RPAREN          reduce using rule 98 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    COMMA           reduce using rule 98 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    RSQUARE         reduce using rule 98 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    SEMICOLON       reduce using rule 98 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    AND             reduce using rule 98 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    OR              reduce using rule 98 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    TO              reduce using rule 98 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    DO              reduce using rule 98 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)


state 142

    (34) condicional -> WHILE LPAREN expresion RPAREN . DO bloque

    DO              shift and go to state 173


state 143

    (29) escritura -> WRITE LPAREN aux_escritura RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 174


state 144

    (32) aux_escritura -> letrero COMMA . aux_escritura
    (30) aux_escritura -> . letrero
    (31) aux_escritura -> . expresion
    (32) aux_escritura -> . letrero COMMA aux_escritura
    (33) aux_escritura -> . expresion COMMA aux_escritura
    (55) letrero -> . QUOTATION aux_letrero QUOTATION
    (56) letrero -> . QUOTATION QUOTATION
    (70) expresion -> . comparacion aux_expresion
    (71) expresion -> . aux_comparacion
    (76) comparacion -> . exp LESSTHAN exp
    (77) comparacion -> . exp GREATERTHAN exp
    (78) comparacion -> . exp EQUAL exp
    (79) aux_comparacion -> . exp LESSTHAN exp
    (80) aux_comparacion -> . exp GREATERTHAN exp
    (81) aux_comparacion -> . exp EQUAL exp
    (82) aux_comparacion -> . exp
    (83) exp -> . termino pn_addition_substraction
    (84) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (85) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (86) termino -> . factor pn_multiplication_division
    (87) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (89) factor -> . LPAREN expresion RPAREN
    (90) factor -> . PLUS var_cte
    (91) factor -> . PLUS llamada
    (92) factor -> . MINUS var_cte
    (93) factor -> . MINUS llamada
    (94) factor -> . var_cte
    (95) factor -> . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    QUOTATION       shift and go to state 110
    LPAREN          shift and go to state 92
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    letrero                        shift and go to state 108
    aux_escritura                  shift and go to state 175
    expresion                      shift and go to state 109
    comparacion                    shift and go to state 95
    aux_comparacion                shift and go to state 96
    exp                            shift and go to state 97
    termino                        shift and go to state 98
    factor                         shift and go to state 101
    var_cte                        shift and go to state 102
    llamada                        shift and go to state 103

state 145

    (33) aux_escritura -> expresion COMMA . aux_escritura
    (30) aux_escritura -> . letrero
    (31) aux_escritura -> . expresion
    (32) aux_escritura -> . letrero COMMA aux_escritura
    (33) aux_escritura -> . expresion COMMA aux_escritura
    (55) letrero -> . QUOTATION aux_letrero QUOTATION
    (56) letrero -> . QUOTATION QUOTATION
    (70) expresion -> . comparacion aux_expresion
    (71) expresion -> . aux_comparacion
    (76) comparacion -> . exp LESSTHAN exp
    (77) comparacion -> . exp GREATERTHAN exp
    (78) comparacion -> . exp EQUAL exp
    (79) aux_comparacion -> . exp LESSTHAN exp
    (80) aux_comparacion -> . exp GREATERTHAN exp
    (81) aux_comparacion -> . exp EQUAL exp
    (82) aux_comparacion -> . exp
    (83) exp -> . termino pn_addition_substraction
    (84) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (85) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (86) termino -> . factor pn_multiplication_division
    (87) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (89) factor -> . LPAREN expresion RPAREN
    (90) factor -> . PLUS var_cte
    (91) factor -> . PLUS llamada
    (92) factor -> . MINUS var_cte
    (93) factor -> . MINUS llamada
    (94) factor -> . var_cte
    (95) factor -> . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    QUOTATION       shift and go to state 110
    LPAREN          shift and go to state 92
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    expresion                      shift and go to state 109
    aux_escritura                  shift and go to state 176
    letrero                        shift and go to state 108
    comparacion                    shift and go to state 95
    aux_comparacion                shift and go to state 96
    exp                            shift and go to state 97
    termino                        shift and go to state 98
    factor                         shift and go to state 101
    var_cte                        shift and go to state 102
    llamada                        shift and go to state 103

state 146

    (56) letrero -> QUOTATION QUOTATION .

    COMMA           reduce using rule 56 (letrero -> QUOTATION QUOTATION .)
    RPAREN          reduce using rule 56 (letrero -> QUOTATION QUOTATION .)


state 147

    (55) letrero -> QUOTATION aux_letrero . QUOTATION

    QUOTATION       shift and go to state 177


state 148

    (57) aux_letrero -> CTE_CHAR .
    (58) aux_letrero -> CTE_CHAR . aux_letrero
    (57) aux_letrero -> . CTE_CHAR
    (58) aux_letrero -> . CTE_CHAR aux_letrero

    QUOTATION       reduce using rule 57 (aux_letrero -> CTE_CHAR .)
    CTE_CHAR        shift and go to state 148

    aux_letrero                    shift and go to state 178

state 149

    (49) retorno -> RETURN LPAREN expresion RPAREN .

    ID              reduce using rule 49 (retorno -> RETURN LPAREN expresion RPAREN .)
    WHILE           reduce using rule 49 (retorno -> RETURN LPAREN expresion RPAREN .)
    WRITE           reduce using rule 49 (retorno -> RETURN LPAREN expresion RPAREN .)
    RETURN          reduce using rule 49 (retorno -> RETURN LPAREN expresion RPAREN .)
    READ            reduce using rule 49 (retorno -> RETURN LPAREN expresion RPAREN .)
    IF              reduce using rule 49 (retorno -> RETURN LPAREN expresion RPAREN .)
    FOR             reduce using rule 49 (retorno -> RETURN LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 49 (retorno -> RETURN LPAREN expresion RPAREN .)


state 150

    (50) lectura -> READ LPAREN aux_lectura RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 179


state 151

    (51) aux_lectura -> ID pn_push_operand_and_type .
    (52) aux_lectura -> ID pn_push_operand_and_type . dimensiones
    (53) aux_lectura -> ID pn_push_operand_and_type . COMMA aux_lectura
    (54) aux_lectura -> ID pn_push_operand_and_type . dimensiones COMMA aux_lectura
    (67) dimensiones -> . LSQUARE expresion RSQUARE LSQUARE expresion RSQUARE
    (68) dimensiones -> . LSQUARE expresion COMMA expresion RSQUARE
    (69) dimensiones -> . LSQUARE expresion RSQUARE

    RPAREN          reduce using rule 51 (aux_lectura -> ID pn_push_operand_and_type .)
    COMMA           shift and go to state 181
    LSQUARE         shift and go to state 90

    dimensiones                    shift and go to state 180

state 152

    (59) decision -> IF LPAREN expresion RPAREN . THEN bloque
    (60) decision -> IF LPAREN expresion RPAREN . THEN bloque ELSE bloque

    THEN            shift and go to state 182


state 153

    (65) no_condicional -> FOR ID pn_push_operand_and_type dimensiones . ASSIGN pn_push_operator expresion TO expresion DO bloque

    ASSIGN          shift and go to state 183


state 154

    (66) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN . pn_push_operator expresion TO expresion DO bloque
    (104) pn_push_operator -> .

    LPAREN          reduce using rule 104 (pn_push_operator -> .)
    PLUS            reduce using rule 104 (pn_push_operator -> .)
    MINUS           reduce using rule 104 (pn_push_operator -> .)
    ID              reduce using rule 104 (pn_push_operator -> .)
    CTE_INT         reduce using rule 104 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 104 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 184

state 155

    (9) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN vars bloque .

    VOID            reduce using rule 9 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN vars bloque .)
    INT             reduce using rule 9 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN vars bloque .)
    FLOAT           reduce using rule 9 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN vars bloque .)
    CHAR            reduce using rule 9 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN vars bloque .)
    MAIN            reduce using rule 9 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN vars bloque .)


state 156

    (22) parametros -> tipo ID COMMA parametros .

    RPAREN          reduce using rule 22 (parametros -> tipo ID COMMA parametros .)


state 157

    (26) aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT . RSQUARE

    RSQUARE         shift and go to state 185


state 158

    (47) asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator . expresion pn_assign SEMICOLON
    (70) expresion -> . comparacion aux_expresion
    (71) expresion -> . aux_comparacion
    (76) comparacion -> . exp LESSTHAN exp
    (77) comparacion -> . exp GREATERTHAN exp
    (78) comparacion -> . exp EQUAL exp
    (79) aux_comparacion -> . exp LESSTHAN exp
    (80) aux_comparacion -> . exp GREATERTHAN exp
    (81) aux_comparacion -> . exp EQUAL exp
    (82) aux_comparacion -> . exp
    (83) exp -> . termino pn_addition_substraction
    (84) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (85) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (86) termino -> . factor pn_multiplication_division
    (87) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (89) factor -> . LPAREN expresion RPAREN
    (90) factor -> . PLUS var_cte
    (91) factor -> . PLUS llamada
    (92) factor -> . MINUS var_cte
    (93) factor -> . MINUS llamada
    (94) factor -> . var_cte
    (95) factor -> . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 92
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    expresion                      shift and go to state 186
    comparacion                    shift and go to state 95
    aux_comparacion                shift and go to state 96
    exp                            shift and go to state 97
    termino                        shift and go to state 98
    factor                         shift and go to state 101
    var_cte                        shift and go to state 102
    llamada                        shift and go to state 103

state 159

    (48) asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion . pn_assign SEMICOLON
    (107) pn_assign -> .

    SEMICOLON       reduce using rule 107 (pn_assign -> .)

    pn_assign                      shift and go to state 187

state 160

    (67) dimensiones -> LSQUARE expresion RSQUARE . LSQUARE expresion RSQUARE
    (69) dimensiones -> LSQUARE expresion RSQUARE .

    LSQUARE         shift and go to state 188
    ASSIGN          reduce using rule 69 (dimensiones -> LSQUARE expresion RSQUARE .)
    COMMA           reduce using rule 69 (dimensiones -> LSQUARE expresion RSQUARE .)
    RPAREN          reduce using rule 69 (dimensiones -> LSQUARE expresion RSQUARE .)


state 161

    (68) dimensiones -> LSQUARE expresion COMMA . expresion RSQUARE
    (70) expresion -> . comparacion aux_expresion
    (71) expresion -> . aux_comparacion
    (76) comparacion -> . exp LESSTHAN exp
    (77) comparacion -> . exp GREATERTHAN exp
    (78) comparacion -> . exp EQUAL exp
    (79) aux_comparacion -> . exp LESSTHAN exp
    (80) aux_comparacion -> . exp GREATERTHAN exp
    (81) aux_comparacion -> . exp EQUAL exp
    (82) aux_comparacion -> . exp
    (83) exp -> . termino pn_addition_substraction
    (84) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (85) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (86) termino -> . factor pn_multiplication_division
    (87) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (89) factor -> . LPAREN expresion RPAREN
    (90) factor -> . PLUS var_cte
    (91) factor -> . PLUS llamada
    (92) factor -> . MINUS var_cte
    (93) factor -> . MINUS llamada
    (94) factor -> . var_cte
    (95) factor -> . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 92
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    expresion                      shift and go to state 189
    comparacion                    shift and go to state 95
    aux_comparacion                shift and go to state 96
    exp                            shift and go to state 97
    termino                        shift and go to state 98
    factor                         shift and go to state 101
    var_cte                        shift and go to state 102
    llamada                        shift and go to state 103

state 162

    (89) factor -> LPAREN expresion RPAREN .

    MULT            reduce using rule 89 (factor -> LPAREN expresion RPAREN .)
    DIV             reduce using rule 89 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 89 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 89 (factor -> LPAREN expresion RPAREN .)
    LESSTHAN        reduce using rule 89 (factor -> LPAREN expresion RPAREN .)
    GREATERTHAN     reduce using rule 89 (factor -> LPAREN expresion RPAREN .)
    EQUAL           reduce using rule 89 (factor -> LPAREN expresion RPAREN .)
    LPAREN          reduce using rule 89 (factor -> LPAREN expresion RPAREN .)
    ID              reduce using rule 89 (factor -> LPAREN expresion RPAREN .)
    CTE_INT         reduce using rule 89 (factor -> LPAREN expresion RPAREN .)
    CTE_FLOAT       reduce using rule 89 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 89 (factor -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 89 (factor -> LPAREN expresion RPAREN .)
    RSQUARE         reduce using rule 89 (factor -> LPAREN expresion RPAREN .)
    SEMICOLON       reduce using rule 89 (factor -> LPAREN expresion RPAREN .)
    AND             reduce using rule 89 (factor -> LPAREN expresion RPAREN .)
    OR              reduce using rule 89 (factor -> LPAREN expresion RPAREN .)
    TO              reduce using rule 89 (factor -> LPAREN expresion RPAREN .)
    DO              reduce using rule 89 (factor -> LPAREN expresion RPAREN .)


state 163

    (72) aux_expresion -> AND comparacion .
    (74) aux_expresion -> AND comparacion . aux_expresion
    (72) aux_expresion -> . AND comparacion
    (73) aux_expresion -> . OR comparacion
    (74) aux_expresion -> . AND comparacion aux_expresion
    (75) aux_expresion -> . OR comparacion aux_expresion

    LPAREN          reduce using rule 72 (aux_expresion -> AND comparacion .)
    PLUS            reduce using rule 72 (aux_expresion -> AND comparacion .)
    MINUS           reduce using rule 72 (aux_expresion -> AND comparacion .)
    ID              reduce using rule 72 (aux_expresion -> AND comparacion .)
    CTE_INT         reduce using rule 72 (aux_expresion -> AND comparacion .)
    CTE_FLOAT       reduce using rule 72 (aux_expresion -> AND comparacion .)
    RPAREN          reduce using rule 72 (aux_expresion -> AND comparacion .)
    COMMA           reduce using rule 72 (aux_expresion -> AND comparacion .)
    RSQUARE         reduce using rule 72 (aux_expresion -> AND comparacion .)
    SEMICOLON       reduce using rule 72 (aux_expresion -> AND comparacion .)
    TO              reduce using rule 72 (aux_expresion -> AND comparacion .)
    DO              reduce using rule 72 (aux_expresion -> AND comparacion .)
    AND             shift and go to state 129
    OR              shift and go to state 130

    aux_expresion                  shift and go to state 190

state 164

    (76) comparacion -> exp . LESSTHAN exp
    (77) comparacion -> exp . GREATERTHAN exp
    (78) comparacion -> exp . EQUAL exp

    LESSTHAN        shift and go to state 191
    GREATERTHAN     shift and go to state 192
    EQUAL           shift and go to state 193


state 165

    (73) aux_expresion -> OR comparacion .
    (75) aux_expresion -> OR comparacion . aux_expresion
    (72) aux_expresion -> . AND comparacion
    (73) aux_expresion -> . OR comparacion
    (74) aux_expresion -> . AND comparacion aux_expresion
    (75) aux_expresion -> . OR comparacion aux_expresion

    LPAREN          reduce using rule 73 (aux_expresion -> OR comparacion .)
    PLUS            reduce using rule 73 (aux_expresion -> OR comparacion .)
    MINUS           reduce using rule 73 (aux_expresion -> OR comparacion .)
    ID              reduce using rule 73 (aux_expresion -> OR comparacion .)
    CTE_INT         reduce using rule 73 (aux_expresion -> OR comparacion .)
    CTE_FLOAT       reduce using rule 73 (aux_expresion -> OR comparacion .)
    RPAREN          reduce using rule 73 (aux_expresion -> OR comparacion .)
    COMMA           reduce using rule 73 (aux_expresion -> OR comparacion .)
    RSQUARE         reduce using rule 73 (aux_expresion -> OR comparacion .)
    SEMICOLON       reduce using rule 73 (aux_expresion -> OR comparacion .)
    TO              reduce using rule 73 (aux_expresion -> OR comparacion .)
    DO              reduce using rule 73 (aux_expresion -> OR comparacion .)
    AND             shift and go to state 129
    OR              shift and go to state 130

    aux_expresion                  shift and go to state 194

state 166

    (76) comparacion -> exp LESSTHAN exp .
    (79) aux_comparacion -> exp LESSTHAN exp .

    AND             reduce using rule 76 (comparacion -> exp LESSTHAN exp .)
    OR              reduce using rule 76 (comparacion -> exp LESSTHAN exp .)
    LPAREN          reduce using rule 79 (aux_comparacion -> exp LESSTHAN exp .)
    PLUS            reduce using rule 79 (aux_comparacion -> exp LESSTHAN exp .)
    MINUS           reduce using rule 79 (aux_comparacion -> exp LESSTHAN exp .)
    ID              reduce using rule 79 (aux_comparacion -> exp LESSTHAN exp .)
    CTE_INT         reduce using rule 79 (aux_comparacion -> exp LESSTHAN exp .)
    CTE_FLOAT       reduce using rule 79 (aux_comparacion -> exp LESSTHAN exp .)
    RPAREN          reduce using rule 79 (aux_comparacion -> exp LESSTHAN exp .)
    COMMA           reduce using rule 79 (aux_comparacion -> exp LESSTHAN exp .)
    RSQUARE         reduce using rule 79 (aux_comparacion -> exp LESSTHAN exp .)
    SEMICOLON       reduce using rule 79 (aux_comparacion -> exp LESSTHAN exp .)
    TO              reduce using rule 79 (aux_comparacion -> exp LESSTHAN exp .)
    DO              reduce using rule 79 (aux_comparacion -> exp LESSTHAN exp .)


state 167

    (77) comparacion -> exp GREATERTHAN exp .
    (80) aux_comparacion -> exp GREATERTHAN exp .

    AND             reduce using rule 77 (comparacion -> exp GREATERTHAN exp .)
    OR              reduce using rule 77 (comparacion -> exp GREATERTHAN exp .)
    LPAREN          reduce using rule 80 (aux_comparacion -> exp GREATERTHAN exp .)
    PLUS            reduce using rule 80 (aux_comparacion -> exp GREATERTHAN exp .)
    MINUS           reduce using rule 80 (aux_comparacion -> exp GREATERTHAN exp .)
    ID              reduce using rule 80 (aux_comparacion -> exp GREATERTHAN exp .)
    CTE_INT         reduce using rule 80 (aux_comparacion -> exp GREATERTHAN exp .)
    CTE_FLOAT       reduce using rule 80 (aux_comparacion -> exp GREATERTHAN exp .)
    RPAREN          reduce using rule 80 (aux_comparacion -> exp GREATERTHAN exp .)
    COMMA           reduce using rule 80 (aux_comparacion -> exp GREATERTHAN exp .)
    RSQUARE         reduce using rule 80 (aux_comparacion -> exp GREATERTHAN exp .)
    SEMICOLON       reduce using rule 80 (aux_comparacion -> exp GREATERTHAN exp .)
    TO              reduce using rule 80 (aux_comparacion -> exp GREATERTHAN exp .)
    DO              reduce using rule 80 (aux_comparacion -> exp GREATERTHAN exp .)


state 168

    (78) comparacion -> exp EQUAL exp .
    (81) aux_comparacion -> exp EQUAL exp .

    AND             reduce using rule 78 (comparacion -> exp EQUAL exp .)
    OR              reduce using rule 78 (comparacion -> exp EQUAL exp .)
    LPAREN          reduce using rule 81 (aux_comparacion -> exp EQUAL exp .)
    PLUS            reduce using rule 81 (aux_comparacion -> exp EQUAL exp .)
    MINUS           reduce using rule 81 (aux_comparacion -> exp EQUAL exp .)
    ID              reduce using rule 81 (aux_comparacion -> exp EQUAL exp .)
    CTE_INT         reduce using rule 81 (aux_comparacion -> exp EQUAL exp .)
    CTE_FLOAT       reduce using rule 81 (aux_comparacion -> exp EQUAL exp .)
    RPAREN          reduce using rule 81 (aux_comparacion -> exp EQUAL exp .)
    COMMA           reduce using rule 81 (aux_comparacion -> exp EQUAL exp .)
    RSQUARE         reduce using rule 81 (aux_comparacion -> exp EQUAL exp .)
    SEMICOLON       reduce using rule 81 (aux_comparacion -> exp EQUAL exp .)
    TO              reduce using rule 81 (aux_comparacion -> exp EQUAL exp .)
    DO              reduce using rule 81 (aux_comparacion -> exp EQUAL exp .)


state 169

    (84) exp -> termino pn_addition_substraction PLUS . pn_push_operator exp
    (104) pn_push_operator -> .

    LPAREN          reduce using rule 104 (pn_push_operator -> .)
    PLUS            reduce using rule 104 (pn_push_operator -> .)
    MINUS           reduce using rule 104 (pn_push_operator -> .)
    ID              reduce using rule 104 (pn_push_operator -> .)
    CTE_INT         reduce using rule 104 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 104 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 195

state 170

    (85) exp -> termino pn_addition_substraction MINUS . pn_push_operator exp
    (104) pn_push_operator -> .

    LPAREN          reduce using rule 104 (pn_push_operator -> .)
    PLUS            reduce using rule 104 (pn_push_operator -> .)
    MINUS           reduce using rule 104 (pn_push_operator -> .)
    ID              reduce using rule 104 (pn_push_operator -> .)
    CTE_INT         reduce using rule 104 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 104 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 196

state 171

    (87) termino -> factor pn_multiplication_division MULT . pn_push_operator termino
    (104) pn_push_operator -> .

    LPAREN          reduce using rule 104 (pn_push_operator -> .)
    PLUS            reduce using rule 104 (pn_push_operator -> .)
    MINUS           reduce using rule 104 (pn_push_operator -> .)
    ID              reduce using rule 104 (pn_push_operator -> .)
    CTE_INT         reduce using rule 104 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 104 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 197

state 172

    (88) termino -> factor pn_multiplication_division DIV . pn_push_operator termino
    (104) pn_push_operator -> .

    LPAREN          reduce using rule 104 (pn_push_operator -> .)
    PLUS            reduce using rule 104 (pn_push_operator -> .)
    MINUS           reduce using rule 104 (pn_push_operator -> .)
    ID              reduce using rule 104 (pn_push_operator -> .)
    CTE_INT         reduce using rule 104 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 104 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 198

state 173

    (34) condicional -> WHILE LPAREN expresion RPAREN DO . bloque
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 44

    bloque                         shift and go to state 199

state 174

    (29) escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON .

    ID              reduce using rule 29 (escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON .)
    WHILE           reduce using rule 29 (escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON .)
    WRITE           reduce using rule 29 (escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON .)
    RETURN          reduce using rule 29 (escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON .)
    READ            reduce using rule 29 (escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON .)
    IF              reduce using rule 29 (escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON .)
    FOR             reduce using rule 29 (escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 29 (escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON .)


state 175

    (32) aux_escritura -> letrero COMMA aux_escritura .

    RPAREN          reduce using rule 32 (aux_escritura -> letrero COMMA aux_escritura .)


state 176

    (33) aux_escritura -> expresion COMMA aux_escritura .

    RPAREN          reduce using rule 33 (aux_escritura -> expresion COMMA aux_escritura .)


state 177

    (55) letrero -> QUOTATION aux_letrero QUOTATION .

    COMMA           reduce using rule 55 (letrero -> QUOTATION aux_letrero QUOTATION .)
    RPAREN          reduce using rule 55 (letrero -> QUOTATION aux_letrero QUOTATION .)


state 178

    (58) aux_letrero -> CTE_CHAR aux_letrero .

    QUOTATION       reduce using rule 58 (aux_letrero -> CTE_CHAR aux_letrero .)


state 179

    (50) lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON .

    ID              reduce using rule 50 (lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON .)
    WHILE           reduce using rule 50 (lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON .)
    WRITE           reduce using rule 50 (lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON .)
    RETURN          reduce using rule 50 (lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON .)
    READ            reduce using rule 50 (lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON .)
    IF              reduce using rule 50 (lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON .)
    FOR             reduce using rule 50 (lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 50 (lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON .)


state 180

    (52) aux_lectura -> ID pn_push_operand_and_type dimensiones .
    (54) aux_lectura -> ID pn_push_operand_and_type dimensiones . COMMA aux_lectura

    RPAREN          reduce using rule 52 (aux_lectura -> ID pn_push_operand_and_type dimensiones .)
    COMMA           shift and go to state 200


state 181

    (53) aux_lectura -> ID pn_push_operand_and_type COMMA . aux_lectura
    (51) aux_lectura -> . ID pn_push_operand_and_type
    (52) aux_lectura -> . ID pn_push_operand_and_type dimensiones
    (53) aux_lectura -> . ID pn_push_operand_and_type COMMA aux_lectura
    (54) aux_lectura -> . ID pn_push_operand_and_type dimensiones COMMA aux_lectura

    ID              shift and go to state 113

    aux_lectura                    shift and go to state 201

state 182

    (59) decision -> IF LPAREN expresion RPAREN THEN . bloque
    (60) decision -> IF LPAREN expresion RPAREN THEN . bloque ELSE bloque
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 44

    bloque                         shift and go to state 202

state 183

    (65) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN . pn_push_operator expresion TO expresion DO bloque
    (104) pn_push_operator -> .

    LPAREN          reduce using rule 104 (pn_push_operator -> .)
    PLUS            reduce using rule 104 (pn_push_operator -> .)
    MINUS           reduce using rule 104 (pn_push_operator -> .)
    ID              reduce using rule 104 (pn_push_operator -> .)
    CTE_INT         reduce using rule 104 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 104 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 203

state 184

    (66) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator . expresion TO expresion DO bloque
    (70) expresion -> . comparacion aux_expresion
    (71) expresion -> . aux_comparacion
    (76) comparacion -> . exp LESSTHAN exp
    (77) comparacion -> . exp GREATERTHAN exp
    (78) comparacion -> . exp EQUAL exp
    (79) aux_comparacion -> . exp LESSTHAN exp
    (80) aux_comparacion -> . exp GREATERTHAN exp
    (81) aux_comparacion -> . exp EQUAL exp
    (82) aux_comparacion -> . exp
    (83) exp -> . termino pn_addition_substraction
    (84) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (85) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (86) termino -> . factor pn_multiplication_division
    (87) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (89) factor -> . LPAREN expresion RPAREN
    (90) factor -> . PLUS var_cte
    (91) factor -> . PLUS llamada
    (92) factor -> . MINUS var_cte
    (93) factor -> . MINUS llamada
    (94) factor -> . var_cte
    (95) factor -> . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 92
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    expresion                      shift and go to state 204
    comparacion                    shift and go to state 95
    aux_comparacion                shift and go to state 96
    exp                            shift and go to state 97
    termino                        shift and go to state 98
    factor                         shift and go to state 101
    var_cte                        shift and go to state 102
    llamada                        shift and go to state 103

state 185

    (26) aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE .

    COMMA           reduce using rule 26 (aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE .)
    SEMICOLON       reduce using rule 26 (aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE .)


state 186

    (47) asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion . pn_assign SEMICOLON
    (107) pn_assign -> .

    SEMICOLON       reduce using rule 107 (pn_assign -> .)

    pn_assign                      shift and go to state 205

state 187

    (48) asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign . SEMICOLON

    SEMICOLON       shift and go to state 206


state 188

    (67) dimensiones -> LSQUARE expresion RSQUARE LSQUARE . expresion RSQUARE
    (70) expresion -> . comparacion aux_expresion
    (71) expresion -> . aux_comparacion
    (76) comparacion -> . exp LESSTHAN exp
    (77) comparacion -> . exp GREATERTHAN exp
    (78) comparacion -> . exp EQUAL exp
    (79) aux_comparacion -> . exp LESSTHAN exp
    (80) aux_comparacion -> . exp GREATERTHAN exp
    (81) aux_comparacion -> . exp EQUAL exp
    (82) aux_comparacion -> . exp
    (83) exp -> . termino pn_addition_substraction
    (84) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (85) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (86) termino -> . factor pn_multiplication_division
    (87) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (89) factor -> . LPAREN expresion RPAREN
    (90) factor -> . PLUS var_cte
    (91) factor -> . PLUS llamada
    (92) factor -> . MINUS var_cte
    (93) factor -> . MINUS llamada
    (94) factor -> . var_cte
    (95) factor -> . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 92
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    expresion                      shift and go to state 207
    comparacion                    shift and go to state 95
    aux_comparacion                shift and go to state 96
    exp                            shift and go to state 97
    termino                        shift and go to state 98
    factor                         shift and go to state 101
    var_cte                        shift and go to state 102
    llamada                        shift and go to state 103

state 189

    (68) dimensiones -> LSQUARE expresion COMMA expresion . RSQUARE

    RSQUARE         shift and go to state 208


state 190

    (74) aux_expresion -> AND comparacion aux_expresion .

    LPAREN          reduce using rule 74 (aux_expresion -> AND comparacion aux_expresion .)
    PLUS            reduce using rule 74 (aux_expresion -> AND comparacion aux_expresion .)
    MINUS           reduce using rule 74 (aux_expresion -> AND comparacion aux_expresion .)
    ID              reduce using rule 74 (aux_expresion -> AND comparacion aux_expresion .)
    CTE_INT         reduce using rule 74 (aux_expresion -> AND comparacion aux_expresion .)
    CTE_FLOAT       reduce using rule 74 (aux_expresion -> AND comparacion aux_expresion .)
    RPAREN          reduce using rule 74 (aux_expresion -> AND comparacion aux_expresion .)
    COMMA           reduce using rule 74 (aux_expresion -> AND comparacion aux_expresion .)
    RSQUARE         reduce using rule 74 (aux_expresion -> AND comparacion aux_expresion .)
    SEMICOLON       reduce using rule 74 (aux_expresion -> AND comparacion aux_expresion .)
    TO              reduce using rule 74 (aux_expresion -> AND comparacion aux_expresion .)
    DO              reduce using rule 74 (aux_expresion -> AND comparacion aux_expresion .)


state 191

    (76) comparacion -> exp LESSTHAN . exp
    (83) exp -> . termino pn_addition_substraction
    (84) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (85) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (86) termino -> . factor pn_multiplication_division
    (87) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (89) factor -> . LPAREN expresion RPAREN
    (90) factor -> . PLUS var_cte
    (91) factor -> . PLUS llamada
    (92) factor -> . MINUS var_cte
    (93) factor -> . MINUS llamada
    (94) factor -> . var_cte
    (95) factor -> . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 92
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    exp                            shift and go to state 209
    termino                        shift and go to state 98
    factor                         shift and go to state 101
    var_cte                        shift and go to state 102
    llamada                        shift and go to state 103

state 192

    (77) comparacion -> exp GREATERTHAN . exp
    (83) exp -> . termino pn_addition_substraction
    (84) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (85) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (86) termino -> . factor pn_multiplication_division
    (87) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (89) factor -> . LPAREN expresion RPAREN
    (90) factor -> . PLUS var_cte
    (91) factor -> . PLUS llamada
    (92) factor -> . MINUS var_cte
    (93) factor -> . MINUS llamada
    (94) factor -> . var_cte
    (95) factor -> . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 92
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    exp                            shift and go to state 210
    termino                        shift and go to state 98
    factor                         shift and go to state 101
    var_cte                        shift and go to state 102
    llamada                        shift and go to state 103

state 193

    (78) comparacion -> exp EQUAL . exp
    (83) exp -> . termino pn_addition_substraction
    (84) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (85) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (86) termino -> . factor pn_multiplication_division
    (87) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (89) factor -> . LPAREN expresion RPAREN
    (90) factor -> . PLUS var_cte
    (91) factor -> . PLUS llamada
    (92) factor -> . MINUS var_cte
    (93) factor -> . MINUS llamada
    (94) factor -> . var_cte
    (95) factor -> . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 92
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    exp                            shift and go to state 211
    termino                        shift and go to state 98
    factor                         shift and go to state 101
    var_cte                        shift and go to state 102
    llamada                        shift and go to state 103

state 194

    (75) aux_expresion -> OR comparacion aux_expresion .

    LPAREN          reduce using rule 75 (aux_expresion -> OR comparacion aux_expresion .)
    PLUS            reduce using rule 75 (aux_expresion -> OR comparacion aux_expresion .)
    MINUS           reduce using rule 75 (aux_expresion -> OR comparacion aux_expresion .)
    ID              reduce using rule 75 (aux_expresion -> OR comparacion aux_expresion .)
    CTE_INT         reduce using rule 75 (aux_expresion -> OR comparacion aux_expresion .)
    CTE_FLOAT       reduce using rule 75 (aux_expresion -> OR comparacion aux_expresion .)
    RPAREN          reduce using rule 75 (aux_expresion -> OR comparacion aux_expresion .)
    COMMA           reduce using rule 75 (aux_expresion -> OR comparacion aux_expresion .)
    RSQUARE         reduce using rule 75 (aux_expresion -> OR comparacion aux_expresion .)
    SEMICOLON       reduce using rule 75 (aux_expresion -> OR comparacion aux_expresion .)
    TO              reduce using rule 75 (aux_expresion -> OR comparacion aux_expresion .)
    DO              reduce using rule 75 (aux_expresion -> OR comparacion aux_expresion .)


state 195

    (84) exp -> termino pn_addition_substraction PLUS pn_push_operator . exp
    (83) exp -> . termino pn_addition_substraction
    (84) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (85) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (86) termino -> . factor pn_multiplication_division
    (87) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (89) factor -> . LPAREN expresion RPAREN
    (90) factor -> . PLUS var_cte
    (91) factor -> . PLUS llamada
    (92) factor -> . MINUS var_cte
    (93) factor -> . MINUS llamada
    (94) factor -> . var_cte
    (95) factor -> . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 92
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    termino                        shift and go to state 98
    exp                            shift and go to state 212
    factor                         shift and go to state 101
    var_cte                        shift and go to state 102
    llamada                        shift and go to state 103

state 196

    (85) exp -> termino pn_addition_substraction MINUS pn_push_operator . exp
    (83) exp -> . termino pn_addition_substraction
    (84) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (85) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (86) termino -> . factor pn_multiplication_division
    (87) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (89) factor -> . LPAREN expresion RPAREN
    (90) factor -> . PLUS var_cte
    (91) factor -> . PLUS llamada
    (92) factor -> . MINUS var_cte
    (93) factor -> . MINUS llamada
    (94) factor -> . var_cte
    (95) factor -> . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 92
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    termino                        shift and go to state 98
    exp                            shift and go to state 213
    factor                         shift and go to state 101
    var_cte                        shift and go to state 102
    llamada                        shift and go to state 103

state 197

    (87) termino -> factor pn_multiplication_division MULT pn_push_operator . termino
    (86) termino -> . factor pn_multiplication_division
    (87) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (89) factor -> . LPAREN expresion RPAREN
    (90) factor -> . PLUS var_cte
    (91) factor -> . PLUS llamada
    (92) factor -> . MINUS var_cte
    (93) factor -> . MINUS llamada
    (94) factor -> . var_cte
    (95) factor -> . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 92
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    factor                         shift and go to state 101
    termino                        shift and go to state 214
    var_cte                        shift and go to state 102
    llamada                        shift and go to state 103

state 198

    (88) termino -> factor pn_multiplication_division DIV pn_push_operator . termino
    (86) termino -> . factor pn_multiplication_division
    (87) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (89) factor -> . LPAREN expresion RPAREN
    (90) factor -> . PLUS var_cte
    (91) factor -> . PLUS llamada
    (92) factor -> . MINUS var_cte
    (93) factor -> . MINUS llamada
    (94) factor -> . var_cte
    (95) factor -> . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 92
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    factor                         shift and go to state 101
    termino                        shift and go to state 215
    var_cte                        shift and go to state 102
    llamada                        shift and go to state 103

state 199

    (34) condicional -> WHILE LPAREN expresion RPAREN DO bloque .

    ID              reduce using rule 34 (condicional -> WHILE LPAREN expresion RPAREN DO bloque .)
    WHILE           reduce using rule 34 (condicional -> WHILE LPAREN expresion RPAREN DO bloque .)
    WRITE           reduce using rule 34 (condicional -> WHILE LPAREN expresion RPAREN DO bloque .)
    RETURN          reduce using rule 34 (condicional -> WHILE LPAREN expresion RPAREN DO bloque .)
    READ            reduce using rule 34 (condicional -> WHILE LPAREN expresion RPAREN DO bloque .)
    IF              reduce using rule 34 (condicional -> WHILE LPAREN expresion RPAREN DO bloque .)
    FOR             reduce using rule 34 (condicional -> WHILE LPAREN expresion RPAREN DO bloque .)
    RBRACKET        reduce using rule 34 (condicional -> WHILE LPAREN expresion RPAREN DO bloque .)


state 200

    (54) aux_lectura -> ID pn_push_operand_and_type dimensiones COMMA . aux_lectura
    (51) aux_lectura -> . ID pn_push_operand_and_type
    (52) aux_lectura -> . ID pn_push_operand_and_type dimensiones
    (53) aux_lectura -> . ID pn_push_operand_and_type COMMA aux_lectura
    (54) aux_lectura -> . ID pn_push_operand_and_type dimensiones COMMA aux_lectura

    ID              shift and go to state 113

    aux_lectura                    shift and go to state 216

state 201

    (53) aux_lectura -> ID pn_push_operand_and_type COMMA aux_lectura .

    RPAREN          reduce using rule 53 (aux_lectura -> ID pn_push_operand_and_type COMMA aux_lectura .)


state 202

    (59) decision -> IF LPAREN expresion RPAREN THEN bloque .
    (60) decision -> IF LPAREN expresion RPAREN THEN bloque . ELSE bloque

    ID              reduce using rule 59 (decision -> IF LPAREN expresion RPAREN THEN bloque .)
    WHILE           reduce using rule 59 (decision -> IF LPAREN expresion RPAREN THEN bloque .)
    WRITE           reduce using rule 59 (decision -> IF LPAREN expresion RPAREN THEN bloque .)
    RETURN          reduce using rule 59 (decision -> IF LPAREN expresion RPAREN THEN bloque .)
    READ            reduce using rule 59 (decision -> IF LPAREN expresion RPAREN THEN bloque .)
    IF              reduce using rule 59 (decision -> IF LPAREN expresion RPAREN THEN bloque .)
    FOR             reduce using rule 59 (decision -> IF LPAREN expresion RPAREN THEN bloque .)
    RBRACKET        reduce using rule 59 (decision -> IF LPAREN expresion RPAREN THEN bloque .)
    ELSE            shift and go to state 217


state 203

    (65) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator . expresion TO expresion DO bloque
    (70) expresion -> . comparacion aux_expresion
    (71) expresion -> . aux_comparacion
    (76) comparacion -> . exp LESSTHAN exp
    (77) comparacion -> . exp GREATERTHAN exp
    (78) comparacion -> . exp EQUAL exp
    (79) aux_comparacion -> . exp LESSTHAN exp
    (80) aux_comparacion -> . exp GREATERTHAN exp
    (81) aux_comparacion -> . exp EQUAL exp
    (82) aux_comparacion -> . exp
    (83) exp -> . termino pn_addition_substraction
    (84) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (85) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (86) termino -> . factor pn_multiplication_division
    (87) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (89) factor -> . LPAREN expresion RPAREN
    (90) factor -> . PLUS var_cte
    (91) factor -> . PLUS llamada
    (92) factor -> . MINUS var_cte
    (93) factor -> . MINUS llamada
    (94) factor -> . var_cte
    (95) factor -> . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 92
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    expresion                      shift and go to state 218
    comparacion                    shift and go to state 95
    aux_comparacion                shift and go to state 96
    exp                            shift and go to state 97
    termino                        shift and go to state 98
    factor                         shift and go to state 101
    var_cte                        shift and go to state 102
    llamada                        shift and go to state 103

state 204

    (66) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion . TO expresion DO bloque

    TO              shift and go to state 219


state 205

    (47) asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign . SEMICOLON

    SEMICOLON       shift and go to state 220


state 206

    (48) asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON .

    ID              reduce using rule 48 (asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    WHILE           reduce using rule 48 (asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    WRITE           reduce using rule 48 (asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    RETURN          reduce using rule 48 (asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    READ            reduce using rule 48 (asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    IF              reduce using rule 48 (asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    FOR             reduce using rule 48 (asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    RBRACKET        reduce using rule 48 (asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)


state 207

    (67) dimensiones -> LSQUARE expresion RSQUARE LSQUARE expresion . RSQUARE

    RSQUARE         shift and go to state 221


state 208

    (68) dimensiones -> LSQUARE expresion COMMA expresion RSQUARE .

    ASSIGN          reduce using rule 68 (dimensiones -> LSQUARE expresion COMMA expresion RSQUARE .)
    COMMA           reduce using rule 68 (dimensiones -> LSQUARE expresion COMMA expresion RSQUARE .)
    RPAREN          reduce using rule 68 (dimensiones -> LSQUARE expresion COMMA expresion RSQUARE .)


state 209

    (76) comparacion -> exp LESSTHAN exp .

    AND             reduce using rule 76 (comparacion -> exp LESSTHAN exp .)
    OR              reduce using rule 76 (comparacion -> exp LESSTHAN exp .)
    LPAREN          reduce using rule 76 (comparacion -> exp LESSTHAN exp .)
    PLUS            reduce using rule 76 (comparacion -> exp LESSTHAN exp .)
    MINUS           reduce using rule 76 (comparacion -> exp LESSTHAN exp .)
    ID              reduce using rule 76 (comparacion -> exp LESSTHAN exp .)
    CTE_INT         reduce using rule 76 (comparacion -> exp LESSTHAN exp .)
    CTE_FLOAT       reduce using rule 76 (comparacion -> exp LESSTHAN exp .)
    RPAREN          reduce using rule 76 (comparacion -> exp LESSTHAN exp .)
    COMMA           reduce using rule 76 (comparacion -> exp LESSTHAN exp .)
    RSQUARE         reduce using rule 76 (comparacion -> exp LESSTHAN exp .)
    SEMICOLON       reduce using rule 76 (comparacion -> exp LESSTHAN exp .)
    TO              reduce using rule 76 (comparacion -> exp LESSTHAN exp .)
    DO              reduce using rule 76 (comparacion -> exp LESSTHAN exp .)


state 210

    (77) comparacion -> exp GREATERTHAN exp .

    AND             reduce using rule 77 (comparacion -> exp GREATERTHAN exp .)
    OR              reduce using rule 77 (comparacion -> exp GREATERTHAN exp .)
    LPAREN          reduce using rule 77 (comparacion -> exp GREATERTHAN exp .)
    PLUS            reduce using rule 77 (comparacion -> exp GREATERTHAN exp .)
    MINUS           reduce using rule 77 (comparacion -> exp GREATERTHAN exp .)
    ID              reduce using rule 77 (comparacion -> exp GREATERTHAN exp .)
    CTE_INT         reduce using rule 77 (comparacion -> exp GREATERTHAN exp .)
    CTE_FLOAT       reduce using rule 77 (comparacion -> exp GREATERTHAN exp .)
    RPAREN          reduce using rule 77 (comparacion -> exp GREATERTHAN exp .)
    COMMA           reduce using rule 77 (comparacion -> exp GREATERTHAN exp .)
    RSQUARE         reduce using rule 77 (comparacion -> exp GREATERTHAN exp .)
    SEMICOLON       reduce using rule 77 (comparacion -> exp GREATERTHAN exp .)
    TO              reduce using rule 77 (comparacion -> exp GREATERTHAN exp .)
    DO              reduce using rule 77 (comparacion -> exp GREATERTHAN exp .)


state 211

    (78) comparacion -> exp EQUAL exp .

    AND             reduce using rule 78 (comparacion -> exp EQUAL exp .)
    OR              reduce using rule 78 (comparacion -> exp EQUAL exp .)
    LPAREN          reduce using rule 78 (comparacion -> exp EQUAL exp .)
    PLUS            reduce using rule 78 (comparacion -> exp EQUAL exp .)
    MINUS           reduce using rule 78 (comparacion -> exp EQUAL exp .)
    ID              reduce using rule 78 (comparacion -> exp EQUAL exp .)
    CTE_INT         reduce using rule 78 (comparacion -> exp EQUAL exp .)
    CTE_FLOAT       reduce using rule 78 (comparacion -> exp EQUAL exp .)
    RPAREN          reduce using rule 78 (comparacion -> exp EQUAL exp .)
    COMMA           reduce using rule 78 (comparacion -> exp EQUAL exp .)
    RSQUARE         reduce using rule 78 (comparacion -> exp EQUAL exp .)
    SEMICOLON       reduce using rule 78 (comparacion -> exp EQUAL exp .)
    TO              reduce using rule 78 (comparacion -> exp EQUAL exp .)
    DO              reduce using rule 78 (comparacion -> exp EQUAL exp .)


state 212

    (84) exp -> termino pn_addition_substraction PLUS pn_push_operator exp .

    LESSTHAN        reduce using rule 84 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    GREATERTHAN     reduce using rule 84 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    EQUAL           reduce using rule 84 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    LPAREN          reduce using rule 84 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    PLUS            reduce using rule 84 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    MINUS           reduce using rule 84 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    ID              reduce using rule 84 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    CTE_INT         reduce using rule 84 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    CTE_FLOAT       reduce using rule 84 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    RPAREN          reduce using rule 84 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    COMMA           reduce using rule 84 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    RSQUARE         reduce using rule 84 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    SEMICOLON       reduce using rule 84 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    AND             reduce using rule 84 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    OR              reduce using rule 84 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    TO              reduce using rule 84 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    DO              reduce using rule 84 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)


state 213

    (85) exp -> termino pn_addition_substraction MINUS pn_push_operator exp .

    LESSTHAN        reduce using rule 85 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    GREATERTHAN     reduce using rule 85 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    EQUAL           reduce using rule 85 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    LPAREN          reduce using rule 85 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    PLUS            reduce using rule 85 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    MINUS           reduce using rule 85 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    ID              reduce using rule 85 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    CTE_INT         reduce using rule 85 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    CTE_FLOAT       reduce using rule 85 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    RPAREN          reduce using rule 85 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    COMMA           reduce using rule 85 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    RSQUARE         reduce using rule 85 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    SEMICOLON       reduce using rule 85 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    AND             reduce using rule 85 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    OR              reduce using rule 85 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    TO              reduce using rule 85 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    DO              reduce using rule 85 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)


state 214

    (87) termino -> factor pn_multiplication_division MULT pn_push_operator termino .

    PLUS            reduce using rule 87 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    MINUS           reduce using rule 87 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    LESSTHAN        reduce using rule 87 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    GREATERTHAN     reduce using rule 87 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    EQUAL           reduce using rule 87 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    LPAREN          reduce using rule 87 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    ID              reduce using rule 87 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    CTE_INT         reduce using rule 87 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    CTE_FLOAT       reduce using rule 87 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    RPAREN          reduce using rule 87 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    COMMA           reduce using rule 87 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    RSQUARE         reduce using rule 87 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    SEMICOLON       reduce using rule 87 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    AND             reduce using rule 87 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    OR              reduce using rule 87 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    TO              reduce using rule 87 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    DO              reduce using rule 87 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)


state 215

    (88) termino -> factor pn_multiplication_division DIV pn_push_operator termino .

    PLUS            reduce using rule 88 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    MINUS           reduce using rule 88 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    LESSTHAN        reduce using rule 88 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    GREATERTHAN     reduce using rule 88 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    EQUAL           reduce using rule 88 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    LPAREN          reduce using rule 88 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    ID              reduce using rule 88 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    CTE_INT         reduce using rule 88 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    CTE_FLOAT       reduce using rule 88 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    RPAREN          reduce using rule 88 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    COMMA           reduce using rule 88 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    RSQUARE         reduce using rule 88 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    SEMICOLON       reduce using rule 88 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    AND             reduce using rule 88 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    OR              reduce using rule 88 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    TO              reduce using rule 88 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    DO              reduce using rule 88 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)


state 216

    (54) aux_lectura -> ID pn_push_operand_and_type dimensiones COMMA aux_lectura .

    RPAREN          reduce using rule 54 (aux_lectura -> ID pn_push_operand_and_type dimensiones COMMA aux_lectura .)


state 217

    (60) decision -> IF LPAREN expresion RPAREN THEN bloque ELSE . bloque
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 44

    bloque                         shift and go to state 222

state 218

    (65) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion . TO expresion DO bloque

    TO              shift and go to state 223


state 219

    (66) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion TO . expresion DO bloque
    (70) expresion -> . comparacion aux_expresion
    (71) expresion -> . aux_comparacion
    (76) comparacion -> . exp LESSTHAN exp
    (77) comparacion -> . exp GREATERTHAN exp
    (78) comparacion -> . exp EQUAL exp
    (79) aux_comparacion -> . exp LESSTHAN exp
    (80) aux_comparacion -> . exp GREATERTHAN exp
    (81) aux_comparacion -> . exp EQUAL exp
    (82) aux_comparacion -> . exp
    (83) exp -> . termino pn_addition_substraction
    (84) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (85) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (86) termino -> . factor pn_multiplication_division
    (87) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (89) factor -> . LPAREN expresion RPAREN
    (90) factor -> . PLUS var_cte
    (91) factor -> . PLUS llamada
    (92) factor -> . MINUS var_cte
    (93) factor -> . MINUS llamada
    (94) factor -> . var_cte
    (95) factor -> . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 92
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    expresion                      shift and go to state 224
    comparacion                    shift and go to state 95
    aux_comparacion                shift and go to state 96
    exp                            shift and go to state 97
    termino                        shift and go to state 98
    factor                         shift and go to state 101
    var_cte                        shift and go to state 102
    llamada                        shift and go to state 103

state 220

    (47) asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON .

    ID              reduce using rule 47 (asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    WHILE           reduce using rule 47 (asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    WRITE           reduce using rule 47 (asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    RETURN          reduce using rule 47 (asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    READ            reduce using rule 47 (asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    IF              reduce using rule 47 (asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    FOR             reduce using rule 47 (asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    RBRACKET        reduce using rule 47 (asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)


state 221

    (67) dimensiones -> LSQUARE expresion RSQUARE LSQUARE expresion RSQUARE .

    ASSIGN          reduce using rule 67 (dimensiones -> LSQUARE expresion RSQUARE LSQUARE expresion RSQUARE .)
    COMMA           reduce using rule 67 (dimensiones -> LSQUARE expresion RSQUARE LSQUARE expresion RSQUARE .)
    RPAREN          reduce using rule 67 (dimensiones -> LSQUARE expresion RSQUARE LSQUARE expresion RSQUARE .)


state 222

    (60) decision -> IF LPAREN expresion RPAREN THEN bloque ELSE bloque .

    ID              reduce using rule 60 (decision -> IF LPAREN expresion RPAREN THEN bloque ELSE bloque .)
    WHILE           reduce using rule 60 (decision -> IF LPAREN expresion RPAREN THEN bloque ELSE bloque .)
    WRITE           reduce using rule 60 (decision -> IF LPAREN expresion RPAREN THEN bloque ELSE bloque .)
    RETURN          reduce using rule 60 (decision -> IF LPAREN expresion RPAREN THEN bloque ELSE bloque .)
    READ            reduce using rule 60 (decision -> IF LPAREN expresion RPAREN THEN bloque ELSE bloque .)
    IF              reduce using rule 60 (decision -> IF LPAREN expresion RPAREN THEN bloque ELSE bloque .)
    FOR             reduce using rule 60 (decision -> IF LPAREN expresion RPAREN THEN bloque ELSE bloque .)
    RBRACKET        reduce using rule 60 (decision -> IF LPAREN expresion RPAREN THEN bloque ELSE bloque .)


state 223

    (65) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion TO . expresion DO bloque
    (70) expresion -> . comparacion aux_expresion
    (71) expresion -> . aux_comparacion
    (76) comparacion -> . exp LESSTHAN exp
    (77) comparacion -> . exp GREATERTHAN exp
    (78) comparacion -> . exp EQUAL exp
    (79) aux_comparacion -> . exp LESSTHAN exp
    (80) aux_comparacion -> . exp GREATERTHAN exp
    (81) aux_comparacion -> . exp EQUAL exp
    (82) aux_comparacion -> . exp
    (83) exp -> . termino pn_addition_substraction
    (84) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (85) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (86) termino -> . factor pn_multiplication_division
    (87) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (88) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (89) factor -> . LPAREN expresion RPAREN
    (90) factor -> . PLUS var_cte
    (91) factor -> . PLUS llamada
    (92) factor -> . MINUS var_cte
    (93) factor -> . MINUS llamada
    (94) factor -> . var_cte
    (95) factor -> . llamada
    (96) var_cte -> . ID pn_push_operand_and_type
    (97) var_cte -> . CTE_INT pn_push_constant_and_type
    (98) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (62) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 92
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    ID              shift and go to state 91
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    expresion                      shift and go to state 225
    comparacion                    shift and go to state 95
    aux_comparacion                shift and go to state 96
    exp                            shift and go to state 97
    termino                        shift and go to state 98
    factor                         shift and go to state 101
    var_cte                        shift and go to state 102
    llamada                        shift and go to state 103

state 224

    (66) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion TO expresion . DO bloque

    DO              shift and go to state 226


state 225

    (65) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion TO expresion . DO bloque

    DO              shift and go to state 227


state 226

    (66) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion TO expresion DO . bloque
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 44

    bloque                         shift and go to state 228

state 227

    (65) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion TO expresion DO . bloque
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 44

    bloque                         shift and go to state 229

state 228

    (66) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion TO expresion DO bloque .

    ID              reduce using rule 66 (no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion TO expresion DO bloque .)
    WHILE           reduce using rule 66 (no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion TO expresion DO bloque .)
    WRITE           reduce using rule 66 (no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion TO expresion DO bloque .)
    RETURN          reduce using rule 66 (no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion TO expresion DO bloque .)
    READ            reduce using rule 66 (no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion TO expresion DO bloque .)
    IF              reduce using rule 66 (no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion TO expresion DO bloque .)
    FOR             reduce using rule 66 (no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion TO expresion DO bloque .)
    RBRACKET        reduce using rule 66 (no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion TO expresion DO bloque .)


state 229

    (65) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion TO expresion DO bloque .

    ID              reduce using rule 65 (no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion TO expresion DO bloque .)
    WHILE           reduce using rule 65 (no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion TO expresion DO bloque .)
    WRITE           reduce using rule 65 (no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion TO expresion DO bloque .)
    RETURN          reduce using rule 65 (no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion TO expresion DO bloque .)
    READ            reduce using rule 65 (no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion TO expresion DO bloque .)
    IF              reduce using rule 65 (no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion TO expresion DO bloque .)
    FOR             reduce using rule 65 (no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion TO expresion DO bloque .)
    RBRACKET        reduce using rule 65 (no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion TO expresion DO bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT in state 39 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 39 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 39 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 91 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 134 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 134 resolved as shift
