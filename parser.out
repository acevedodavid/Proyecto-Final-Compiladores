Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON vars aux_funcion main pn_program_end
Rule 2     program -> PROGRAM ID SEMICOLON vars main pn_program_end
Rule 3     program -> PROGRAM ID SEMICOLON aux_funcion main pn_program_end
Rule 4     program -> PROGRAM ID SEMICOLON main pn_program_end
Rule 5     main -> MAIN pn_current_function LPAREN RPAREN vars bloque
Rule 6     main -> MAIN pn_current_function LPAREN RPAREN bloque
Rule 7     aux_funcion -> funcion
Rule 8     aux_funcion -> funcion aux_funcion
Rule 9     funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN vars bloque
Rule 10    funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN bloque
Rule 11    funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN vars bloque
Rule 12    funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN bloque
Rule 13    vars -> VAR var
Rule 14    var -> tipo COLON lista_ids SEMICOLON
Rule 15    var -> tipo COLON lista_ids SEMICOLON var
Rule 16    tipo_retorno -> tipo
Rule 17    tipo_retorno -> VOID pn_current_type
Rule 18    tipo -> INT pn_current_type
Rule 19    tipo -> FLOAT pn_current_type
Rule 20    tipo -> CHAR pn_current_type
Rule 21    parametros -> tipo ID
Rule 22    parametros -> tipo ID COMMA parametros
Rule 23    lista_ids -> aux_lista_rec
Rule 24    aux_lista_rec -> aux_lista
Rule 25    aux_lista_rec -> aux_lista COMMA aux_lista_rec
Rule 26    aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE
Rule 27    aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE
Rule 28    aux_lista -> ID pn_add_symbol
Rule 29    escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON
Rule 30    aux_escritura -> pn_push_write_operator letrero pn_write
Rule 31    aux_escritura -> pn_push_write_operator expresion pn_write
Rule 32    aux_escritura -> pn_push_write_operator letrero pn_write COMMA aux_escritura
Rule 33    aux_escritura -> pn_push_write_operator expresion pn_write COMMA aux_escritura
Rule 34    condicional -> WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN DO bloque pn_while_3
Rule 35    bloque -> LBRACKET estatutos RBRACKET
Rule 36    bloque -> LBRACKET RBRACKET
Rule 37    estatutos -> estatuto estatutos
Rule 38    estatutos -> estatuto
Rule 39    estatuto -> asignacion
Rule 40    estatuto -> condicional
Rule 41    estatuto -> escritura
Rule 42    estatuto -> retorno
Rule 43    estatuto -> lectura
Rule 44    estatuto -> decision
Rule 45    estatuto -> no_condicional
Rule 46    asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON
Rule 47    asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON
Rule 48    retorno -> RETURN LPAREN expresion RPAREN
Rule 49    lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON
Rule 50    aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read
Rule 51    aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones
Rule 52    aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read COMMA aux_lectura
Rule 53    aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones COMMA aux_lectura
Rule 54    letrero -> QUOTATION aux_letrero QUOTATION
Rule 55    letrero -> QUOTATION QUOTATION
Rule 56    aux_letrero -> CTE_CHAR
Rule 57    aux_letrero -> CTE_CHAR aux_letrero
Rule 58    decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque pn_if_2
Rule 59    decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2
Rule 60    llamada -> ID LPAREN aux_llamada RPAREN SEMICOLON
Rule 61    aux_llamada -> expresion
Rule 62    aux_llamada -> expresion COMMA aux_llamada
Rule 63    no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
Rule 64    no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
Rule 65    dimensiones -> LSQUARE expresion RSQUARE LSQUARE expresion RSQUARE
Rule 66    dimensiones -> LSQUARE expresion COMMA expresion RSQUARE
Rule 67    dimensiones -> LSQUARE expresion RSQUARE
Rule 68    expresion -> comparacion aux_expresion
Rule 69    expresion -> aux_comparacion
Rule 70    aux_expresion -> AND comparacion
Rule 71    aux_expresion -> OR comparacion
Rule 72    aux_expresion -> AND comparacion aux_expresion
Rule 73    aux_expresion -> OR comparacion aux_expresion
Rule 74    comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison
Rule 75    comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison
Rule 76    comparacion -> exp EQUAL pn_push_operator exp pn_comparison
Rule 77    aux_comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison
Rule 78    aux_comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison
Rule 79    aux_comparacion -> exp EQUAL pn_push_operator exp pn_comparison
Rule 80    aux_comparacion -> exp
Rule 81    exp -> termino pn_addition_substraction
Rule 82    exp -> termino pn_addition_substraction PLUS pn_push_operator exp
Rule 83    exp -> termino pn_addition_substraction MINUS pn_push_operator exp
Rule 84    termino -> factor pn_multiplication_division
Rule 85    termino -> factor pn_multiplication_division MULT pn_push_operator termino
Rule 86    termino -> factor pn_multiplication_division DIV pn_push_operator termino
Rule 87    factor -> LPAREN expresion RPAREN
Rule 88    factor -> PLUS var_cte
Rule 89    factor -> PLUS llamada
Rule 90    factor -> MINUS var_cte
Rule 91    factor -> MINUS llamada
Rule 92    factor -> var_cte
Rule 93    factor -> llamada
Rule 94    var_cte -> ID pn_push_operand_and_type
Rule 95    var_cte -> CTE_INT pn_push_constant_and_type
Rule 96    var_cte -> CTE_FLOAT pn_push_constant_and_type
Rule 97    pn_current_function -> <empty>
Rule 98    pn_current_type -> <empty>
Rule 99    pn_program_end -> <empty>
Rule 100   pn_add_symbol -> <empty>
Rule 101   pn_push_constant_and_type -> <empty>
Rule 102   pn_push_operand_and_type -> <empty>
Rule 103   pn_push_operator -> <empty>
Rule 104   pn_addition_substraction -> <empty>
Rule 105   pn_multiplication_division -> <empty>
Rule 106   pn_assign -> <empty>
Rule 107   pn_push_read_operator -> <empty>
Rule 108   pn_read -> <empty>
Rule 109   pn_push_write_operator -> <empty>
Rule 110   pn_write -> <empty>
Rule 111   pn_comparison -> <empty>
Rule 112   pn_if_1 -> <empty>
Rule 113   pn_if_2 -> <empty>
Rule 114   pn_else -> <empty>
Rule 115   pn_while_1 -> <empty>
Rule 116   pn_while_2 -> <empty>
Rule 117   pn_while_3 -> <empty>
Rule 118   pn_for_push_comparison -> <empty>
Rule 119   pn_for_go_false -> <empty>
Rule 120   pn_for_go_back -> <empty>

Terminals, with rules where they appear

AND                  : 70 72
ASSIGN               : 46 47 63 64
CHAR                 : 20
COLON                : 14 15
COMMA                : 22 25 32 33 52 53 62 66
CTE_CHAR             : 56 57
CTE_FLOAT            : 96
CTE_INT              : 26 26 27 95
DIV                  : 86
DO                   : 34 63 64
ELSE                 : 59
EQUAL                : 76 79
FLOAT                : 19
FOR                  : 63 64
GREATERTHAN          : 75 78
ID                   : 1 2 3 4 9 10 11 12 21 22 26 27 28 46 47 50 51 52 53 60 63 64 94
IF                   : 58 59
INT                  : 18
LBRACKET             : 35 36
LESSTHAN             : 74 77
LPAREN               : 5 6 9 10 11 12 29 34 48 49 58 59 60 87
LSQUARE              : 26 26 27 65 65 66 67
MAIN                 : 5 6
MINUS                : 83 90 91
MODULE               : 9 10 11 12
MULT                 : 85
OR                   : 71 73
PLUS                 : 82 88 89
PROGRAM              : 1 2 3 4
QUOTATION            : 54 54 55 55
RBRACKET             : 35 36
READ                 : 49
RETURN               : 48
RPAREN               : 5 6 9 10 11 12 29 34 48 49 58 59 60 87
RSQUARE              : 26 26 27 65 65 66 67
SEMICOLON            : 1 2 3 4 14 15 29 46 47 49 60
THEN                 : 58 59
TO                   : 63 64
VAR                  : 13
VOID                 : 17
WHILE                : 34
WRITE                : 29
error                : 

Nonterminals, with rules where they appear

asignacion           : 39
aux_comparacion      : 69
aux_escritura        : 29 32 33
aux_expresion        : 68 72 73
aux_funcion          : 1 3 8
aux_lectura          : 49 52 53
aux_letrero          : 54 57
aux_lista            : 24 25
aux_lista_rec        : 23 25
aux_llamada          : 60 62
bloque               : 5 6 9 10 11 12 34 58 59 59 63 64
comparacion          : 68 70 71 72 73
condicional          : 40
decision             : 44
dimensiones          : 46 51 53 63
escritura            : 41
estatuto             : 37 38
estatutos            : 35 37
exp                  : 74 74 75 75 76 76 77 77 78 78 79 79 80 82 83
expresion            : 31 33 34 46 47 48 58 59 61 62 63 63 64 64 65 65 66 66 67 87
factor               : 84 85 86
funcion              : 7 8
lectura              : 43
letrero              : 30 32
lista_ids            : 14 15
llamada              : 89 91 93
main                 : 1 2 3 4
no_condicional       : 45
parametros           : 9 10 22
pn_add_symbol        : 26 27 28
pn_addition_substraction : 81 82 83
pn_assign            : 46 47 63 64
pn_comparison        : 63 64 74 75 76 77 78 79
pn_current_function  : 5 6 9 10 11 12
pn_current_type      : 17 18 19 20
pn_else              : 59
pn_for_go_back       : 63 64
pn_for_go_false      : 63 64
pn_for_push_comparison : 63 64
pn_if_1              : 58 59
pn_if_2              : 58 59
pn_multiplication_division : 84 85 86
pn_program_end       : 1 2 3 4
pn_push_constant_and_type : 95 96
pn_push_operand_and_type : 46 47 50 51 52 53 63 64 94
pn_push_operator     : 46 47 63 64 74 75 76 77 78 79 82 83 85 86
pn_push_read_operator : 50 51 52 53
pn_push_write_operator : 30 31 32 33
pn_read              : 50 51 52 53
pn_while_1           : 34
pn_while_2           : 34
pn_while_3           : 34
pn_write             : 30 31 32 33
program              : 0
retorno              : 42
termino              : 81 82 83 85 86
tipo                 : 14 15 16 21 22
tipo_retorno         : 9 10 11 12
var                  : 13 15
var_cte              : 88 90 92
vars                 : 1 2 5 9 11

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON vars aux_funcion main pn_program_end
    (2) program -> . PROGRAM ID SEMICOLON vars main pn_program_end
    (3) program -> . PROGRAM ID SEMICOLON aux_funcion main pn_program_end
    (4) program -> . PROGRAM ID SEMICOLON main pn_program_end

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON vars aux_funcion main pn_program_end
    (2) program -> PROGRAM . ID SEMICOLON vars main pn_program_end
    (3) program -> PROGRAM . ID SEMICOLON aux_funcion main pn_program_end
    (4) program -> PROGRAM . ID SEMICOLON main pn_program_end

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON vars aux_funcion main pn_program_end
    (2) program -> PROGRAM ID . SEMICOLON vars main pn_program_end
    (3) program -> PROGRAM ID . SEMICOLON aux_funcion main pn_program_end
    (4) program -> PROGRAM ID . SEMICOLON main pn_program_end

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . vars aux_funcion main pn_program_end
    (2) program -> PROGRAM ID SEMICOLON . vars main pn_program_end
    (3) program -> PROGRAM ID SEMICOLON . aux_funcion main pn_program_end
    (4) program -> PROGRAM ID SEMICOLON . main pn_program_end
    (13) vars -> . VAR var
    (7) aux_funcion -> . funcion
    (8) aux_funcion -> . funcion aux_funcion
    (5) main -> . MAIN pn_current_function LPAREN RPAREN vars bloque
    (6) main -> . MAIN pn_current_function LPAREN RPAREN bloque
    (9) funcion -> . tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN vars bloque
    (10) funcion -> . tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN bloque
    (11) funcion -> . tipo_retorno MODULE ID pn_current_function LPAREN RPAREN vars bloque
    (12) funcion -> . tipo_retorno MODULE ID pn_current_function LPAREN RPAREN bloque
    (16) tipo_retorno -> . tipo
    (17) tipo_retorno -> . VOID pn_current_type
    (18) tipo -> . INT pn_current_type
    (19) tipo -> . FLOAT pn_current_type
    (20) tipo -> . CHAR pn_current_type

    VAR             shift and go to state 8
    MAIN            shift and go to state 10
    VOID            shift and go to state 13
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    vars                           shift and go to state 5
    aux_funcion                    shift and go to state 6
    main                           shift and go to state 7
    funcion                        shift and go to state 9
    tipo_retorno                   shift and go to state 11
    tipo                           shift and go to state 12

state 5

    (1) program -> PROGRAM ID SEMICOLON vars . aux_funcion main pn_program_end
    (2) program -> PROGRAM ID SEMICOLON vars . main pn_program_end
    (7) aux_funcion -> . funcion
    (8) aux_funcion -> . funcion aux_funcion
    (5) main -> . MAIN pn_current_function LPAREN RPAREN vars bloque
    (6) main -> . MAIN pn_current_function LPAREN RPAREN bloque
    (9) funcion -> . tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN vars bloque
    (10) funcion -> . tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN bloque
    (11) funcion -> . tipo_retorno MODULE ID pn_current_function LPAREN RPAREN vars bloque
    (12) funcion -> . tipo_retorno MODULE ID pn_current_function LPAREN RPAREN bloque
    (16) tipo_retorno -> . tipo
    (17) tipo_retorno -> . VOID pn_current_type
    (18) tipo -> . INT pn_current_type
    (19) tipo -> . FLOAT pn_current_type
    (20) tipo -> . CHAR pn_current_type

    MAIN            shift and go to state 10
    VOID            shift and go to state 13
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    aux_funcion                    shift and go to state 17
    main                           shift and go to state 18
    funcion                        shift and go to state 9
    tipo_retorno                   shift and go to state 11
    tipo                           shift and go to state 12

state 6

    (3) program -> PROGRAM ID SEMICOLON aux_funcion . main pn_program_end
    (5) main -> . MAIN pn_current_function LPAREN RPAREN vars bloque
    (6) main -> . MAIN pn_current_function LPAREN RPAREN bloque

    MAIN            shift and go to state 10

    main                           shift and go to state 19

state 7

    (4) program -> PROGRAM ID SEMICOLON main . pn_program_end
    (99) pn_program_end -> .

    $end            reduce using rule 99 (pn_program_end -> .)

    pn_program_end                 shift and go to state 20

state 8

    (13) vars -> VAR . var
    (14) var -> . tipo COLON lista_ids SEMICOLON
    (15) var -> . tipo COLON lista_ids SEMICOLON var
    (18) tipo -> . INT pn_current_type
    (19) tipo -> . FLOAT pn_current_type
    (20) tipo -> . CHAR pn_current_type

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    var                            shift and go to state 21
    tipo                           shift and go to state 22

state 9

    (7) aux_funcion -> funcion .
    (8) aux_funcion -> funcion . aux_funcion
    (7) aux_funcion -> . funcion
    (8) aux_funcion -> . funcion aux_funcion
    (9) funcion -> . tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN vars bloque
    (10) funcion -> . tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN bloque
    (11) funcion -> . tipo_retorno MODULE ID pn_current_function LPAREN RPAREN vars bloque
    (12) funcion -> . tipo_retorno MODULE ID pn_current_function LPAREN RPAREN bloque
    (16) tipo_retorno -> . tipo
    (17) tipo_retorno -> . VOID pn_current_type
    (18) tipo -> . INT pn_current_type
    (19) tipo -> . FLOAT pn_current_type
    (20) tipo -> . CHAR pn_current_type

    MAIN            reduce using rule 7 (aux_funcion -> funcion .)
    VOID            shift and go to state 13
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    funcion                        shift and go to state 9
    aux_funcion                    shift and go to state 23
    tipo_retorno                   shift and go to state 11
    tipo                           shift and go to state 12

state 10

    (5) main -> MAIN . pn_current_function LPAREN RPAREN vars bloque
    (6) main -> MAIN . pn_current_function LPAREN RPAREN bloque
    (97) pn_current_function -> .

    LPAREN          reduce using rule 97 (pn_current_function -> .)

    pn_current_function            shift and go to state 24

state 11

    (9) funcion -> tipo_retorno . MODULE ID pn_current_function LPAREN parametros RPAREN vars bloque
    (10) funcion -> tipo_retorno . MODULE ID pn_current_function LPAREN parametros RPAREN bloque
    (11) funcion -> tipo_retorno . MODULE ID pn_current_function LPAREN RPAREN vars bloque
    (12) funcion -> tipo_retorno . MODULE ID pn_current_function LPAREN RPAREN bloque

    MODULE          shift and go to state 25


state 12

    (16) tipo_retorno -> tipo .

    MODULE          reduce using rule 16 (tipo_retorno -> tipo .)


state 13

    (17) tipo_retorno -> VOID . pn_current_type
    (98) pn_current_type -> .

    MODULE          reduce using rule 98 (pn_current_type -> .)

    pn_current_type                shift and go to state 26

state 14

    (18) tipo -> INT . pn_current_type
    (98) pn_current_type -> .

    MODULE          reduce using rule 98 (pn_current_type -> .)
    COLON           reduce using rule 98 (pn_current_type -> .)
    ID              reduce using rule 98 (pn_current_type -> .)

    pn_current_type                shift and go to state 27

state 15

    (19) tipo -> FLOAT . pn_current_type
    (98) pn_current_type -> .

    MODULE          reduce using rule 98 (pn_current_type -> .)
    COLON           reduce using rule 98 (pn_current_type -> .)
    ID              reduce using rule 98 (pn_current_type -> .)

    pn_current_type                shift and go to state 28

state 16

    (20) tipo -> CHAR . pn_current_type
    (98) pn_current_type -> .

    MODULE          reduce using rule 98 (pn_current_type -> .)
    COLON           reduce using rule 98 (pn_current_type -> .)
    ID              reduce using rule 98 (pn_current_type -> .)

    pn_current_type                shift and go to state 29

state 17

    (1) program -> PROGRAM ID SEMICOLON vars aux_funcion . main pn_program_end
    (5) main -> . MAIN pn_current_function LPAREN RPAREN vars bloque
    (6) main -> . MAIN pn_current_function LPAREN RPAREN bloque

    MAIN            shift and go to state 10

    main                           shift and go to state 30

state 18

    (2) program -> PROGRAM ID SEMICOLON vars main . pn_program_end
    (99) pn_program_end -> .

    $end            reduce using rule 99 (pn_program_end -> .)

    pn_program_end                 shift and go to state 31

state 19

    (3) program -> PROGRAM ID SEMICOLON aux_funcion main . pn_program_end
    (99) pn_program_end -> .

    $end            reduce using rule 99 (pn_program_end -> .)

    pn_program_end                 shift and go to state 32

state 20

    (4) program -> PROGRAM ID SEMICOLON main pn_program_end .

    $end            reduce using rule 4 (program -> PROGRAM ID SEMICOLON main pn_program_end .)


state 21

    (13) vars -> VAR var .

    MAIN            reduce using rule 13 (vars -> VAR var .)
    VOID            reduce using rule 13 (vars -> VAR var .)
    INT             reduce using rule 13 (vars -> VAR var .)
    FLOAT           reduce using rule 13 (vars -> VAR var .)
    CHAR            reduce using rule 13 (vars -> VAR var .)
    LBRACKET        reduce using rule 13 (vars -> VAR var .)


state 22

    (14) var -> tipo . COLON lista_ids SEMICOLON
    (15) var -> tipo . COLON lista_ids SEMICOLON var

    COLON           shift and go to state 33


state 23

    (8) aux_funcion -> funcion aux_funcion .

    MAIN            reduce using rule 8 (aux_funcion -> funcion aux_funcion .)


state 24

    (5) main -> MAIN pn_current_function . LPAREN RPAREN vars bloque
    (6) main -> MAIN pn_current_function . LPAREN RPAREN bloque

    LPAREN          shift and go to state 34


state 25

    (9) funcion -> tipo_retorno MODULE . ID pn_current_function LPAREN parametros RPAREN vars bloque
    (10) funcion -> tipo_retorno MODULE . ID pn_current_function LPAREN parametros RPAREN bloque
    (11) funcion -> tipo_retorno MODULE . ID pn_current_function LPAREN RPAREN vars bloque
    (12) funcion -> tipo_retorno MODULE . ID pn_current_function LPAREN RPAREN bloque

    ID              shift and go to state 35


state 26

    (17) tipo_retorno -> VOID pn_current_type .

    MODULE          reduce using rule 17 (tipo_retorno -> VOID pn_current_type .)


state 27

    (18) tipo -> INT pn_current_type .

    MODULE          reduce using rule 18 (tipo -> INT pn_current_type .)
    COLON           reduce using rule 18 (tipo -> INT pn_current_type .)
    ID              reduce using rule 18 (tipo -> INT pn_current_type .)


state 28

    (19) tipo -> FLOAT pn_current_type .

    MODULE          reduce using rule 19 (tipo -> FLOAT pn_current_type .)
    COLON           reduce using rule 19 (tipo -> FLOAT pn_current_type .)
    ID              reduce using rule 19 (tipo -> FLOAT pn_current_type .)


state 29

    (20) tipo -> CHAR pn_current_type .

    MODULE          reduce using rule 20 (tipo -> CHAR pn_current_type .)
    COLON           reduce using rule 20 (tipo -> CHAR pn_current_type .)
    ID              reduce using rule 20 (tipo -> CHAR pn_current_type .)


state 30

    (1) program -> PROGRAM ID SEMICOLON vars aux_funcion main . pn_program_end
    (99) pn_program_end -> .

    $end            reduce using rule 99 (pn_program_end -> .)

    pn_program_end                 shift and go to state 36

state 31

    (2) program -> PROGRAM ID SEMICOLON vars main pn_program_end .

    $end            reduce using rule 2 (program -> PROGRAM ID SEMICOLON vars main pn_program_end .)


state 32

    (3) program -> PROGRAM ID SEMICOLON aux_funcion main pn_program_end .

    $end            reduce using rule 3 (program -> PROGRAM ID SEMICOLON aux_funcion main pn_program_end .)


state 33

    (14) var -> tipo COLON . lista_ids SEMICOLON
    (15) var -> tipo COLON . lista_ids SEMICOLON var
    (23) lista_ids -> . aux_lista_rec
    (24) aux_lista_rec -> . aux_lista
    (25) aux_lista_rec -> . aux_lista COMMA aux_lista_rec
    (26) aux_lista -> . ID pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE
    (27) aux_lista -> . ID pn_add_symbol LSQUARE CTE_INT RSQUARE
    (28) aux_lista -> . ID pn_add_symbol

    ID              shift and go to state 40

    lista_ids                      shift and go to state 37
    aux_lista_rec                  shift and go to state 38
    aux_lista                      shift and go to state 39

state 34

    (5) main -> MAIN pn_current_function LPAREN . RPAREN vars bloque
    (6) main -> MAIN pn_current_function LPAREN . RPAREN bloque

    RPAREN          shift and go to state 41


state 35

    (9) funcion -> tipo_retorno MODULE ID . pn_current_function LPAREN parametros RPAREN vars bloque
    (10) funcion -> tipo_retorno MODULE ID . pn_current_function LPAREN parametros RPAREN bloque
    (11) funcion -> tipo_retorno MODULE ID . pn_current_function LPAREN RPAREN vars bloque
    (12) funcion -> tipo_retorno MODULE ID . pn_current_function LPAREN RPAREN bloque
    (97) pn_current_function -> .

    LPAREN          reduce using rule 97 (pn_current_function -> .)

    pn_current_function            shift and go to state 42

state 36

    (1) program -> PROGRAM ID SEMICOLON vars aux_funcion main pn_program_end .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON vars aux_funcion main pn_program_end .)


state 37

    (14) var -> tipo COLON lista_ids . SEMICOLON
    (15) var -> tipo COLON lista_ids . SEMICOLON var

    SEMICOLON       shift and go to state 43


state 38

    (23) lista_ids -> aux_lista_rec .

    SEMICOLON       reduce using rule 23 (lista_ids -> aux_lista_rec .)


state 39

    (24) aux_lista_rec -> aux_lista .
    (25) aux_lista_rec -> aux_lista . COMMA aux_lista_rec

    SEMICOLON       reduce using rule 24 (aux_lista_rec -> aux_lista .)
    COMMA           shift and go to state 44


state 40

    (26) aux_lista -> ID . pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE
    (27) aux_lista -> ID . pn_add_symbol LSQUARE CTE_INT RSQUARE
    (28) aux_lista -> ID . pn_add_symbol
    (100) pn_add_symbol -> .

    LSQUARE         reduce using rule 100 (pn_add_symbol -> .)
    COMMA           reduce using rule 100 (pn_add_symbol -> .)
    SEMICOLON       reduce using rule 100 (pn_add_symbol -> .)

    pn_add_symbol                  shift and go to state 45

state 41

    (5) main -> MAIN pn_current_function LPAREN RPAREN . vars bloque
    (6) main -> MAIN pn_current_function LPAREN RPAREN . bloque
    (13) vars -> . VAR var
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    VAR             shift and go to state 8
    LBRACKET        shift and go to state 48

    vars                           shift and go to state 46
    bloque                         shift and go to state 47

state 42

    (9) funcion -> tipo_retorno MODULE ID pn_current_function . LPAREN parametros RPAREN vars bloque
    (10) funcion -> tipo_retorno MODULE ID pn_current_function . LPAREN parametros RPAREN bloque
    (11) funcion -> tipo_retorno MODULE ID pn_current_function . LPAREN RPAREN vars bloque
    (12) funcion -> tipo_retorno MODULE ID pn_current_function . LPAREN RPAREN bloque

    LPAREN          shift and go to state 49


state 43

    (14) var -> tipo COLON lista_ids SEMICOLON .
    (15) var -> tipo COLON lista_ids SEMICOLON . var
    (14) var -> . tipo COLON lista_ids SEMICOLON
    (15) var -> . tipo COLON lista_ids SEMICOLON var
    (18) tipo -> . INT pn_current_type
    (19) tipo -> . FLOAT pn_current_type
    (20) tipo -> . CHAR pn_current_type

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    MAIN            reduce using rule 14 (var -> tipo COLON lista_ids SEMICOLON .)
    VOID            reduce using rule 14 (var -> tipo COLON lista_ids SEMICOLON .)
    LBRACKET        reduce using rule 14 (var -> tipo COLON lista_ids SEMICOLON .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

  ! INT             [ reduce using rule 14 (var -> tipo COLON lista_ids SEMICOLON .) ]
  ! FLOAT           [ reduce using rule 14 (var -> tipo COLON lista_ids SEMICOLON .) ]
  ! CHAR            [ reduce using rule 14 (var -> tipo COLON lista_ids SEMICOLON .) ]

    tipo                           shift and go to state 22
    var                            shift and go to state 50

state 44

    (25) aux_lista_rec -> aux_lista COMMA . aux_lista_rec
    (24) aux_lista_rec -> . aux_lista
    (25) aux_lista_rec -> . aux_lista COMMA aux_lista_rec
    (26) aux_lista -> . ID pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE
    (27) aux_lista -> . ID pn_add_symbol LSQUARE CTE_INT RSQUARE
    (28) aux_lista -> . ID pn_add_symbol

    ID              shift and go to state 40

    aux_lista                      shift and go to state 39
    aux_lista_rec                  shift and go to state 51

state 45

    (26) aux_lista -> ID pn_add_symbol . LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE
    (27) aux_lista -> ID pn_add_symbol . LSQUARE CTE_INT RSQUARE
    (28) aux_lista -> ID pn_add_symbol .

    LSQUARE         shift and go to state 52
    COMMA           reduce using rule 28 (aux_lista -> ID pn_add_symbol .)
    SEMICOLON       reduce using rule 28 (aux_lista -> ID pn_add_symbol .)


state 46

    (5) main -> MAIN pn_current_function LPAREN RPAREN vars . bloque
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 48

    bloque                         shift and go to state 53

state 47

    (6) main -> MAIN pn_current_function LPAREN RPAREN bloque .

    $end            reduce using rule 6 (main -> MAIN pn_current_function LPAREN RPAREN bloque .)


state 48

    (35) bloque -> LBRACKET . estatutos RBRACKET
    (36) bloque -> LBRACKET . RBRACKET
    (37) estatutos -> . estatuto estatutos
    (38) estatutos -> . estatuto
    (39) estatuto -> . asignacion
    (40) estatuto -> . condicional
    (41) estatuto -> . escritura
    (42) estatuto -> . retorno
    (43) estatuto -> . lectura
    (44) estatuto -> . decision
    (45) estatuto -> . no_condicional
    (46) asignacion -> . ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON
    (47) asignacion -> . ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON
    (34) condicional -> . WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN DO bloque pn_while_3
    (29) escritura -> . WRITE LPAREN aux_escritura RPAREN SEMICOLON
    (48) retorno -> . RETURN LPAREN expresion RPAREN
    (49) lectura -> . READ LPAREN aux_lectura RPAREN SEMICOLON
    (58) decision -> . IF LPAREN expresion pn_if_1 RPAREN THEN bloque pn_if_2
    (59) decision -> . IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2
    (63) no_condicional -> . FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (64) no_condicional -> . FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back

    RBRACKET        shift and go to state 55
    ID              shift and go to state 64
    WHILE           shift and go to state 65
    WRITE           shift and go to state 66
    RETURN          shift and go to state 67
    READ            shift and go to state 68
    IF              shift and go to state 69
    FOR             shift and go to state 70

    estatutos                      shift and go to state 54
    estatuto                       shift and go to state 56
    asignacion                     shift and go to state 57
    condicional                    shift and go to state 58
    escritura                      shift and go to state 59
    retorno                        shift and go to state 60
    lectura                        shift and go to state 61
    decision                       shift and go to state 62
    no_condicional                 shift and go to state 63

state 49

    (9) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN . parametros RPAREN vars bloque
    (10) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN . parametros RPAREN bloque
    (11) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN . RPAREN vars bloque
    (12) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN . RPAREN bloque
    (21) parametros -> . tipo ID
    (22) parametros -> . tipo ID COMMA parametros
    (18) tipo -> . INT pn_current_type
    (19) tipo -> . FLOAT pn_current_type
    (20) tipo -> . CHAR pn_current_type

    RPAREN          shift and go to state 72
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    parametros                     shift and go to state 71
    tipo                           shift and go to state 73

state 50

    (15) var -> tipo COLON lista_ids SEMICOLON var .

    MAIN            reduce using rule 15 (var -> tipo COLON lista_ids SEMICOLON var .)
    VOID            reduce using rule 15 (var -> tipo COLON lista_ids SEMICOLON var .)
    INT             reduce using rule 15 (var -> tipo COLON lista_ids SEMICOLON var .)
    FLOAT           reduce using rule 15 (var -> tipo COLON lista_ids SEMICOLON var .)
    CHAR            reduce using rule 15 (var -> tipo COLON lista_ids SEMICOLON var .)
    LBRACKET        reduce using rule 15 (var -> tipo COLON lista_ids SEMICOLON var .)


state 51

    (25) aux_lista_rec -> aux_lista COMMA aux_lista_rec .

    SEMICOLON       reduce using rule 25 (aux_lista_rec -> aux_lista COMMA aux_lista_rec .)


state 52

    (26) aux_lista -> ID pn_add_symbol LSQUARE . CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE
    (27) aux_lista -> ID pn_add_symbol LSQUARE . CTE_INT RSQUARE

    CTE_INT         shift and go to state 74


state 53

    (5) main -> MAIN pn_current_function LPAREN RPAREN vars bloque .

    $end            reduce using rule 5 (main -> MAIN pn_current_function LPAREN RPAREN vars bloque .)


state 54

    (35) bloque -> LBRACKET estatutos . RBRACKET

    RBRACKET        shift and go to state 75


state 55

    (36) bloque -> LBRACKET RBRACKET .

    $end            reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    VOID            reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    INT             reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    FLOAT           reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    CHAR            reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    MAIN            reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    ELSE            reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    ID              reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    WHILE           reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    WRITE           reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    RETURN          reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    READ            reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    IF              reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    FOR             reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 36 (bloque -> LBRACKET RBRACKET .)


state 56

    (37) estatutos -> estatuto . estatutos
    (38) estatutos -> estatuto .
    (37) estatutos -> . estatuto estatutos
    (38) estatutos -> . estatuto
    (39) estatuto -> . asignacion
    (40) estatuto -> . condicional
    (41) estatuto -> . escritura
    (42) estatuto -> . retorno
    (43) estatuto -> . lectura
    (44) estatuto -> . decision
    (45) estatuto -> . no_condicional
    (46) asignacion -> . ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON
    (47) asignacion -> . ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON
    (34) condicional -> . WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN DO bloque pn_while_3
    (29) escritura -> . WRITE LPAREN aux_escritura RPAREN SEMICOLON
    (48) retorno -> . RETURN LPAREN expresion RPAREN
    (49) lectura -> . READ LPAREN aux_lectura RPAREN SEMICOLON
    (58) decision -> . IF LPAREN expresion pn_if_1 RPAREN THEN bloque pn_if_2
    (59) decision -> . IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2
    (63) no_condicional -> . FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (64) no_condicional -> . FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back

    RBRACKET        reduce using rule 38 (estatutos -> estatuto .)
    ID              shift and go to state 64
    WHILE           shift and go to state 65
    WRITE           shift and go to state 66
    RETURN          shift and go to state 67
    READ            shift and go to state 68
    IF              shift and go to state 69
    FOR             shift and go to state 70

    estatuto                       shift and go to state 56
    estatutos                      shift and go to state 76
    asignacion                     shift and go to state 57
    condicional                    shift and go to state 58
    escritura                      shift and go to state 59
    retorno                        shift and go to state 60
    lectura                        shift and go to state 61
    decision                       shift and go to state 62
    no_condicional                 shift and go to state 63

state 57

    (39) estatuto -> asignacion .

    ID              reduce using rule 39 (estatuto -> asignacion .)
    WHILE           reduce using rule 39 (estatuto -> asignacion .)
    WRITE           reduce using rule 39 (estatuto -> asignacion .)
    RETURN          reduce using rule 39 (estatuto -> asignacion .)
    READ            reduce using rule 39 (estatuto -> asignacion .)
    IF              reduce using rule 39 (estatuto -> asignacion .)
    FOR             reduce using rule 39 (estatuto -> asignacion .)
    RBRACKET        reduce using rule 39 (estatuto -> asignacion .)


state 58

    (40) estatuto -> condicional .

    ID              reduce using rule 40 (estatuto -> condicional .)
    WHILE           reduce using rule 40 (estatuto -> condicional .)
    WRITE           reduce using rule 40 (estatuto -> condicional .)
    RETURN          reduce using rule 40 (estatuto -> condicional .)
    READ            reduce using rule 40 (estatuto -> condicional .)
    IF              reduce using rule 40 (estatuto -> condicional .)
    FOR             reduce using rule 40 (estatuto -> condicional .)
    RBRACKET        reduce using rule 40 (estatuto -> condicional .)


state 59

    (41) estatuto -> escritura .

    ID              reduce using rule 41 (estatuto -> escritura .)
    WHILE           reduce using rule 41 (estatuto -> escritura .)
    WRITE           reduce using rule 41 (estatuto -> escritura .)
    RETURN          reduce using rule 41 (estatuto -> escritura .)
    READ            reduce using rule 41 (estatuto -> escritura .)
    IF              reduce using rule 41 (estatuto -> escritura .)
    FOR             reduce using rule 41 (estatuto -> escritura .)
    RBRACKET        reduce using rule 41 (estatuto -> escritura .)


state 60

    (42) estatuto -> retorno .

    ID              reduce using rule 42 (estatuto -> retorno .)
    WHILE           reduce using rule 42 (estatuto -> retorno .)
    WRITE           reduce using rule 42 (estatuto -> retorno .)
    RETURN          reduce using rule 42 (estatuto -> retorno .)
    READ            reduce using rule 42 (estatuto -> retorno .)
    IF              reduce using rule 42 (estatuto -> retorno .)
    FOR             reduce using rule 42 (estatuto -> retorno .)
    RBRACKET        reduce using rule 42 (estatuto -> retorno .)


state 61

    (43) estatuto -> lectura .

    ID              reduce using rule 43 (estatuto -> lectura .)
    WHILE           reduce using rule 43 (estatuto -> lectura .)
    WRITE           reduce using rule 43 (estatuto -> lectura .)
    RETURN          reduce using rule 43 (estatuto -> lectura .)
    READ            reduce using rule 43 (estatuto -> lectura .)
    IF              reduce using rule 43 (estatuto -> lectura .)
    FOR             reduce using rule 43 (estatuto -> lectura .)
    RBRACKET        reduce using rule 43 (estatuto -> lectura .)


state 62

    (44) estatuto -> decision .

    ID              reduce using rule 44 (estatuto -> decision .)
    WHILE           reduce using rule 44 (estatuto -> decision .)
    WRITE           reduce using rule 44 (estatuto -> decision .)
    RETURN          reduce using rule 44 (estatuto -> decision .)
    READ            reduce using rule 44 (estatuto -> decision .)
    IF              reduce using rule 44 (estatuto -> decision .)
    FOR             reduce using rule 44 (estatuto -> decision .)
    RBRACKET        reduce using rule 44 (estatuto -> decision .)


state 63

    (45) estatuto -> no_condicional .

    ID              reduce using rule 45 (estatuto -> no_condicional .)
    WHILE           reduce using rule 45 (estatuto -> no_condicional .)
    WRITE           reduce using rule 45 (estatuto -> no_condicional .)
    RETURN          reduce using rule 45 (estatuto -> no_condicional .)
    READ            reduce using rule 45 (estatuto -> no_condicional .)
    IF              reduce using rule 45 (estatuto -> no_condicional .)
    FOR             reduce using rule 45 (estatuto -> no_condicional .)
    RBRACKET        reduce using rule 45 (estatuto -> no_condicional .)


state 64

    (46) asignacion -> ID . pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON
    (47) asignacion -> ID . pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON
    (102) pn_push_operand_and_type -> .

    ASSIGN          reduce using rule 102 (pn_push_operand_and_type -> .)
    LSQUARE         reduce using rule 102 (pn_push_operand_and_type -> .)

    pn_push_operand_and_type       shift and go to state 77

state 65

    (34) condicional -> WHILE . pn_while_1 LPAREN expresion pn_while_2 RPAREN DO bloque pn_while_3
    (115) pn_while_1 -> .

    LPAREN          reduce using rule 115 (pn_while_1 -> .)

    pn_while_1                     shift and go to state 78

state 66

    (29) escritura -> WRITE . LPAREN aux_escritura RPAREN SEMICOLON

    LPAREN          shift and go to state 79


state 67

    (48) retorno -> RETURN . LPAREN expresion RPAREN

    LPAREN          shift and go to state 80


state 68

    (49) lectura -> READ . LPAREN aux_lectura RPAREN SEMICOLON

    LPAREN          shift and go to state 81


state 69

    (58) decision -> IF . LPAREN expresion pn_if_1 RPAREN THEN bloque pn_if_2
    (59) decision -> IF . LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2

    LPAREN          shift and go to state 82


state 70

    (63) no_condicional -> FOR . ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (64) no_condicional -> FOR . ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back

    ID              shift and go to state 83


state 71

    (9) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros . RPAREN vars bloque
    (10) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros . RPAREN bloque

    RPAREN          shift and go to state 84


state 72

    (11) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN . vars bloque
    (12) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN . bloque
    (13) vars -> . VAR var
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    VAR             shift and go to state 8
    LBRACKET        shift and go to state 48

    vars                           shift and go to state 85
    bloque                         shift and go to state 86

state 73

    (21) parametros -> tipo . ID
    (22) parametros -> tipo . ID COMMA parametros

    ID              shift and go to state 87


state 74

    (26) aux_lista -> ID pn_add_symbol LSQUARE CTE_INT . RSQUARE LSQUARE CTE_INT RSQUARE
    (27) aux_lista -> ID pn_add_symbol LSQUARE CTE_INT . RSQUARE

    RSQUARE         shift and go to state 88


state 75

    (35) bloque -> LBRACKET estatutos RBRACKET .

    $end            reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    VOID            reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    INT             reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    FLOAT           reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    CHAR            reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    MAIN            reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    ELSE            reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    ID              reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    WHILE           reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    WRITE           reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    RETURN          reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    READ            reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    IF              reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    FOR             reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    RBRACKET        reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)


state 76

    (37) estatutos -> estatuto estatutos .

    RBRACKET        reduce using rule 37 (estatutos -> estatuto estatutos .)


state 77

    (46) asignacion -> ID pn_push_operand_and_type . dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON
    (47) asignacion -> ID pn_push_operand_and_type . ASSIGN pn_push_operator expresion pn_assign SEMICOLON
    (65) dimensiones -> . LSQUARE expresion RSQUARE LSQUARE expresion RSQUARE
    (66) dimensiones -> . LSQUARE expresion COMMA expresion RSQUARE
    (67) dimensiones -> . LSQUARE expresion RSQUARE

    ASSIGN          shift and go to state 90
    LSQUARE         shift and go to state 91

    dimensiones                    shift and go to state 89

state 78

    (34) condicional -> WHILE pn_while_1 . LPAREN expresion pn_while_2 RPAREN DO bloque pn_while_3

    LPAREN          shift and go to state 92


state 79

    (29) escritura -> WRITE LPAREN . aux_escritura RPAREN SEMICOLON
    (30) aux_escritura -> . pn_push_write_operator letrero pn_write
    (31) aux_escritura -> . pn_push_write_operator expresion pn_write
    (32) aux_escritura -> . pn_push_write_operator letrero pn_write COMMA aux_escritura
    (33) aux_escritura -> . pn_push_write_operator expresion pn_write COMMA aux_escritura
    (109) pn_push_write_operator -> .

    QUOTATION       reduce using rule 109 (pn_push_write_operator -> .)
    LPAREN          reduce using rule 109 (pn_push_write_operator -> .)
    PLUS            reduce using rule 109 (pn_push_write_operator -> .)
    MINUS           reduce using rule 109 (pn_push_write_operator -> .)
    ID              reduce using rule 109 (pn_push_write_operator -> .)
    CTE_INT         reduce using rule 109 (pn_push_write_operator -> .)
    CTE_FLOAT       reduce using rule 109 (pn_push_write_operator -> .)

    aux_escritura                  shift and go to state 93
    pn_push_write_operator         shift and go to state 94

state 80

    (48) retorno -> RETURN LPAREN . expresion RPAREN
    (68) expresion -> . comparacion aux_expresion
    (69) expresion -> . aux_comparacion
    (74) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (75) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (77) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp
    (81) exp -> . termino pn_addition_substraction
    (82) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (83) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (84) termino -> . factor pn_multiplication_division
    (85) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (86) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (87) factor -> . LPAREN expresion RPAREN
    (88) factor -> . PLUS var_cte
    (89) factor -> . PLUS llamada
    (90) factor -> . MINUS var_cte
    (91) factor -> . MINUS llamada
    (92) factor -> . var_cte
    (93) factor -> . llamada
    (94) var_cte -> . ID pn_push_operand_and_type
    (95) var_cte -> . CTE_INT pn_push_constant_and_type
    (96) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (60) llamada -> . ID LPAREN aux_llamada RPAREN SEMICOLON

    LPAREN          shift and go to state 95
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    ID              shift and go to state 106
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    expresion                      shift and go to state 96
    comparacion                    shift and go to state 97
    aux_comparacion                shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 103
    var_cte                        shift and go to state 104
    llamada                        shift and go to state 105

state 81

    (49) lectura -> READ LPAREN . aux_lectura RPAREN SEMICOLON
    (50) aux_lectura -> . pn_push_read_operator ID pn_push_operand_and_type pn_read
    (51) aux_lectura -> . pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones
    (52) aux_lectura -> . pn_push_read_operator ID pn_push_operand_and_type pn_read COMMA aux_lectura
    (53) aux_lectura -> . pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones COMMA aux_lectura
    (107) pn_push_read_operator -> .

    ID              reduce using rule 107 (pn_push_read_operator -> .)

    aux_lectura                    shift and go to state 109
    pn_push_read_operator          shift and go to state 110

state 82

    (58) decision -> IF LPAREN . expresion pn_if_1 RPAREN THEN bloque pn_if_2
    (59) decision -> IF LPAREN . expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2
    (68) expresion -> . comparacion aux_expresion
    (69) expresion -> . aux_comparacion
    (74) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (75) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (77) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp
    (81) exp -> . termino pn_addition_substraction
    (82) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (83) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (84) termino -> . factor pn_multiplication_division
    (85) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (86) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (87) factor -> . LPAREN expresion RPAREN
    (88) factor -> . PLUS var_cte
    (89) factor -> . PLUS llamada
    (90) factor -> . MINUS var_cte
    (91) factor -> . MINUS llamada
    (92) factor -> . var_cte
    (93) factor -> . llamada
    (94) var_cte -> . ID pn_push_operand_and_type
    (95) var_cte -> . CTE_INT pn_push_constant_and_type
    (96) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (60) llamada -> . ID LPAREN aux_llamada RPAREN SEMICOLON

    LPAREN          shift and go to state 95
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    ID              shift and go to state 106
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    expresion                      shift and go to state 111
    comparacion                    shift and go to state 97
    aux_comparacion                shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 103
    var_cte                        shift and go to state 104
    llamada                        shift and go to state 105

state 83

    (63) no_condicional -> FOR ID . pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (64) no_condicional -> FOR ID . pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (102) pn_push_operand_and_type -> .

    ASSIGN          reduce using rule 102 (pn_push_operand_and_type -> .)
    LSQUARE         reduce using rule 102 (pn_push_operand_and_type -> .)

    pn_push_operand_and_type       shift and go to state 112

state 84

    (9) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN . vars bloque
    (10) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN . bloque
    (13) vars -> . VAR var
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    VAR             shift and go to state 8
    LBRACKET        shift and go to state 48

    vars                           shift and go to state 113
    bloque                         shift and go to state 114

state 85

    (11) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN vars . bloque
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 48

    bloque                         shift and go to state 115

state 86

    (12) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN bloque .

    VOID            reduce using rule 12 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN bloque .)
    INT             reduce using rule 12 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN bloque .)
    FLOAT           reduce using rule 12 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN bloque .)
    CHAR            reduce using rule 12 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN bloque .)
    MAIN            reduce using rule 12 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN bloque .)


state 87

    (21) parametros -> tipo ID .
    (22) parametros -> tipo ID . COMMA parametros

    RPAREN          reduce using rule 21 (parametros -> tipo ID .)
    COMMA           shift and go to state 116


state 88

    (26) aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE . LSQUARE CTE_INT RSQUARE
    (27) aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE .

    LSQUARE         shift and go to state 117
    COMMA           reduce using rule 27 (aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE .)
    SEMICOLON       reduce using rule 27 (aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE .)


state 89

    (46) asignacion -> ID pn_push_operand_and_type dimensiones . ASSIGN pn_push_operator expresion pn_assign SEMICOLON

    ASSIGN          shift and go to state 118


state 90

    (47) asignacion -> ID pn_push_operand_and_type ASSIGN . pn_push_operator expresion pn_assign SEMICOLON
    (103) pn_push_operator -> .

    LPAREN          reduce using rule 103 (pn_push_operator -> .)
    PLUS            reduce using rule 103 (pn_push_operator -> .)
    MINUS           reduce using rule 103 (pn_push_operator -> .)
    ID              reduce using rule 103 (pn_push_operator -> .)
    CTE_INT         reduce using rule 103 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 103 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 119

state 91

    (65) dimensiones -> LSQUARE . expresion RSQUARE LSQUARE expresion RSQUARE
    (66) dimensiones -> LSQUARE . expresion COMMA expresion RSQUARE
    (67) dimensiones -> LSQUARE . expresion RSQUARE
    (68) expresion -> . comparacion aux_expresion
    (69) expresion -> . aux_comparacion
    (74) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (75) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (77) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp
    (81) exp -> . termino pn_addition_substraction
    (82) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (83) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (84) termino -> . factor pn_multiplication_division
    (85) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (86) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (87) factor -> . LPAREN expresion RPAREN
    (88) factor -> . PLUS var_cte
    (89) factor -> . PLUS llamada
    (90) factor -> . MINUS var_cte
    (91) factor -> . MINUS llamada
    (92) factor -> . var_cte
    (93) factor -> . llamada
    (94) var_cte -> . ID pn_push_operand_and_type
    (95) var_cte -> . CTE_INT pn_push_constant_and_type
    (96) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (60) llamada -> . ID LPAREN aux_llamada RPAREN SEMICOLON

    LPAREN          shift and go to state 95
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    ID              shift and go to state 106
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    expresion                      shift and go to state 120
    comparacion                    shift and go to state 97
    aux_comparacion                shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 103
    var_cte                        shift and go to state 104
    llamada                        shift and go to state 105

state 92

    (34) condicional -> WHILE pn_while_1 LPAREN . expresion pn_while_2 RPAREN DO bloque pn_while_3
    (68) expresion -> . comparacion aux_expresion
    (69) expresion -> . aux_comparacion
    (74) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (75) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (77) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp
    (81) exp -> . termino pn_addition_substraction
    (82) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (83) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (84) termino -> . factor pn_multiplication_division
    (85) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (86) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (87) factor -> . LPAREN expresion RPAREN
    (88) factor -> . PLUS var_cte
    (89) factor -> . PLUS llamada
    (90) factor -> . MINUS var_cte
    (91) factor -> . MINUS llamada
    (92) factor -> . var_cte
    (93) factor -> . llamada
    (94) var_cte -> . ID pn_push_operand_and_type
    (95) var_cte -> . CTE_INT pn_push_constant_and_type
    (96) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (60) llamada -> . ID LPAREN aux_llamada RPAREN SEMICOLON

    LPAREN          shift and go to state 95
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    ID              shift and go to state 106
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    expresion                      shift and go to state 121
    comparacion                    shift and go to state 97
    aux_comparacion                shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 103
    var_cte                        shift and go to state 104
    llamada                        shift and go to state 105

state 93

    (29) escritura -> WRITE LPAREN aux_escritura . RPAREN SEMICOLON

    RPAREN          shift and go to state 122


state 94

    (30) aux_escritura -> pn_push_write_operator . letrero pn_write
    (31) aux_escritura -> pn_push_write_operator . expresion pn_write
    (32) aux_escritura -> pn_push_write_operator . letrero pn_write COMMA aux_escritura
    (33) aux_escritura -> pn_push_write_operator . expresion pn_write COMMA aux_escritura
    (54) letrero -> . QUOTATION aux_letrero QUOTATION
    (55) letrero -> . QUOTATION QUOTATION
    (68) expresion -> . comparacion aux_expresion
    (69) expresion -> . aux_comparacion
    (74) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (75) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (77) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp
    (81) exp -> . termino pn_addition_substraction
    (82) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (83) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (84) termino -> . factor pn_multiplication_division
    (85) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (86) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (87) factor -> . LPAREN expresion RPAREN
    (88) factor -> . PLUS var_cte
    (89) factor -> . PLUS llamada
    (90) factor -> . MINUS var_cte
    (91) factor -> . MINUS llamada
    (92) factor -> . var_cte
    (93) factor -> . llamada
    (94) var_cte -> . ID pn_push_operand_and_type
    (95) var_cte -> . CTE_INT pn_push_constant_and_type
    (96) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (60) llamada -> . ID LPAREN aux_llamada RPAREN SEMICOLON

    QUOTATION       shift and go to state 125
    LPAREN          shift and go to state 95
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    ID              shift and go to state 106
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    letrero                        shift and go to state 123
    expresion                      shift and go to state 124
    comparacion                    shift and go to state 97
    aux_comparacion                shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 103
    var_cte                        shift and go to state 104
    llamada                        shift and go to state 105

state 95

    (87) factor -> LPAREN . expresion RPAREN
    (68) expresion -> . comparacion aux_expresion
    (69) expresion -> . aux_comparacion
    (74) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (75) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (77) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp
    (81) exp -> . termino pn_addition_substraction
    (82) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (83) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (84) termino -> . factor pn_multiplication_division
    (85) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (86) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (87) factor -> . LPAREN expresion RPAREN
    (88) factor -> . PLUS var_cte
    (89) factor -> . PLUS llamada
    (90) factor -> . MINUS var_cte
    (91) factor -> . MINUS llamada
    (92) factor -> . var_cte
    (93) factor -> . llamada
    (94) var_cte -> . ID pn_push_operand_and_type
    (95) var_cte -> . CTE_INT pn_push_constant_and_type
    (96) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (60) llamada -> . ID LPAREN aux_llamada RPAREN SEMICOLON

    LPAREN          shift and go to state 95
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    ID              shift and go to state 106
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    expresion                      shift and go to state 126
    comparacion                    shift and go to state 97
    aux_comparacion                shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 103
    var_cte                        shift and go to state 104
    llamada                        shift and go to state 105

state 96

    (48) retorno -> RETURN LPAREN expresion . RPAREN

    RPAREN          shift and go to state 127


state 97

    (68) expresion -> comparacion . aux_expresion
    (70) aux_expresion -> . AND comparacion
    (71) aux_expresion -> . OR comparacion
    (72) aux_expresion -> . AND comparacion aux_expresion
    (73) aux_expresion -> . OR comparacion aux_expresion

    AND             shift and go to state 129
    OR              shift and go to state 130

    aux_expresion                  shift and go to state 128

state 98

    (69) expresion -> aux_comparacion .

    RPAREN          reduce using rule 69 (expresion -> aux_comparacion .)
    RSQUARE         reduce using rule 69 (expresion -> aux_comparacion .)
    COMMA           reduce using rule 69 (expresion -> aux_comparacion .)
    SEMICOLON       reduce using rule 69 (expresion -> aux_comparacion .)
    TO              reduce using rule 69 (expresion -> aux_comparacion .)
    DO              reduce using rule 69 (expresion -> aux_comparacion .)


state 99

    (74) comparacion -> exp . LESSTHAN pn_push_operator exp pn_comparison
    (75) comparacion -> exp . GREATERTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> exp . EQUAL pn_push_operator exp pn_comparison
    (77) aux_comparacion -> exp . LESSTHAN pn_push_operator exp pn_comparison
    (78) aux_comparacion -> exp . GREATERTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> exp . EQUAL pn_push_operator exp pn_comparison
    (80) aux_comparacion -> exp .

    LESSTHAN        shift and go to state 131
    GREATERTHAN     shift and go to state 132
    EQUAL           shift and go to state 133
    RPAREN          reduce using rule 80 (aux_comparacion -> exp .)
    RSQUARE         reduce using rule 80 (aux_comparacion -> exp .)
    COMMA           reduce using rule 80 (aux_comparacion -> exp .)
    SEMICOLON       reduce using rule 80 (aux_comparacion -> exp .)
    TO              reduce using rule 80 (aux_comparacion -> exp .)
    DO              reduce using rule 80 (aux_comparacion -> exp .)


state 100

    (81) exp -> termino . pn_addition_substraction
    (82) exp -> termino . pn_addition_substraction PLUS pn_push_operator exp
    (83) exp -> termino . pn_addition_substraction MINUS pn_push_operator exp
    (104) pn_addition_substraction -> .

    PLUS            reduce using rule 104 (pn_addition_substraction -> .)
    MINUS           reduce using rule 104 (pn_addition_substraction -> .)
    LESSTHAN        reduce using rule 104 (pn_addition_substraction -> .)
    GREATERTHAN     reduce using rule 104 (pn_addition_substraction -> .)
    EQUAL           reduce using rule 104 (pn_addition_substraction -> .)
    RPAREN          reduce using rule 104 (pn_addition_substraction -> .)
    RSQUARE         reduce using rule 104 (pn_addition_substraction -> .)
    COMMA           reduce using rule 104 (pn_addition_substraction -> .)
    SEMICOLON       reduce using rule 104 (pn_addition_substraction -> .)
    AND             reduce using rule 104 (pn_addition_substraction -> .)
    OR              reduce using rule 104 (pn_addition_substraction -> .)
    TO              reduce using rule 104 (pn_addition_substraction -> .)
    DO              reduce using rule 104 (pn_addition_substraction -> .)

    pn_addition_substraction       shift and go to state 134

state 101

    (88) factor -> PLUS . var_cte
    (89) factor -> PLUS . llamada
    (94) var_cte -> . ID pn_push_operand_and_type
    (95) var_cte -> . CTE_INT pn_push_constant_and_type
    (96) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (60) llamada -> . ID LPAREN aux_llamada RPAREN SEMICOLON

    ID              shift and go to state 106
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    var_cte                        shift and go to state 135
    llamada                        shift and go to state 136

state 102

    (90) factor -> MINUS . var_cte
    (91) factor -> MINUS . llamada
    (94) var_cte -> . ID pn_push_operand_and_type
    (95) var_cte -> . CTE_INT pn_push_constant_and_type
    (96) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (60) llamada -> . ID LPAREN aux_llamada RPAREN SEMICOLON

    ID              shift and go to state 106
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    var_cte                        shift and go to state 137
    llamada                        shift and go to state 138

state 103

    (84) termino -> factor . pn_multiplication_division
    (85) termino -> factor . pn_multiplication_division MULT pn_push_operator termino
    (86) termino -> factor . pn_multiplication_division DIV pn_push_operator termino
    (105) pn_multiplication_division -> .

    MULT            reduce using rule 105 (pn_multiplication_division -> .)
    DIV             reduce using rule 105 (pn_multiplication_division -> .)
    PLUS            reduce using rule 105 (pn_multiplication_division -> .)
    MINUS           reduce using rule 105 (pn_multiplication_division -> .)
    LESSTHAN        reduce using rule 105 (pn_multiplication_division -> .)
    GREATERTHAN     reduce using rule 105 (pn_multiplication_division -> .)
    EQUAL           reduce using rule 105 (pn_multiplication_division -> .)
    RPAREN          reduce using rule 105 (pn_multiplication_division -> .)
    RSQUARE         reduce using rule 105 (pn_multiplication_division -> .)
    COMMA           reduce using rule 105 (pn_multiplication_division -> .)
    SEMICOLON       reduce using rule 105 (pn_multiplication_division -> .)
    AND             reduce using rule 105 (pn_multiplication_division -> .)
    OR              reduce using rule 105 (pn_multiplication_division -> .)
    TO              reduce using rule 105 (pn_multiplication_division -> .)
    DO              reduce using rule 105 (pn_multiplication_division -> .)

    pn_multiplication_division     shift and go to state 139

state 104

    (92) factor -> var_cte .

    MULT            reduce using rule 92 (factor -> var_cte .)
    DIV             reduce using rule 92 (factor -> var_cte .)
    PLUS            reduce using rule 92 (factor -> var_cte .)
    MINUS           reduce using rule 92 (factor -> var_cte .)
    LESSTHAN        reduce using rule 92 (factor -> var_cte .)
    GREATERTHAN     reduce using rule 92 (factor -> var_cte .)
    EQUAL           reduce using rule 92 (factor -> var_cte .)
    RPAREN          reduce using rule 92 (factor -> var_cte .)
    RSQUARE         reduce using rule 92 (factor -> var_cte .)
    COMMA           reduce using rule 92 (factor -> var_cte .)
    SEMICOLON       reduce using rule 92 (factor -> var_cte .)
    AND             reduce using rule 92 (factor -> var_cte .)
    OR              reduce using rule 92 (factor -> var_cte .)
    TO              reduce using rule 92 (factor -> var_cte .)
    DO              reduce using rule 92 (factor -> var_cte .)


state 105

    (93) factor -> llamada .

    MULT            reduce using rule 93 (factor -> llamada .)
    DIV             reduce using rule 93 (factor -> llamada .)
    PLUS            reduce using rule 93 (factor -> llamada .)
    MINUS           reduce using rule 93 (factor -> llamada .)
    LESSTHAN        reduce using rule 93 (factor -> llamada .)
    GREATERTHAN     reduce using rule 93 (factor -> llamada .)
    EQUAL           reduce using rule 93 (factor -> llamada .)
    RPAREN          reduce using rule 93 (factor -> llamada .)
    RSQUARE         reduce using rule 93 (factor -> llamada .)
    COMMA           reduce using rule 93 (factor -> llamada .)
    SEMICOLON       reduce using rule 93 (factor -> llamada .)
    AND             reduce using rule 93 (factor -> llamada .)
    OR              reduce using rule 93 (factor -> llamada .)
    TO              reduce using rule 93 (factor -> llamada .)
    DO              reduce using rule 93 (factor -> llamada .)


state 106

    (94) var_cte -> ID . pn_push_operand_and_type
    (60) llamada -> ID . LPAREN aux_llamada RPAREN SEMICOLON
    (102) pn_push_operand_and_type -> .

    LPAREN          shift and go to state 141
    MULT            reduce using rule 102 (pn_push_operand_and_type -> .)
    DIV             reduce using rule 102 (pn_push_operand_and_type -> .)
    PLUS            reduce using rule 102 (pn_push_operand_and_type -> .)
    MINUS           reduce using rule 102 (pn_push_operand_and_type -> .)
    LESSTHAN        reduce using rule 102 (pn_push_operand_and_type -> .)
    GREATERTHAN     reduce using rule 102 (pn_push_operand_and_type -> .)
    EQUAL           reduce using rule 102 (pn_push_operand_and_type -> .)
    RPAREN          reduce using rule 102 (pn_push_operand_and_type -> .)
    RSQUARE         reduce using rule 102 (pn_push_operand_and_type -> .)
    COMMA           reduce using rule 102 (pn_push_operand_and_type -> .)
    SEMICOLON       reduce using rule 102 (pn_push_operand_and_type -> .)
    AND             reduce using rule 102 (pn_push_operand_and_type -> .)
    OR              reduce using rule 102 (pn_push_operand_and_type -> .)
    TO              reduce using rule 102 (pn_push_operand_and_type -> .)
    DO              reduce using rule 102 (pn_push_operand_and_type -> .)

    pn_push_operand_and_type       shift and go to state 140

state 107

    (95) var_cte -> CTE_INT . pn_push_constant_and_type
    (101) pn_push_constant_and_type -> .

    MULT            reduce using rule 101 (pn_push_constant_and_type -> .)
    DIV             reduce using rule 101 (pn_push_constant_and_type -> .)
    PLUS            reduce using rule 101 (pn_push_constant_and_type -> .)
    MINUS           reduce using rule 101 (pn_push_constant_and_type -> .)
    LESSTHAN        reduce using rule 101 (pn_push_constant_and_type -> .)
    GREATERTHAN     reduce using rule 101 (pn_push_constant_and_type -> .)
    EQUAL           reduce using rule 101 (pn_push_constant_and_type -> .)
    RPAREN          reduce using rule 101 (pn_push_constant_and_type -> .)
    RSQUARE         reduce using rule 101 (pn_push_constant_and_type -> .)
    COMMA           reduce using rule 101 (pn_push_constant_and_type -> .)
    SEMICOLON       reduce using rule 101 (pn_push_constant_and_type -> .)
    AND             reduce using rule 101 (pn_push_constant_and_type -> .)
    OR              reduce using rule 101 (pn_push_constant_and_type -> .)
    TO              reduce using rule 101 (pn_push_constant_and_type -> .)
    DO              reduce using rule 101 (pn_push_constant_and_type -> .)

    pn_push_constant_and_type      shift and go to state 142

state 108

    (96) var_cte -> CTE_FLOAT . pn_push_constant_and_type
    (101) pn_push_constant_and_type -> .

    MULT            reduce using rule 101 (pn_push_constant_and_type -> .)
    DIV             reduce using rule 101 (pn_push_constant_and_type -> .)
    PLUS            reduce using rule 101 (pn_push_constant_and_type -> .)
    MINUS           reduce using rule 101 (pn_push_constant_and_type -> .)
    LESSTHAN        reduce using rule 101 (pn_push_constant_and_type -> .)
    GREATERTHAN     reduce using rule 101 (pn_push_constant_and_type -> .)
    EQUAL           reduce using rule 101 (pn_push_constant_and_type -> .)
    RPAREN          reduce using rule 101 (pn_push_constant_and_type -> .)
    RSQUARE         reduce using rule 101 (pn_push_constant_and_type -> .)
    COMMA           reduce using rule 101 (pn_push_constant_and_type -> .)
    SEMICOLON       reduce using rule 101 (pn_push_constant_and_type -> .)
    AND             reduce using rule 101 (pn_push_constant_and_type -> .)
    OR              reduce using rule 101 (pn_push_constant_and_type -> .)
    TO              reduce using rule 101 (pn_push_constant_and_type -> .)
    DO              reduce using rule 101 (pn_push_constant_and_type -> .)

    pn_push_constant_and_type      shift and go to state 143

state 109

    (49) lectura -> READ LPAREN aux_lectura . RPAREN SEMICOLON

    RPAREN          shift and go to state 144


state 110

    (50) aux_lectura -> pn_push_read_operator . ID pn_push_operand_and_type pn_read
    (51) aux_lectura -> pn_push_read_operator . ID pn_push_operand_and_type pn_read dimensiones
    (52) aux_lectura -> pn_push_read_operator . ID pn_push_operand_and_type pn_read COMMA aux_lectura
    (53) aux_lectura -> pn_push_read_operator . ID pn_push_operand_and_type pn_read dimensiones COMMA aux_lectura

    ID              shift and go to state 145


state 111

    (58) decision -> IF LPAREN expresion . pn_if_1 RPAREN THEN bloque pn_if_2
    (59) decision -> IF LPAREN expresion . pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2
    (112) pn_if_1 -> .

    RPAREN          reduce using rule 112 (pn_if_1 -> .)

    pn_if_1                        shift and go to state 146

state 112

    (63) no_condicional -> FOR ID pn_push_operand_and_type . dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (64) no_condicional -> FOR ID pn_push_operand_and_type . ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (65) dimensiones -> . LSQUARE expresion RSQUARE LSQUARE expresion RSQUARE
    (66) dimensiones -> . LSQUARE expresion COMMA expresion RSQUARE
    (67) dimensiones -> . LSQUARE expresion RSQUARE

    ASSIGN          shift and go to state 148
    LSQUARE         shift and go to state 91

    dimensiones                    shift and go to state 147

state 113

    (9) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN vars . bloque
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 48

    bloque                         shift and go to state 149

state 114

    (10) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN bloque .

    VOID            reduce using rule 10 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN bloque .)
    INT             reduce using rule 10 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN bloque .)
    FLOAT           reduce using rule 10 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN bloque .)
    CHAR            reduce using rule 10 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN bloque .)
    MAIN            reduce using rule 10 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN bloque .)


state 115

    (11) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN vars bloque .

    VOID            reduce using rule 11 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN vars bloque .)
    INT             reduce using rule 11 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN vars bloque .)
    FLOAT           reduce using rule 11 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN vars bloque .)
    CHAR            reduce using rule 11 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN vars bloque .)
    MAIN            reduce using rule 11 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN RPAREN vars bloque .)


state 116

    (22) parametros -> tipo ID COMMA . parametros
    (21) parametros -> . tipo ID
    (22) parametros -> . tipo ID COMMA parametros
    (18) tipo -> . INT pn_current_type
    (19) tipo -> . FLOAT pn_current_type
    (20) tipo -> . CHAR pn_current_type

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    tipo                           shift and go to state 73
    parametros                     shift and go to state 150

state 117

    (26) aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE . CTE_INT RSQUARE

    CTE_INT         shift and go to state 151


state 118

    (46) asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN . pn_push_operator expresion pn_assign SEMICOLON
    (103) pn_push_operator -> .

    LPAREN          reduce using rule 103 (pn_push_operator -> .)
    PLUS            reduce using rule 103 (pn_push_operator -> .)
    MINUS           reduce using rule 103 (pn_push_operator -> .)
    ID              reduce using rule 103 (pn_push_operator -> .)
    CTE_INT         reduce using rule 103 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 103 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 152

state 119

    (47) asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator . expresion pn_assign SEMICOLON
    (68) expresion -> . comparacion aux_expresion
    (69) expresion -> . aux_comparacion
    (74) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (75) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (77) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp
    (81) exp -> . termino pn_addition_substraction
    (82) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (83) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (84) termino -> . factor pn_multiplication_division
    (85) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (86) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (87) factor -> . LPAREN expresion RPAREN
    (88) factor -> . PLUS var_cte
    (89) factor -> . PLUS llamada
    (90) factor -> . MINUS var_cte
    (91) factor -> . MINUS llamada
    (92) factor -> . var_cte
    (93) factor -> . llamada
    (94) var_cte -> . ID pn_push_operand_and_type
    (95) var_cte -> . CTE_INT pn_push_constant_and_type
    (96) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (60) llamada -> . ID LPAREN aux_llamada RPAREN SEMICOLON

    LPAREN          shift and go to state 95
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    ID              shift and go to state 106
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    expresion                      shift and go to state 153
    comparacion                    shift and go to state 97
    aux_comparacion                shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 103
    var_cte                        shift and go to state 104
    llamada                        shift and go to state 105

state 120

    (65) dimensiones -> LSQUARE expresion . RSQUARE LSQUARE expresion RSQUARE
    (66) dimensiones -> LSQUARE expresion . COMMA expresion RSQUARE
    (67) dimensiones -> LSQUARE expresion . RSQUARE

    RSQUARE         shift and go to state 154
    COMMA           shift and go to state 155


state 121

    (34) condicional -> WHILE pn_while_1 LPAREN expresion . pn_while_2 RPAREN DO bloque pn_while_3
    (116) pn_while_2 -> .

    RPAREN          reduce using rule 116 (pn_while_2 -> .)

    pn_while_2                     shift and go to state 156

state 122

    (29) escritura -> WRITE LPAREN aux_escritura RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 157


state 123

    (30) aux_escritura -> pn_push_write_operator letrero . pn_write
    (32) aux_escritura -> pn_push_write_operator letrero . pn_write COMMA aux_escritura
    (110) pn_write -> .

    COMMA           reduce using rule 110 (pn_write -> .)
    RPAREN          reduce using rule 110 (pn_write -> .)

    pn_write                       shift and go to state 158

state 124

    (31) aux_escritura -> pn_push_write_operator expresion . pn_write
    (33) aux_escritura -> pn_push_write_operator expresion . pn_write COMMA aux_escritura
    (110) pn_write -> .

    COMMA           reduce using rule 110 (pn_write -> .)
    RPAREN          reduce using rule 110 (pn_write -> .)

    pn_write                       shift and go to state 159

state 125

    (54) letrero -> QUOTATION . aux_letrero QUOTATION
    (55) letrero -> QUOTATION . QUOTATION
    (56) aux_letrero -> . CTE_CHAR
    (57) aux_letrero -> . CTE_CHAR aux_letrero

    QUOTATION       shift and go to state 160
    CTE_CHAR        shift and go to state 162

    aux_letrero                    shift and go to state 161

state 126

    (87) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 163


state 127

    (48) retorno -> RETURN LPAREN expresion RPAREN .

    ID              reduce using rule 48 (retorno -> RETURN LPAREN expresion RPAREN .)
    WHILE           reduce using rule 48 (retorno -> RETURN LPAREN expresion RPAREN .)
    WRITE           reduce using rule 48 (retorno -> RETURN LPAREN expresion RPAREN .)
    RETURN          reduce using rule 48 (retorno -> RETURN LPAREN expresion RPAREN .)
    READ            reduce using rule 48 (retorno -> RETURN LPAREN expresion RPAREN .)
    IF              reduce using rule 48 (retorno -> RETURN LPAREN expresion RPAREN .)
    FOR             reduce using rule 48 (retorno -> RETURN LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 48 (retorno -> RETURN LPAREN expresion RPAREN .)


state 128

    (68) expresion -> comparacion aux_expresion .

    RPAREN          reduce using rule 68 (expresion -> comparacion aux_expresion .)
    RSQUARE         reduce using rule 68 (expresion -> comparacion aux_expresion .)
    COMMA           reduce using rule 68 (expresion -> comparacion aux_expresion .)
    SEMICOLON       reduce using rule 68 (expresion -> comparacion aux_expresion .)
    TO              reduce using rule 68 (expresion -> comparacion aux_expresion .)
    DO              reduce using rule 68 (expresion -> comparacion aux_expresion .)


state 129

    (70) aux_expresion -> AND . comparacion
    (72) aux_expresion -> AND . comparacion aux_expresion
    (74) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (75) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (81) exp -> . termino pn_addition_substraction
    (82) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (83) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (84) termino -> . factor pn_multiplication_division
    (85) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (86) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (87) factor -> . LPAREN expresion RPAREN
    (88) factor -> . PLUS var_cte
    (89) factor -> . PLUS llamada
    (90) factor -> . MINUS var_cte
    (91) factor -> . MINUS llamada
    (92) factor -> . var_cte
    (93) factor -> . llamada
    (94) var_cte -> . ID pn_push_operand_and_type
    (95) var_cte -> . CTE_INT pn_push_constant_and_type
    (96) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (60) llamada -> . ID LPAREN aux_llamada RPAREN SEMICOLON

    LPAREN          shift and go to state 95
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    ID              shift and go to state 106
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    comparacion                    shift and go to state 164
    exp                            shift and go to state 165
    termino                        shift and go to state 100
    factor                         shift and go to state 103
    var_cte                        shift and go to state 104
    llamada                        shift and go to state 105

state 130

    (71) aux_expresion -> OR . comparacion
    (73) aux_expresion -> OR . comparacion aux_expresion
    (74) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (75) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (81) exp -> . termino pn_addition_substraction
    (82) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (83) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (84) termino -> . factor pn_multiplication_division
    (85) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (86) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (87) factor -> . LPAREN expresion RPAREN
    (88) factor -> . PLUS var_cte
    (89) factor -> . PLUS llamada
    (90) factor -> . MINUS var_cte
    (91) factor -> . MINUS llamada
    (92) factor -> . var_cte
    (93) factor -> . llamada
    (94) var_cte -> . ID pn_push_operand_and_type
    (95) var_cte -> . CTE_INT pn_push_constant_and_type
    (96) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (60) llamada -> . ID LPAREN aux_llamada RPAREN SEMICOLON

    LPAREN          shift and go to state 95
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    ID              shift and go to state 106
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    comparacion                    shift and go to state 166
    exp                            shift and go to state 165
    termino                        shift and go to state 100
    factor                         shift and go to state 103
    var_cte                        shift and go to state 104
    llamada                        shift and go to state 105

state 131

    (74) comparacion -> exp LESSTHAN . pn_push_operator exp pn_comparison
    (77) aux_comparacion -> exp LESSTHAN . pn_push_operator exp pn_comparison
    (103) pn_push_operator -> .

    LPAREN          reduce using rule 103 (pn_push_operator -> .)
    PLUS            reduce using rule 103 (pn_push_operator -> .)
    MINUS           reduce using rule 103 (pn_push_operator -> .)
    ID              reduce using rule 103 (pn_push_operator -> .)
    CTE_INT         reduce using rule 103 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 103 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 167

state 132

    (75) comparacion -> exp GREATERTHAN . pn_push_operator exp pn_comparison
    (78) aux_comparacion -> exp GREATERTHAN . pn_push_operator exp pn_comparison
    (103) pn_push_operator -> .

    LPAREN          reduce using rule 103 (pn_push_operator -> .)
    PLUS            reduce using rule 103 (pn_push_operator -> .)
    MINUS           reduce using rule 103 (pn_push_operator -> .)
    ID              reduce using rule 103 (pn_push_operator -> .)
    CTE_INT         reduce using rule 103 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 103 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 168

state 133

    (76) comparacion -> exp EQUAL . pn_push_operator exp pn_comparison
    (79) aux_comparacion -> exp EQUAL . pn_push_operator exp pn_comparison
    (103) pn_push_operator -> .

    LPAREN          reduce using rule 103 (pn_push_operator -> .)
    PLUS            reduce using rule 103 (pn_push_operator -> .)
    MINUS           reduce using rule 103 (pn_push_operator -> .)
    ID              reduce using rule 103 (pn_push_operator -> .)
    CTE_INT         reduce using rule 103 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 103 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 169

state 134

    (81) exp -> termino pn_addition_substraction .
    (82) exp -> termino pn_addition_substraction . PLUS pn_push_operator exp
    (83) exp -> termino pn_addition_substraction . MINUS pn_push_operator exp

    LESSTHAN        reduce using rule 81 (exp -> termino pn_addition_substraction .)
    GREATERTHAN     reduce using rule 81 (exp -> termino pn_addition_substraction .)
    EQUAL           reduce using rule 81 (exp -> termino pn_addition_substraction .)
    RPAREN          reduce using rule 81 (exp -> termino pn_addition_substraction .)
    RSQUARE         reduce using rule 81 (exp -> termino pn_addition_substraction .)
    COMMA           reduce using rule 81 (exp -> termino pn_addition_substraction .)
    SEMICOLON       reduce using rule 81 (exp -> termino pn_addition_substraction .)
    AND             reduce using rule 81 (exp -> termino pn_addition_substraction .)
    OR              reduce using rule 81 (exp -> termino pn_addition_substraction .)
    TO              reduce using rule 81 (exp -> termino pn_addition_substraction .)
    DO              reduce using rule 81 (exp -> termino pn_addition_substraction .)
    PLUS            shift and go to state 170
    MINUS           shift and go to state 171


state 135

    (88) factor -> PLUS var_cte .

    MULT            reduce using rule 88 (factor -> PLUS var_cte .)
    DIV             reduce using rule 88 (factor -> PLUS var_cte .)
    PLUS            reduce using rule 88 (factor -> PLUS var_cte .)
    MINUS           reduce using rule 88 (factor -> PLUS var_cte .)
    LESSTHAN        reduce using rule 88 (factor -> PLUS var_cte .)
    GREATERTHAN     reduce using rule 88 (factor -> PLUS var_cte .)
    EQUAL           reduce using rule 88 (factor -> PLUS var_cte .)
    RPAREN          reduce using rule 88 (factor -> PLUS var_cte .)
    RSQUARE         reduce using rule 88 (factor -> PLUS var_cte .)
    COMMA           reduce using rule 88 (factor -> PLUS var_cte .)
    SEMICOLON       reduce using rule 88 (factor -> PLUS var_cte .)
    AND             reduce using rule 88 (factor -> PLUS var_cte .)
    OR              reduce using rule 88 (factor -> PLUS var_cte .)
    TO              reduce using rule 88 (factor -> PLUS var_cte .)
    DO              reduce using rule 88 (factor -> PLUS var_cte .)


state 136

    (89) factor -> PLUS llamada .

    MULT            reduce using rule 89 (factor -> PLUS llamada .)
    DIV             reduce using rule 89 (factor -> PLUS llamada .)
    PLUS            reduce using rule 89 (factor -> PLUS llamada .)
    MINUS           reduce using rule 89 (factor -> PLUS llamada .)
    LESSTHAN        reduce using rule 89 (factor -> PLUS llamada .)
    GREATERTHAN     reduce using rule 89 (factor -> PLUS llamada .)
    EQUAL           reduce using rule 89 (factor -> PLUS llamada .)
    RPAREN          reduce using rule 89 (factor -> PLUS llamada .)
    RSQUARE         reduce using rule 89 (factor -> PLUS llamada .)
    COMMA           reduce using rule 89 (factor -> PLUS llamada .)
    SEMICOLON       reduce using rule 89 (factor -> PLUS llamada .)
    AND             reduce using rule 89 (factor -> PLUS llamada .)
    OR              reduce using rule 89 (factor -> PLUS llamada .)
    TO              reduce using rule 89 (factor -> PLUS llamada .)
    DO              reduce using rule 89 (factor -> PLUS llamada .)


state 137

    (90) factor -> MINUS var_cte .

    MULT            reduce using rule 90 (factor -> MINUS var_cte .)
    DIV             reduce using rule 90 (factor -> MINUS var_cte .)
    PLUS            reduce using rule 90 (factor -> MINUS var_cte .)
    MINUS           reduce using rule 90 (factor -> MINUS var_cte .)
    LESSTHAN        reduce using rule 90 (factor -> MINUS var_cte .)
    GREATERTHAN     reduce using rule 90 (factor -> MINUS var_cte .)
    EQUAL           reduce using rule 90 (factor -> MINUS var_cte .)
    RPAREN          reduce using rule 90 (factor -> MINUS var_cte .)
    RSQUARE         reduce using rule 90 (factor -> MINUS var_cte .)
    COMMA           reduce using rule 90 (factor -> MINUS var_cte .)
    SEMICOLON       reduce using rule 90 (factor -> MINUS var_cte .)
    AND             reduce using rule 90 (factor -> MINUS var_cte .)
    OR              reduce using rule 90 (factor -> MINUS var_cte .)
    TO              reduce using rule 90 (factor -> MINUS var_cte .)
    DO              reduce using rule 90 (factor -> MINUS var_cte .)


state 138

    (91) factor -> MINUS llamada .

    MULT            reduce using rule 91 (factor -> MINUS llamada .)
    DIV             reduce using rule 91 (factor -> MINUS llamada .)
    PLUS            reduce using rule 91 (factor -> MINUS llamada .)
    MINUS           reduce using rule 91 (factor -> MINUS llamada .)
    LESSTHAN        reduce using rule 91 (factor -> MINUS llamada .)
    GREATERTHAN     reduce using rule 91 (factor -> MINUS llamada .)
    EQUAL           reduce using rule 91 (factor -> MINUS llamada .)
    RPAREN          reduce using rule 91 (factor -> MINUS llamada .)
    RSQUARE         reduce using rule 91 (factor -> MINUS llamada .)
    COMMA           reduce using rule 91 (factor -> MINUS llamada .)
    SEMICOLON       reduce using rule 91 (factor -> MINUS llamada .)
    AND             reduce using rule 91 (factor -> MINUS llamada .)
    OR              reduce using rule 91 (factor -> MINUS llamada .)
    TO              reduce using rule 91 (factor -> MINUS llamada .)
    DO              reduce using rule 91 (factor -> MINUS llamada .)


state 139

    (84) termino -> factor pn_multiplication_division .
    (85) termino -> factor pn_multiplication_division . MULT pn_push_operator termino
    (86) termino -> factor pn_multiplication_division . DIV pn_push_operator termino

    PLUS            reduce using rule 84 (termino -> factor pn_multiplication_division .)
    MINUS           reduce using rule 84 (termino -> factor pn_multiplication_division .)
    LESSTHAN        reduce using rule 84 (termino -> factor pn_multiplication_division .)
    GREATERTHAN     reduce using rule 84 (termino -> factor pn_multiplication_division .)
    EQUAL           reduce using rule 84 (termino -> factor pn_multiplication_division .)
    RPAREN          reduce using rule 84 (termino -> factor pn_multiplication_division .)
    RSQUARE         reduce using rule 84 (termino -> factor pn_multiplication_division .)
    COMMA           reduce using rule 84 (termino -> factor pn_multiplication_division .)
    SEMICOLON       reduce using rule 84 (termino -> factor pn_multiplication_division .)
    AND             reduce using rule 84 (termino -> factor pn_multiplication_division .)
    OR              reduce using rule 84 (termino -> factor pn_multiplication_division .)
    TO              reduce using rule 84 (termino -> factor pn_multiplication_division .)
    DO              reduce using rule 84 (termino -> factor pn_multiplication_division .)
    MULT            shift and go to state 172
    DIV             shift and go to state 173


state 140

    (94) var_cte -> ID pn_push_operand_and_type .

    MULT            reduce using rule 94 (var_cte -> ID pn_push_operand_and_type .)
    DIV             reduce using rule 94 (var_cte -> ID pn_push_operand_and_type .)
    PLUS            reduce using rule 94 (var_cte -> ID pn_push_operand_and_type .)
    MINUS           reduce using rule 94 (var_cte -> ID pn_push_operand_and_type .)
    LESSTHAN        reduce using rule 94 (var_cte -> ID pn_push_operand_and_type .)
    GREATERTHAN     reduce using rule 94 (var_cte -> ID pn_push_operand_and_type .)
    EQUAL           reduce using rule 94 (var_cte -> ID pn_push_operand_and_type .)
    RPAREN          reduce using rule 94 (var_cte -> ID pn_push_operand_and_type .)
    RSQUARE         reduce using rule 94 (var_cte -> ID pn_push_operand_and_type .)
    COMMA           reduce using rule 94 (var_cte -> ID pn_push_operand_and_type .)
    SEMICOLON       reduce using rule 94 (var_cte -> ID pn_push_operand_and_type .)
    AND             reduce using rule 94 (var_cte -> ID pn_push_operand_and_type .)
    OR              reduce using rule 94 (var_cte -> ID pn_push_operand_and_type .)
    TO              reduce using rule 94 (var_cte -> ID pn_push_operand_and_type .)
    DO              reduce using rule 94 (var_cte -> ID pn_push_operand_and_type .)


state 141

    (60) llamada -> ID LPAREN . aux_llamada RPAREN SEMICOLON
    (61) aux_llamada -> . expresion
    (62) aux_llamada -> . expresion COMMA aux_llamada
    (68) expresion -> . comparacion aux_expresion
    (69) expresion -> . aux_comparacion
    (74) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (75) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (77) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp
    (81) exp -> . termino pn_addition_substraction
    (82) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (83) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (84) termino -> . factor pn_multiplication_division
    (85) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (86) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (87) factor -> . LPAREN expresion RPAREN
    (88) factor -> . PLUS var_cte
    (89) factor -> . PLUS llamada
    (90) factor -> . MINUS var_cte
    (91) factor -> . MINUS llamada
    (92) factor -> . var_cte
    (93) factor -> . llamada
    (94) var_cte -> . ID pn_push_operand_and_type
    (95) var_cte -> . CTE_INT pn_push_constant_and_type
    (96) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (60) llamada -> . ID LPAREN aux_llamada RPAREN SEMICOLON

    LPAREN          shift and go to state 95
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    ID              shift and go to state 106
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    aux_llamada                    shift and go to state 174
    expresion                      shift and go to state 175
    comparacion                    shift and go to state 97
    aux_comparacion                shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 103
    var_cte                        shift and go to state 104
    llamada                        shift and go to state 105

state 142

    (95) var_cte -> CTE_INT pn_push_constant_and_type .

    MULT            reduce using rule 95 (var_cte -> CTE_INT pn_push_constant_and_type .)
    DIV             reduce using rule 95 (var_cte -> CTE_INT pn_push_constant_and_type .)
    PLUS            reduce using rule 95 (var_cte -> CTE_INT pn_push_constant_and_type .)
    MINUS           reduce using rule 95 (var_cte -> CTE_INT pn_push_constant_and_type .)
    LESSTHAN        reduce using rule 95 (var_cte -> CTE_INT pn_push_constant_and_type .)
    GREATERTHAN     reduce using rule 95 (var_cte -> CTE_INT pn_push_constant_and_type .)
    EQUAL           reduce using rule 95 (var_cte -> CTE_INT pn_push_constant_and_type .)
    RPAREN          reduce using rule 95 (var_cte -> CTE_INT pn_push_constant_and_type .)
    RSQUARE         reduce using rule 95 (var_cte -> CTE_INT pn_push_constant_and_type .)
    COMMA           reduce using rule 95 (var_cte -> CTE_INT pn_push_constant_and_type .)
    SEMICOLON       reduce using rule 95 (var_cte -> CTE_INT pn_push_constant_and_type .)
    AND             reduce using rule 95 (var_cte -> CTE_INT pn_push_constant_and_type .)
    OR              reduce using rule 95 (var_cte -> CTE_INT pn_push_constant_and_type .)
    TO              reduce using rule 95 (var_cte -> CTE_INT pn_push_constant_and_type .)
    DO              reduce using rule 95 (var_cte -> CTE_INT pn_push_constant_and_type .)


state 143

    (96) var_cte -> CTE_FLOAT pn_push_constant_and_type .

    MULT            reduce using rule 96 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    DIV             reduce using rule 96 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    PLUS            reduce using rule 96 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    MINUS           reduce using rule 96 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    LESSTHAN        reduce using rule 96 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    GREATERTHAN     reduce using rule 96 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    EQUAL           reduce using rule 96 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    RPAREN          reduce using rule 96 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    RSQUARE         reduce using rule 96 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    COMMA           reduce using rule 96 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    SEMICOLON       reduce using rule 96 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    AND             reduce using rule 96 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    OR              reduce using rule 96 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    TO              reduce using rule 96 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    DO              reduce using rule 96 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)


state 144

    (49) lectura -> READ LPAREN aux_lectura RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 176


state 145

    (50) aux_lectura -> pn_push_read_operator ID . pn_push_operand_and_type pn_read
    (51) aux_lectura -> pn_push_read_operator ID . pn_push_operand_and_type pn_read dimensiones
    (52) aux_lectura -> pn_push_read_operator ID . pn_push_operand_and_type pn_read COMMA aux_lectura
    (53) aux_lectura -> pn_push_read_operator ID . pn_push_operand_and_type pn_read dimensiones COMMA aux_lectura
    (102) pn_push_operand_and_type -> .

    COMMA           reduce using rule 102 (pn_push_operand_and_type -> .)
    LSQUARE         reduce using rule 102 (pn_push_operand_and_type -> .)
    RPAREN          reduce using rule 102 (pn_push_operand_and_type -> .)

    pn_push_operand_and_type       shift and go to state 177

state 146

    (58) decision -> IF LPAREN expresion pn_if_1 . RPAREN THEN bloque pn_if_2
    (59) decision -> IF LPAREN expresion pn_if_1 . RPAREN THEN bloque ELSE pn_else bloque pn_if_2

    RPAREN          shift and go to state 178


state 147

    (63) no_condicional -> FOR ID pn_push_operand_and_type dimensiones . ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back

    ASSIGN          shift and go to state 179


state 148

    (64) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN . pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (103) pn_push_operator -> .

    LPAREN          reduce using rule 103 (pn_push_operator -> .)
    PLUS            reduce using rule 103 (pn_push_operator -> .)
    MINUS           reduce using rule 103 (pn_push_operator -> .)
    ID              reduce using rule 103 (pn_push_operator -> .)
    CTE_INT         reduce using rule 103 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 103 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 180

state 149

    (9) funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN vars bloque .

    VOID            reduce using rule 9 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN vars bloque .)
    INT             reduce using rule 9 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN vars bloque .)
    FLOAT           reduce using rule 9 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN vars bloque .)
    CHAR            reduce using rule 9 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN vars bloque .)
    MAIN            reduce using rule 9 (funcion -> tipo_retorno MODULE ID pn_current_function LPAREN parametros RPAREN vars bloque .)


state 150

    (22) parametros -> tipo ID COMMA parametros .

    RPAREN          reduce using rule 22 (parametros -> tipo ID COMMA parametros .)


state 151

    (26) aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT . RSQUARE

    RSQUARE         shift and go to state 181


state 152

    (46) asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator . expresion pn_assign SEMICOLON
    (68) expresion -> . comparacion aux_expresion
    (69) expresion -> . aux_comparacion
    (74) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (75) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (77) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp
    (81) exp -> . termino pn_addition_substraction
    (82) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (83) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (84) termino -> . factor pn_multiplication_division
    (85) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (86) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (87) factor -> . LPAREN expresion RPAREN
    (88) factor -> . PLUS var_cte
    (89) factor -> . PLUS llamada
    (90) factor -> . MINUS var_cte
    (91) factor -> . MINUS llamada
    (92) factor -> . var_cte
    (93) factor -> . llamada
    (94) var_cte -> . ID pn_push_operand_and_type
    (95) var_cte -> . CTE_INT pn_push_constant_and_type
    (96) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (60) llamada -> . ID LPAREN aux_llamada RPAREN SEMICOLON

    LPAREN          shift and go to state 95
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    ID              shift and go to state 106
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    expresion                      shift and go to state 182
    comparacion                    shift and go to state 97
    aux_comparacion                shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 103
    var_cte                        shift and go to state 104
    llamada                        shift and go to state 105

state 153

    (47) asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion . pn_assign SEMICOLON
    (106) pn_assign -> .

    SEMICOLON       reduce using rule 106 (pn_assign -> .)

    pn_assign                      shift and go to state 183

state 154

    (65) dimensiones -> LSQUARE expresion RSQUARE . LSQUARE expresion RSQUARE
    (67) dimensiones -> LSQUARE expresion RSQUARE .

    LSQUARE         shift and go to state 184
    ASSIGN          reduce using rule 67 (dimensiones -> LSQUARE expresion RSQUARE .)
    COMMA           reduce using rule 67 (dimensiones -> LSQUARE expresion RSQUARE .)
    RPAREN          reduce using rule 67 (dimensiones -> LSQUARE expresion RSQUARE .)


state 155

    (66) dimensiones -> LSQUARE expresion COMMA . expresion RSQUARE
    (68) expresion -> . comparacion aux_expresion
    (69) expresion -> . aux_comparacion
    (74) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (75) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (77) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp
    (81) exp -> . termino pn_addition_substraction
    (82) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (83) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (84) termino -> . factor pn_multiplication_division
    (85) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (86) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (87) factor -> . LPAREN expresion RPAREN
    (88) factor -> . PLUS var_cte
    (89) factor -> . PLUS llamada
    (90) factor -> . MINUS var_cte
    (91) factor -> . MINUS llamada
    (92) factor -> . var_cte
    (93) factor -> . llamada
    (94) var_cte -> . ID pn_push_operand_and_type
    (95) var_cte -> . CTE_INT pn_push_constant_and_type
    (96) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (60) llamada -> . ID LPAREN aux_llamada RPAREN SEMICOLON

    LPAREN          shift and go to state 95
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    ID              shift and go to state 106
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    expresion                      shift and go to state 185
    comparacion                    shift and go to state 97
    aux_comparacion                shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 103
    var_cte                        shift and go to state 104
    llamada                        shift and go to state 105

state 156

    (34) condicional -> WHILE pn_while_1 LPAREN expresion pn_while_2 . RPAREN DO bloque pn_while_3

    RPAREN          shift and go to state 186


state 157

    (29) escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON .

    ID              reduce using rule 29 (escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON .)
    WHILE           reduce using rule 29 (escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON .)
    WRITE           reduce using rule 29 (escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON .)
    RETURN          reduce using rule 29 (escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON .)
    READ            reduce using rule 29 (escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON .)
    IF              reduce using rule 29 (escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON .)
    FOR             reduce using rule 29 (escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 29 (escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON .)


state 158

    (30) aux_escritura -> pn_push_write_operator letrero pn_write .
    (32) aux_escritura -> pn_push_write_operator letrero pn_write . COMMA aux_escritura

    RPAREN          reduce using rule 30 (aux_escritura -> pn_push_write_operator letrero pn_write .)
    COMMA           shift and go to state 187


state 159

    (31) aux_escritura -> pn_push_write_operator expresion pn_write .
    (33) aux_escritura -> pn_push_write_operator expresion pn_write . COMMA aux_escritura

    RPAREN          reduce using rule 31 (aux_escritura -> pn_push_write_operator expresion pn_write .)
    COMMA           shift and go to state 188


state 160

    (55) letrero -> QUOTATION QUOTATION .

    COMMA           reduce using rule 55 (letrero -> QUOTATION QUOTATION .)
    RPAREN          reduce using rule 55 (letrero -> QUOTATION QUOTATION .)


state 161

    (54) letrero -> QUOTATION aux_letrero . QUOTATION

    QUOTATION       shift and go to state 189


state 162

    (56) aux_letrero -> CTE_CHAR .
    (57) aux_letrero -> CTE_CHAR . aux_letrero
    (56) aux_letrero -> . CTE_CHAR
    (57) aux_letrero -> . CTE_CHAR aux_letrero

    QUOTATION       reduce using rule 56 (aux_letrero -> CTE_CHAR .)
    CTE_CHAR        shift and go to state 162

    aux_letrero                    shift and go to state 190

state 163

    (87) factor -> LPAREN expresion RPAREN .

    MULT            reduce using rule 87 (factor -> LPAREN expresion RPAREN .)
    DIV             reduce using rule 87 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 87 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 87 (factor -> LPAREN expresion RPAREN .)
    LESSTHAN        reduce using rule 87 (factor -> LPAREN expresion RPAREN .)
    GREATERTHAN     reduce using rule 87 (factor -> LPAREN expresion RPAREN .)
    EQUAL           reduce using rule 87 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 87 (factor -> LPAREN expresion RPAREN .)
    RSQUARE         reduce using rule 87 (factor -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 87 (factor -> LPAREN expresion RPAREN .)
    SEMICOLON       reduce using rule 87 (factor -> LPAREN expresion RPAREN .)
    AND             reduce using rule 87 (factor -> LPAREN expresion RPAREN .)
    OR              reduce using rule 87 (factor -> LPAREN expresion RPAREN .)
    TO              reduce using rule 87 (factor -> LPAREN expresion RPAREN .)
    DO              reduce using rule 87 (factor -> LPAREN expresion RPAREN .)


state 164

    (70) aux_expresion -> AND comparacion .
    (72) aux_expresion -> AND comparacion . aux_expresion
    (70) aux_expresion -> . AND comparacion
    (71) aux_expresion -> . OR comparacion
    (72) aux_expresion -> . AND comparacion aux_expresion
    (73) aux_expresion -> . OR comparacion aux_expresion

    RPAREN          reduce using rule 70 (aux_expresion -> AND comparacion .)
    RSQUARE         reduce using rule 70 (aux_expresion -> AND comparacion .)
    COMMA           reduce using rule 70 (aux_expresion -> AND comparacion .)
    SEMICOLON       reduce using rule 70 (aux_expresion -> AND comparacion .)
    TO              reduce using rule 70 (aux_expresion -> AND comparacion .)
    DO              reduce using rule 70 (aux_expresion -> AND comparacion .)
    AND             shift and go to state 129
    OR              shift and go to state 130

    aux_expresion                  shift and go to state 191

state 165

    (74) comparacion -> exp . LESSTHAN pn_push_operator exp pn_comparison
    (75) comparacion -> exp . GREATERTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> exp . EQUAL pn_push_operator exp pn_comparison

    LESSTHAN        shift and go to state 192
    GREATERTHAN     shift and go to state 193
    EQUAL           shift and go to state 194


state 166

    (71) aux_expresion -> OR comparacion .
    (73) aux_expresion -> OR comparacion . aux_expresion
    (70) aux_expresion -> . AND comparacion
    (71) aux_expresion -> . OR comparacion
    (72) aux_expresion -> . AND comparacion aux_expresion
    (73) aux_expresion -> . OR comparacion aux_expresion

    RPAREN          reduce using rule 71 (aux_expresion -> OR comparacion .)
    RSQUARE         reduce using rule 71 (aux_expresion -> OR comparacion .)
    COMMA           reduce using rule 71 (aux_expresion -> OR comparacion .)
    SEMICOLON       reduce using rule 71 (aux_expresion -> OR comparacion .)
    TO              reduce using rule 71 (aux_expresion -> OR comparacion .)
    DO              reduce using rule 71 (aux_expresion -> OR comparacion .)
    AND             shift and go to state 129
    OR              shift and go to state 130

    aux_expresion                  shift and go to state 195

state 167

    (74) comparacion -> exp LESSTHAN pn_push_operator . exp pn_comparison
    (77) aux_comparacion -> exp LESSTHAN pn_push_operator . exp pn_comparison
    (81) exp -> . termino pn_addition_substraction
    (82) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (83) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (84) termino -> . factor pn_multiplication_division
    (85) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (86) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (87) factor -> . LPAREN expresion RPAREN
    (88) factor -> . PLUS var_cte
    (89) factor -> . PLUS llamada
    (90) factor -> . MINUS var_cte
    (91) factor -> . MINUS llamada
    (92) factor -> . var_cte
    (93) factor -> . llamada
    (94) var_cte -> . ID pn_push_operand_and_type
    (95) var_cte -> . CTE_INT pn_push_constant_and_type
    (96) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (60) llamada -> . ID LPAREN aux_llamada RPAREN SEMICOLON

    LPAREN          shift and go to state 95
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    ID              shift and go to state 106
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    exp                            shift and go to state 196
    termino                        shift and go to state 100
    factor                         shift and go to state 103
    var_cte                        shift and go to state 104
    llamada                        shift and go to state 105

state 168

    (75) comparacion -> exp GREATERTHAN pn_push_operator . exp pn_comparison
    (78) aux_comparacion -> exp GREATERTHAN pn_push_operator . exp pn_comparison
    (81) exp -> . termino pn_addition_substraction
    (82) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (83) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (84) termino -> . factor pn_multiplication_division
    (85) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (86) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (87) factor -> . LPAREN expresion RPAREN
    (88) factor -> . PLUS var_cte
    (89) factor -> . PLUS llamada
    (90) factor -> . MINUS var_cte
    (91) factor -> . MINUS llamada
    (92) factor -> . var_cte
    (93) factor -> . llamada
    (94) var_cte -> . ID pn_push_operand_and_type
    (95) var_cte -> . CTE_INT pn_push_constant_and_type
    (96) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (60) llamada -> . ID LPAREN aux_llamada RPAREN SEMICOLON

    LPAREN          shift and go to state 95
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    ID              shift and go to state 106
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    exp                            shift and go to state 197
    termino                        shift and go to state 100
    factor                         shift and go to state 103
    var_cte                        shift and go to state 104
    llamada                        shift and go to state 105

state 169

    (76) comparacion -> exp EQUAL pn_push_operator . exp pn_comparison
    (79) aux_comparacion -> exp EQUAL pn_push_operator . exp pn_comparison
    (81) exp -> . termino pn_addition_substraction
    (82) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (83) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (84) termino -> . factor pn_multiplication_division
    (85) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (86) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (87) factor -> . LPAREN expresion RPAREN
    (88) factor -> . PLUS var_cte
    (89) factor -> . PLUS llamada
    (90) factor -> . MINUS var_cte
    (91) factor -> . MINUS llamada
    (92) factor -> . var_cte
    (93) factor -> . llamada
    (94) var_cte -> . ID pn_push_operand_and_type
    (95) var_cte -> . CTE_INT pn_push_constant_and_type
    (96) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (60) llamada -> . ID LPAREN aux_llamada RPAREN SEMICOLON

    LPAREN          shift and go to state 95
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    ID              shift and go to state 106
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    exp                            shift and go to state 198
    termino                        shift and go to state 100
    factor                         shift and go to state 103
    var_cte                        shift and go to state 104
    llamada                        shift and go to state 105

state 170

    (82) exp -> termino pn_addition_substraction PLUS . pn_push_operator exp
    (103) pn_push_operator -> .

    LPAREN          reduce using rule 103 (pn_push_operator -> .)
    PLUS            reduce using rule 103 (pn_push_operator -> .)
    MINUS           reduce using rule 103 (pn_push_operator -> .)
    ID              reduce using rule 103 (pn_push_operator -> .)
    CTE_INT         reduce using rule 103 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 103 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 199

state 171

    (83) exp -> termino pn_addition_substraction MINUS . pn_push_operator exp
    (103) pn_push_operator -> .

    LPAREN          reduce using rule 103 (pn_push_operator -> .)
    PLUS            reduce using rule 103 (pn_push_operator -> .)
    MINUS           reduce using rule 103 (pn_push_operator -> .)
    ID              reduce using rule 103 (pn_push_operator -> .)
    CTE_INT         reduce using rule 103 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 103 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 200

state 172

    (85) termino -> factor pn_multiplication_division MULT . pn_push_operator termino
    (103) pn_push_operator -> .

    LPAREN          reduce using rule 103 (pn_push_operator -> .)
    PLUS            reduce using rule 103 (pn_push_operator -> .)
    MINUS           reduce using rule 103 (pn_push_operator -> .)
    ID              reduce using rule 103 (pn_push_operator -> .)
    CTE_INT         reduce using rule 103 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 103 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 201

state 173

    (86) termino -> factor pn_multiplication_division DIV . pn_push_operator termino
    (103) pn_push_operator -> .

    LPAREN          reduce using rule 103 (pn_push_operator -> .)
    PLUS            reduce using rule 103 (pn_push_operator -> .)
    MINUS           reduce using rule 103 (pn_push_operator -> .)
    ID              reduce using rule 103 (pn_push_operator -> .)
    CTE_INT         reduce using rule 103 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 103 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 202

state 174

    (60) llamada -> ID LPAREN aux_llamada . RPAREN SEMICOLON

    RPAREN          shift and go to state 203


state 175

    (61) aux_llamada -> expresion .
    (62) aux_llamada -> expresion . COMMA aux_llamada

    RPAREN          reduce using rule 61 (aux_llamada -> expresion .)
    COMMA           shift and go to state 204


state 176

    (49) lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON .

    ID              reduce using rule 49 (lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON .)
    WHILE           reduce using rule 49 (lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON .)
    WRITE           reduce using rule 49 (lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON .)
    RETURN          reduce using rule 49 (lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON .)
    READ            reduce using rule 49 (lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON .)
    IF              reduce using rule 49 (lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON .)
    FOR             reduce using rule 49 (lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 49 (lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON .)


state 177

    (50) aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type . pn_read
    (51) aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type . pn_read dimensiones
    (52) aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type . pn_read COMMA aux_lectura
    (53) aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type . pn_read dimensiones COMMA aux_lectura
    (108) pn_read -> .

    COMMA           reduce using rule 108 (pn_read -> .)
    LSQUARE         reduce using rule 108 (pn_read -> .)
    RPAREN          reduce using rule 108 (pn_read -> .)

    pn_read                        shift and go to state 205

state 178

    (58) decision -> IF LPAREN expresion pn_if_1 RPAREN . THEN bloque pn_if_2
    (59) decision -> IF LPAREN expresion pn_if_1 RPAREN . THEN bloque ELSE pn_else bloque pn_if_2

    THEN            shift and go to state 206


state 179

    (63) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN . pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (103) pn_push_operator -> .

    LPAREN          reduce using rule 103 (pn_push_operator -> .)
    PLUS            reduce using rule 103 (pn_push_operator -> .)
    MINUS           reduce using rule 103 (pn_push_operator -> .)
    ID              reduce using rule 103 (pn_push_operator -> .)
    CTE_INT         reduce using rule 103 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 103 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 207

state 180

    (64) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator . expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (68) expresion -> . comparacion aux_expresion
    (69) expresion -> . aux_comparacion
    (74) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (75) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (77) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp
    (81) exp -> . termino pn_addition_substraction
    (82) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (83) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (84) termino -> . factor pn_multiplication_division
    (85) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (86) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (87) factor -> . LPAREN expresion RPAREN
    (88) factor -> . PLUS var_cte
    (89) factor -> . PLUS llamada
    (90) factor -> . MINUS var_cte
    (91) factor -> . MINUS llamada
    (92) factor -> . var_cte
    (93) factor -> . llamada
    (94) var_cte -> . ID pn_push_operand_and_type
    (95) var_cte -> . CTE_INT pn_push_constant_and_type
    (96) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (60) llamada -> . ID LPAREN aux_llamada RPAREN SEMICOLON

    LPAREN          shift and go to state 95
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    ID              shift and go to state 106
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    expresion                      shift and go to state 208
    comparacion                    shift and go to state 97
    aux_comparacion                shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 103
    var_cte                        shift and go to state 104
    llamada                        shift and go to state 105

state 181

    (26) aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE .

    COMMA           reduce using rule 26 (aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE .)
    SEMICOLON       reduce using rule 26 (aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE .)


state 182

    (46) asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion . pn_assign SEMICOLON
    (106) pn_assign -> .

    SEMICOLON       reduce using rule 106 (pn_assign -> .)

    pn_assign                      shift and go to state 209

state 183

    (47) asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign . SEMICOLON

    SEMICOLON       shift and go to state 210


state 184

    (65) dimensiones -> LSQUARE expresion RSQUARE LSQUARE . expresion RSQUARE
    (68) expresion -> . comparacion aux_expresion
    (69) expresion -> . aux_comparacion
    (74) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (75) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (77) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp
    (81) exp -> . termino pn_addition_substraction
    (82) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (83) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (84) termino -> . factor pn_multiplication_division
    (85) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (86) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (87) factor -> . LPAREN expresion RPAREN
    (88) factor -> . PLUS var_cte
    (89) factor -> . PLUS llamada
    (90) factor -> . MINUS var_cte
    (91) factor -> . MINUS llamada
    (92) factor -> . var_cte
    (93) factor -> . llamada
    (94) var_cte -> . ID pn_push_operand_and_type
    (95) var_cte -> . CTE_INT pn_push_constant_and_type
    (96) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (60) llamada -> . ID LPAREN aux_llamada RPAREN SEMICOLON

    LPAREN          shift and go to state 95
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    ID              shift and go to state 106
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    expresion                      shift and go to state 211
    comparacion                    shift and go to state 97
    aux_comparacion                shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 103
    var_cte                        shift and go to state 104
    llamada                        shift and go to state 105

state 185

    (66) dimensiones -> LSQUARE expresion COMMA expresion . RSQUARE

    RSQUARE         shift and go to state 212


state 186

    (34) condicional -> WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN . DO bloque pn_while_3

    DO              shift and go to state 213


state 187

    (32) aux_escritura -> pn_push_write_operator letrero pn_write COMMA . aux_escritura
    (30) aux_escritura -> . pn_push_write_operator letrero pn_write
    (31) aux_escritura -> . pn_push_write_operator expresion pn_write
    (32) aux_escritura -> . pn_push_write_operator letrero pn_write COMMA aux_escritura
    (33) aux_escritura -> . pn_push_write_operator expresion pn_write COMMA aux_escritura
    (109) pn_push_write_operator -> .

    QUOTATION       reduce using rule 109 (pn_push_write_operator -> .)
    LPAREN          reduce using rule 109 (pn_push_write_operator -> .)
    PLUS            reduce using rule 109 (pn_push_write_operator -> .)
    MINUS           reduce using rule 109 (pn_push_write_operator -> .)
    ID              reduce using rule 109 (pn_push_write_operator -> .)
    CTE_INT         reduce using rule 109 (pn_push_write_operator -> .)
    CTE_FLOAT       reduce using rule 109 (pn_push_write_operator -> .)

    pn_push_write_operator         shift and go to state 94
    aux_escritura                  shift and go to state 214

state 188

    (33) aux_escritura -> pn_push_write_operator expresion pn_write COMMA . aux_escritura
    (30) aux_escritura -> . pn_push_write_operator letrero pn_write
    (31) aux_escritura -> . pn_push_write_operator expresion pn_write
    (32) aux_escritura -> . pn_push_write_operator letrero pn_write COMMA aux_escritura
    (33) aux_escritura -> . pn_push_write_operator expresion pn_write COMMA aux_escritura
    (109) pn_push_write_operator -> .

    QUOTATION       reduce using rule 109 (pn_push_write_operator -> .)
    LPAREN          reduce using rule 109 (pn_push_write_operator -> .)
    PLUS            reduce using rule 109 (pn_push_write_operator -> .)
    MINUS           reduce using rule 109 (pn_push_write_operator -> .)
    ID              reduce using rule 109 (pn_push_write_operator -> .)
    CTE_INT         reduce using rule 109 (pn_push_write_operator -> .)
    CTE_FLOAT       reduce using rule 109 (pn_push_write_operator -> .)

    pn_push_write_operator         shift and go to state 94
    aux_escritura                  shift and go to state 215

state 189

    (54) letrero -> QUOTATION aux_letrero QUOTATION .

    COMMA           reduce using rule 54 (letrero -> QUOTATION aux_letrero QUOTATION .)
    RPAREN          reduce using rule 54 (letrero -> QUOTATION aux_letrero QUOTATION .)


state 190

    (57) aux_letrero -> CTE_CHAR aux_letrero .

    QUOTATION       reduce using rule 57 (aux_letrero -> CTE_CHAR aux_letrero .)


state 191

    (72) aux_expresion -> AND comparacion aux_expresion .

    RPAREN          reduce using rule 72 (aux_expresion -> AND comparacion aux_expresion .)
    RSQUARE         reduce using rule 72 (aux_expresion -> AND comparacion aux_expresion .)
    COMMA           reduce using rule 72 (aux_expresion -> AND comparacion aux_expresion .)
    SEMICOLON       reduce using rule 72 (aux_expresion -> AND comparacion aux_expresion .)
    TO              reduce using rule 72 (aux_expresion -> AND comparacion aux_expresion .)
    DO              reduce using rule 72 (aux_expresion -> AND comparacion aux_expresion .)


state 192

    (74) comparacion -> exp LESSTHAN . pn_push_operator exp pn_comparison
    (103) pn_push_operator -> .

    LPAREN          reduce using rule 103 (pn_push_operator -> .)
    PLUS            reduce using rule 103 (pn_push_operator -> .)
    MINUS           reduce using rule 103 (pn_push_operator -> .)
    ID              reduce using rule 103 (pn_push_operator -> .)
    CTE_INT         reduce using rule 103 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 103 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 216

state 193

    (75) comparacion -> exp GREATERTHAN . pn_push_operator exp pn_comparison
    (103) pn_push_operator -> .

    LPAREN          reduce using rule 103 (pn_push_operator -> .)
    PLUS            reduce using rule 103 (pn_push_operator -> .)
    MINUS           reduce using rule 103 (pn_push_operator -> .)
    ID              reduce using rule 103 (pn_push_operator -> .)
    CTE_INT         reduce using rule 103 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 103 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 217

state 194

    (76) comparacion -> exp EQUAL . pn_push_operator exp pn_comparison
    (103) pn_push_operator -> .

    LPAREN          reduce using rule 103 (pn_push_operator -> .)
    PLUS            reduce using rule 103 (pn_push_operator -> .)
    MINUS           reduce using rule 103 (pn_push_operator -> .)
    ID              reduce using rule 103 (pn_push_operator -> .)
    CTE_INT         reduce using rule 103 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 103 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 218

state 195

    (73) aux_expresion -> OR comparacion aux_expresion .

    RPAREN          reduce using rule 73 (aux_expresion -> OR comparacion aux_expresion .)
    RSQUARE         reduce using rule 73 (aux_expresion -> OR comparacion aux_expresion .)
    COMMA           reduce using rule 73 (aux_expresion -> OR comparacion aux_expresion .)
    SEMICOLON       reduce using rule 73 (aux_expresion -> OR comparacion aux_expresion .)
    TO              reduce using rule 73 (aux_expresion -> OR comparacion aux_expresion .)
    DO              reduce using rule 73 (aux_expresion -> OR comparacion aux_expresion .)


state 196

    (74) comparacion -> exp LESSTHAN pn_push_operator exp . pn_comparison
    (77) aux_comparacion -> exp LESSTHAN pn_push_operator exp . pn_comparison
    (111) pn_comparison -> .

    AND             reduce using rule 111 (pn_comparison -> .)
    OR              reduce using rule 111 (pn_comparison -> .)
    RPAREN          reduce using rule 111 (pn_comparison -> .)
    RSQUARE         reduce using rule 111 (pn_comparison -> .)
    COMMA           reduce using rule 111 (pn_comparison -> .)
    SEMICOLON       reduce using rule 111 (pn_comparison -> .)
    TO              reduce using rule 111 (pn_comparison -> .)
    DO              reduce using rule 111 (pn_comparison -> .)

    pn_comparison                  shift and go to state 219

state 197

    (75) comparacion -> exp GREATERTHAN pn_push_operator exp . pn_comparison
    (78) aux_comparacion -> exp GREATERTHAN pn_push_operator exp . pn_comparison
    (111) pn_comparison -> .

    AND             reduce using rule 111 (pn_comparison -> .)
    OR              reduce using rule 111 (pn_comparison -> .)
    RPAREN          reduce using rule 111 (pn_comparison -> .)
    RSQUARE         reduce using rule 111 (pn_comparison -> .)
    COMMA           reduce using rule 111 (pn_comparison -> .)
    SEMICOLON       reduce using rule 111 (pn_comparison -> .)
    TO              reduce using rule 111 (pn_comparison -> .)
    DO              reduce using rule 111 (pn_comparison -> .)

    pn_comparison                  shift and go to state 220

state 198

    (76) comparacion -> exp EQUAL pn_push_operator exp . pn_comparison
    (79) aux_comparacion -> exp EQUAL pn_push_operator exp . pn_comparison
    (111) pn_comparison -> .

    AND             reduce using rule 111 (pn_comparison -> .)
    OR              reduce using rule 111 (pn_comparison -> .)
    RPAREN          reduce using rule 111 (pn_comparison -> .)
    RSQUARE         reduce using rule 111 (pn_comparison -> .)
    COMMA           reduce using rule 111 (pn_comparison -> .)
    SEMICOLON       reduce using rule 111 (pn_comparison -> .)
    TO              reduce using rule 111 (pn_comparison -> .)
    DO              reduce using rule 111 (pn_comparison -> .)

    pn_comparison                  shift and go to state 221

state 199

    (82) exp -> termino pn_addition_substraction PLUS pn_push_operator . exp
    (81) exp -> . termino pn_addition_substraction
    (82) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (83) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (84) termino -> . factor pn_multiplication_division
    (85) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (86) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (87) factor -> . LPAREN expresion RPAREN
    (88) factor -> . PLUS var_cte
    (89) factor -> . PLUS llamada
    (90) factor -> . MINUS var_cte
    (91) factor -> . MINUS llamada
    (92) factor -> . var_cte
    (93) factor -> . llamada
    (94) var_cte -> . ID pn_push_operand_and_type
    (95) var_cte -> . CTE_INT pn_push_constant_and_type
    (96) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (60) llamada -> . ID LPAREN aux_llamada RPAREN SEMICOLON

    LPAREN          shift and go to state 95
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    ID              shift and go to state 106
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    termino                        shift and go to state 100
    exp                            shift and go to state 222
    factor                         shift and go to state 103
    var_cte                        shift and go to state 104
    llamada                        shift and go to state 105

state 200

    (83) exp -> termino pn_addition_substraction MINUS pn_push_operator . exp
    (81) exp -> . termino pn_addition_substraction
    (82) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (83) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (84) termino -> . factor pn_multiplication_division
    (85) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (86) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (87) factor -> . LPAREN expresion RPAREN
    (88) factor -> . PLUS var_cte
    (89) factor -> . PLUS llamada
    (90) factor -> . MINUS var_cte
    (91) factor -> . MINUS llamada
    (92) factor -> . var_cte
    (93) factor -> . llamada
    (94) var_cte -> . ID pn_push_operand_and_type
    (95) var_cte -> . CTE_INT pn_push_constant_and_type
    (96) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (60) llamada -> . ID LPAREN aux_llamada RPAREN SEMICOLON

    LPAREN          shift and go to state 95
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    ID              shift and go to state 106
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    termino                        shift and go to state 100
    exp                            shift and go to state 223
    factor                         shift and go to state 103
    var_cte                        shift and go to state 104
    llamada                        shift and go to state 105

state 201

    (85) termino -> factor pn_multiplication_division MULT pn_push_operator . termino
    (84) termino -> . factor pn_multiplication_division
    (85) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (86) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (87) factor -> . LPAREN expresion RPAREN
    (88) factor -> . PLUS var_cte
    (89) factor -> . PLUS llamada
    (90) factor -> . MINUS var_cte
    (91) factor -> . MINUS llamada
    (92) factor -> . var_cte
    (93) factor -> . llamada
    (94) var_cte -> . ID pn_push_operand_and_type
    (95) var_cte -> . CTE_INT pn_push_constant_and_type
    (96) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (60) llamada -> . ID LPAREN aux_llamada RPAREN SEMICOLON

    LPAREN          shift and go to state 95
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    ID              shift and go to state 106
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    factor                         shift and go to state 103
    termino                        shift and go to state 224
    var_cte                        shift and go to state 104
    llamada                        shift and go to state 105

state 202

    (86) termino -> factor pn_multiplication_division DIV pn_push_operator . termino
    (84) termino -> . factor pn_multiplication_division
    (85) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (86) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (87) factor -> . LPAREN expresion RPAREN
    (88) factor -> . PLUS var_cte
    (89) factor -> . PLUS llamada
    (90) factor -> . MINUS var_cte
    (91) factor -> . MINUS llamada
    (92) factor -> . var_cte
    (93) factor -> . llamada
    (94) var_cte -> . ID pn_push_operand_and_type
    (95) var_cte -> . CTE_INT pn_push_constant_and_type
    (96) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (60) llamada -> . ID LPAREN aux_llamada RPAREN SEMICOLON

    LPAREN          shift and go to state 95
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    ID              shift and go to state 106
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    factor                         shift and go to state 103
    termino                        shift and go to state 225
    var_cte                        shift and go to state 104
    llamada                        shift and go to state 105

state 203

    (60) llamada -> ID LPAREN aux_llamada RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 226


state 204

    (62) aux_llamada -> expresion COMMA . aux_llamada
    (61) aux_llamada -> . expresion
    (62) aux_llamada -> . expresion COMMA aux_llamada
    (68) expresion -> . comparacion aux_expresion
    (69) expresion -> . aux_comparacion
    (74) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (75) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (77) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp
    (81) exp -> . termino pn_addition_substraction
    (82) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (83) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (84) termino -> . factor pn_multiplication_division
    (85) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (86) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (87) factor -> . LPAREN expresion RPAREN
    (88) factor -> . PLUS var_cte
    (89) factor -> . PLUS llamada
    (90) factor -> . MINUS var_cte
    (91) factor -> . MINUS llamada
    (92) factor -> . var_cte
    (93) factor -> . llamada
    (94) var_cte -> . ID pn_push_operand_and_type
    (95) var_cte -> . CTE_INT pn_push_constant_and_type
    (96) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (60) llamada -> . ID LPAREN aux_llamada RPAREN SEMICOLON

    LPAREN          shift and go to state 95
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    ID              shift and go to state 106
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    expresion                      shift and go to state 175
    aux_llamada                    shift and go to state 227
    comparacion                    shift and go to state 97
    aux_comparacion                shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 103
    var_cte                        shift and go to state 104
    llamada                        shift and go to state 105

state 205

    (50) aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read .
    (51) aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read . dimensiones
    (52) aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read . COMMA aux_lectura
    (53) aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read . dimensiones COMMA aux_lectura
    (65) dimensiones -> . LSQUARE expresion RSQUARE LSQUARE expresion RSQUARE
    (66) dimensiones -> . LSQUARE expresion COMMA expresion RSQUARE
    (67) dimensiones -> . LSQUARE expresion RSQUARE

    RPAREN          reduce using rule 50 (aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read .)
    COMMA           shift and go to state 229
    LSQUARE         shift and go to state 91

    dimensiones                    shift and go to state 228

state 206

    (58) decision -> IF LPAREN expresion pn_if_1 RPAREN THEN . bloque pn_if_2
    (59) decision -> IF LPAREN expresion pn_if_1 RPAREN THEN . bloque ELSE pn_else bloque pn_if_2
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 48

    bloque                         shift and go to state 230

state 207

    (63) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator . expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (68) expresion -> . comparacion aux_expresion
    (69) expresion -> . aux_comparacion
    (74) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (75) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (77) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp
    (81) exp -> . termino pn_addition_substraction
    (82) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (83) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (84) termino -> . factor pn_multiplication_division
    (85) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (86) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (87) factor -> . LPAREN expresion RPAREN
    (88) factor -> . PLUS var_cte
    (89) factor -> . PLUS llamada
    (90) factor -> . MINUS var_cte
    (91) factor -> . MINUS llamada
    (92) factor -> . var_cte
    (93) factor -> . llamada
    (94) var_cte -> . ID pn_push_operand_and_type
    (95) var_cte -> . CTE_INT pn_push_constant_and_type
    (96) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (60) llamada -> . ID LPAREN aux_llamada RPAREN SEMICOLON

    LPAREN          shift and go to state 95
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    ID              shift and go to state 106
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    expresion                      shift and go to state 231
    comparacion                    shift and go to state 97
    aux_comparacion                shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 103
    var_cte                        shift and go to state 104
    llamada                        shift and go to state 105

state 208

    (64) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion . pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (106) pn_assign -> .

    TO              reduce using rule 106 (pn_assign -> .)

    pn_assign                      shift and go to state 232

state 209

    (46) asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign . SEMICOLON

    SEMICOLON       shift and go to state 233


state 210

    (47) asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON .

    ID              reduce using rule 47 (asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    WHILE           reduce using rule 47 (asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    WRITE           reduce using rule 47 (asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    RETURN          reduce using rule 47 (asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    READ            reduce using rule 47 (asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    IF              reduce using rule 47 (asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    FOR             reduce using rule 47 (asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    RBRACKET        reduce using rule 47 (asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)


state 211

    (65) dimensiones -> LSQUARE expresion RSQUARE LSQUARE expresion . RSQUARE

    RSQUARE         shift and go to state 234


state 212

    (66) dimensiones -> LSQUARE expresion COMMA expresion RSQUARE .

    ASSIGN          reduce using rule 66 (dimensiones -> LSQUARE expresion COMMA expresion RSQUARE .)
    COMMA           reduce using rule 66 (dimensiones -> LSQUARE expresion COMMA expresion RSQUARE .)
    RPAREN          reduce using rule 66 (dimensiones -> LSQUARE expresion COMMA expresion RSQUARE .)


state 213

    (34) condicional -> WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN DO . bloque pn_while_3
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 48

    bloque                         shift and go to state 235

state 214

    (32) aux_escritura -> pn_push_write_operator letrero pn_write COMMA aux_escritura .

    RPAREN          reduce using rule 32 (aux_escritura -> pn_push_write_operator letrero pn_write COMMA aux_escritura .)


state 215

    (33) aux_escritura -> pn_push_write_operator expresion pn_write COMMA aux_escritura .

    RPAREN          reduce using rule 33 (aux_escritura -> pn_push_write_operator expresion pn_write COMMA aux_escritura .)


state 216

    (74) comparacion -> exp LESSTHAN pn_push_operator . exp pn_comparison
    (81) exp -> . termino pn_addition_substraction
    (82) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (83) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (84) termino -> . factor pn_multiplication_division
    (85) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (86) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (87) factor -> . LPAREN expresion RPAREN
    (88) factor -> . PLUS var_cte
    (89) factor -> . PLUS llamada
    (90) factor -> . MINUS var_cte
    (91) factor -> . MINUS llamada
    (92) factor -> . var_cte
    (93) factor -> . llamada
    (94) var_cte -> . ID pn_push_operand_and_type
    (95) var_cte -> . CTE_INT pn_push_constant_and_type
    (96) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (60) llamada -> . ID LPAREN aux_llamada RPAREN SEMICOLON

    LPAREN          shift and go to state 95
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    ID              shift and go to state 106
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    exp                            shift and go to state 236
    termino                        shift and go to state 100
    factor                         shift and go to state 103
    var_cte                        shift and go to state 104
    llamada                        shift and go to state 105

state 217

    (75) comparacion -> exp GREATERTHAN pn_push_operator . exp pn_comparison
    (81) exp -> . termino pn_addition_substraction
    (82) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (83) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (84) termino -> . factor pn_multiplication_division
    (85) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (86) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (87) factor -> . LPAREN expresion RPAREN
    (88) factor -> . PLUS var_cte
    (89) factor -> . PLUS llamada
    (90) factor -> . MINUS var_cte
    (91) factor -> . MINUS llamada
    (92) factor -> . var_cte
    (93) factor -> . llamada
    (94) var_cte -> . ID pn_push_operand_and_type
    (95) var_cte -> . CTE_INT pn_push_constant_and_type
    (96) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (60) llamada -> . ID LPAREN aux_llamada RPAREN SEMICOLON

    LPAREN          shift and go to state 95
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    ID              shift and go to state 106
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    exp                            shift and go to state 237
    termino                        shift and go to state 100
    factor                         shift and go to state 103
    var_cte                        shift and go to state 104
    llamada                        shift and go to state 105

state 218

    (76) comparacion -> exp EQUAL pn_push_operator . exp pn_comparison
    (81) exp -> . termino pn_addition_substraction
    (82) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (83) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (84) termino -> . factor pn_multiplication_division
    (85) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (86) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (87) factor -> . LPAREN expresion RPAREN
    (88) factor -> . PLUS var_cte
    (89) factor -> . PLUS llamada
    (90) factor -> . MINUS var_cte
    (91) factor -> . MINUS llamada
    (92) factor -> . var_cte
    (93) factor -> . llamada
    (94) var_cte -> . ID pn_push_operand_and_type
    (95) var_cte -> . CTE_INT pn_push_constant_and_type
    (96) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (60) llamada -> . ID LPAREN aux_llamada RPAREN SEMICOLON

    LPAREN          shift and go to state 95
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    ID              shift and go to state 106
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    exp                            shift and go to state 238
    termino                        shift and go to state 100
    factor                         shift and go to state 103
    var_cte                        shift and go to state 104
    llamada                        shift and go to state 105

state 219

    (74) comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .
    (77) aux_comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .

    AND             reduce using rule 74 (comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)
    OR              reduce using rule 74 (comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)
    RPAREN          reduce using rule 77 (aux_comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)
    RSQUARE         reduce using rule 77 (aux_comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)
    COMMA           reduce using rule 77 (aux_comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)
    SEMICOLON       reduce using rule 77 (aux_comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)
    TO              reduce using rule 77 (aux_comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)
    DO              reduce using rule 77 (aux_comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)


state 220

    (75) comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .
    (78) aux_comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .

    AND             reduce using rule 75 (comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)
    OR              reduce using rule 75 (comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)
    RPAREN          reduce using rule 78 (aux_comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)
    RSQUARE         reduce using rule 78 (aux_comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)
    COMMA           reduce using rule 78 (aux_comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)
    SEMICOLON       reduce using rule 78 (aux_comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)
    TO              reduce using rule 78 (aux_comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)
    DO              reduce using rule 78 (aux_comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)


state 221

    (76) comparacion -> exp EQUAL pn_push_operator exp pn_comparison .
    (79) aux_comparacion -> exp EQUAL pn_push_operator exp pn_comparison .

    AND             reduce using rule 76 (comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)
    OR              reduce using rule 76 (comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)
    RPAREN          reduce using rule 79 (aux_comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)
    RSQUARE         reduce using rule 79 (aux_comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)
    COMMA           reduce using rule 79 (aux_comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)
    SEMICOLON       reduce using rule 79 (aux_comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)
    TO              reduce using rule 79 (aux_comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)
    DO              reduce using rule 79 (aux_comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)


state 222

    (82) exp -> termino pn_addition_substraction PLUS pn_push_operator exp .

    LESSTHAN        reduce using rule 82 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    GREATERTHAN     reduce using rule 82 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    EQUAL           reduce using rule 82 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    RPAREN          reduce using rule 82 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    RSQUARE         reduce using rule 82 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    COMMA           reduce using rule 82 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    SEMICOLON       reduce using rule 82 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    AND             reduce using rule 82 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    OR              reduce using rule 82 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    TO              reduce using rule 82 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    DO              reduce using rule 82 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)


state 223

    (83) exp -> termino pn_addition_substraction MINUS pn_push_operator exp .

    LESSTHAN        reduce using rule 83 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    GREATERTHAN     reduce using rule 83 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    EQUAL           reduce using rule 83 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    RPAREN          reduce using rule 83 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    RSQUARE         reduce using rule 83 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    COMMA           reduce using rule 83 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    SEMICOLON       reduce using rule 83 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    AND             reduce using rule 83 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    OR              reduce using rule 83 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    TO              reduce using rule 83 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    DO              reduce using rule 83 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)


state 224

    (85) termino -> factor pn_multiplication_division MULT pn_push_operator termino .

    PLUS            reduce using rule 85 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    MINUS           reduce using rule 85 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    LESSTHAN        reduce using rule 85 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    GREATERTHAN     reduce using rule 85 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    EQUAL           reduce using rule 85 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    RPAREN          reduce using rule 85 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    RSQUARE         reduce using rule 85 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    COMMA           reduce using rule 85 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    SEMICOLON       reduce using rule 85 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    AND             reduce using rule 85 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    OR              reduce using rule 85 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    TO              reduce using rule 85 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    DO              reduce using rule 85 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)


state 225

    (86) termino -> factor pn_multiplication_division DIV pn_push_operator termino .

    PLUS            reduce using rule 86 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    MINUS           reduce using rule 86 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    LESSTHAN        reduce using rule 86 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    GREATERTHAN     reduce using rule 86 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    EQUAL           reduce using rule 86 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    RPAREN          reduce using rule 86 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    RSQUARE         reduce using rule 86 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    COMMA           reduce using rule 86 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    SEMICOLON       reduce using rule 86 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    AND             reduce using rule 86 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    OR              reduce using rule 86 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    TO              reduce using rule 86 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    DO              reduce using rule 86 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)


state 226

    (60) llamada -> ID LPAREN aux_llamada RPAREN SEMICOLON .

    MULT            reduce using rule 60 (llamada -> ID LPAREN aux_llamada RPAREN SEMICOLON .)
    DIV             reduce using rule 60 (llamada -> ID LPAREN aux_llamada RPAREN SEMICOLON .)
    PLUS            reduce using rule 60 (llamada -> ID LPAREN aux_llamada RPAREN SEMICOLON .)
    MINUS           reduce using rule 60 (llamada -> ID LPAREN aux_llamada RPAREN SEMICOLON .)
    LESSTHAN        reduce using rule 60 (llamada -> ID LPAREN aux_llamada RPAREN SEMICOLON .)
    GREATERTHAN     reduce using rule 60 (llamada -> ID LPAREN aux_llamada RPAREN SEMICOLON .)
    EQUAL           reduce using rule 60 (llamada -> ID LPAREN aux_llamada RPAREN SEMICOLON .)
    RPAREN          reduce using rule 60 (llamada -> ID LPAREN aux_llamada RPAREN SEMICOLON .)
    RSQUARE         reduce using rule 60 (llamada -> ID LPAREN aux_llamada RPAREN SEMICOLON .)
    COMMA           reduce using rule 60 (llamada -> ID LPAREN aux_llamada RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 60 (llamada -> ID LPAREN aux_llamada RPAREN SEMICOLON .)
    AND             reduce using rule 60 (llamada -> ID LPAREN aux_llamada RPAREN SEMICOLON .)
    OR              reduce using rule 60 (llamada -> ID LPAREN aux_llamada RPAREN SEMICOLON .)
    TO              reduce using rule 60 (llamada -> ID LPAREN aux_llamada RPAREN SEMICOLON .)
    DO              reduce using rule 60 (llamada -> ID LPAREN aux_llamada RPAREN SEMICOLON .)


state 227

    (62) aux_llamada -> expresion COMMA aux_llamada .

    RPAREN          reduce using rule 62 (aux_llamada -> expresion COMMA aux_llamada .)


state 228

    (51) aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones .
    (53) aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones . COMMA aux_lectura

    RPAREN          reduce using rule 51 (aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones .)
    COMMA           shift and go to state 239


state 229

    (52) aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read COMMA . aux_lectura
    (50) aux_lectura -> . pn_push_read_operator ID pn_push_operand_and_type pn_read
    (51) aux_lectura -> . pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones
    (52) aux_lectura -> . pn_push_read_operator ID pn_push_operand_and_type pn_read COMMA aux_lectura
    (53) aux_lectura -> . pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones COMMA aux_lectura
    (107) pn_push_read_operator -> .

    ID              reduce using rule 107 (pn_push_read_operator -> .)

    pn_push_read_operator          shift and go to state 110
    aux_lectura                    shift and go to state 240

state 230

    (58) decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque . pn_if_2
    (59) decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque . ELSE pn_else bloque pn_if_2
    (113) pn_if_2 -> .

    ELSE            shift and go to state 242
    ID              reduce using rule 113 (pn_if_2 -> .)
    WHILE           reduce using rule 113 (pn_if_2 -> .)
    WRITE           reduce using rule 113 (pn_if_2 -> .)
    RETURN          reduce using rule 113 (pn_if_2 -> .)
    READ            reduce using rule 113 (pn_if_2 -> .)
    IF              reduce using rule 113 (pn_if_2 -> .)
    FOR             reduce using rule 113 (pn_if_2 -> .)
    RBRACKET        reduce using rule 113 (pn_if_2 -> .)

    pn_if_2                        shift and go to state 241

state 231

    (63) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion . pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (106) pn_assign -> .

    TO              reduce using rule 106 (pn_assign -> .)

    pn_assign                      shift and go to state 243

state 232

    (64) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign . TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back

    TO              shift and go to state 244


state 233

    (46) asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON .

    ID              reduce using rule 46 (asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    WHILE           reduce using rule 46 (asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    WRITE           reduce using rule 46 (asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    RETURN          reduce using rule 46 (asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    READ            reduce using rule 46 (asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    IF              reduce using rule 46 (asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    FOR             reduce using rule 46 (asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    RBRACKET        reduce using rule 46 (asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)


state 234

    (65) dimensiones -> LSQUARE expresion RSQUARE LSQUARE expresion RSQUARE .

    ASSIGN          reduce using rule 65 (dimensiones -> LSQUARE expresion RSQUARE LSQUARE expresion RSQUARE .)
    COMMA           reduce using rule 65 (dimensiones -> LSQUARE expresion RSQUARE LSQUARE expresion RSQUARE .)
    RPAREN          reduce using rule 65 (dimensiones -> LSQUARE expresion RSQUARE LSQUARE expresion RSQUARE .)


state 235

    (34) condicional -> WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN DO bloque . pn_while_3
    (117) pn_while_3 -> .

    ID              reduce using rule 117 (pn_while_3 -> .)
    WHILE           reduce using rule 117 (pn_while_3 -> .)
    WRITE           reduce using rule 117 (pn_while_3 -> .)
    RETURN          reduce using rule 117 (pn_while_3 -> .)
    READ            reduce using rule 117 (pn_while_3 -> .)
    IF              reduce using rule 117 (pn_while_3 -> .)
    FOR             reduce using rule 117 (pn_while_3 -> .)
    RBRACKET        reduce using rule 117 (pn_while_3 -> .)

    pn_while_3                     shift and go to state 245

state 236

    (74) comparacion -> exp LESSTHAN pn_push_operator exp . pn_comparison
    (111) pn_comparison -> .

    AND             reduce using rule 111 (pn_comparison -> .)
    OR              reduce using rule 111 (pn_comparison -> .)
    RPAREN          reduce using rule 111 (pn_comparison -> .)
    RSQUARE         reduce using rule 111 (pn_comparison -> .)
    COMMA           reduce using rule 111 (pn_comparison -> .)
    SEMICOLON       reduce using rule 111 (pn_comparison -> .)
    TO              reduce using rule 111 (pn_comparison -> .)
    DO              reduce using rule 111 (pn_comparison -> .)

    pn_comparison                  shift and go to state 246

state 237

    (75) comparacion -> exp GREATERTHAN pn_push_operator exp . pn_comparison
    (111) pn_comparison -> .

    AND             reduce using rule 111 (pn_comparison -> .)
    OR              reduce using rule 111 (pn_comparison -> .)
    RPAREN          reduce using rule 111 (pn_comparison -> .)
    RSQUARE         reduce using rule 111 (pn_comparison -> .)
    COMMA           reduce using rule 111 (pn_comparison -> .)
    SEMICOLON       reduce using rule 111 (pn_comparison -> .)
    TO              reduce using rule 111 (pn_comparison -> .)
    DO              reduce using rule 111 (pn_comparison -> .)

    pn_comparison                  shift and go to state 247

state 238

    (76) comparacion -> exp EQUAL pn_push_operator exp . pn_comparison
    (111) pn_comparison -> .

    AND             reduce using rule 111 (pn_comparison -> .)
    OR              reduce using rule 111 (pn_comparison -> .)
    RPAREN          reduce using rule 111 (pn_comparison -> .)
    RSQUARE         reduce using rule 111 (pn_comparison -> .)
    COMMA           reduce using rule 111 (pn_comparison -> .)
    SEMICOLON       reduce using rule 111 (pn_comparison -> .)
    TO              reduce using rule 111 (pn_comparison -> .)
    DO              reduce using rule 111 (pn_comparison -> .)

    pn_comparison                  shift and go to state 248

state 239

    (53) aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones COMMA . aux_lectura
    (50) aux_lectura -> . pn_push_read_operator ID pn_push_operand_and_type pn_read
    (51) aux_lectura -> . pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones
    (52) aux_lectura -> . pn_push_read_operator ID pn_push_operand_and_type pn_read COMMA aux_lectura
    (53) aux_lectura -> . pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones COMMA aux_lectura
    (107) pn_push_read_operator -> .

    ID              reduce using rule 107 (pn_push_read_operator -> .)

    pn_push_read_operator          shift and go to state 110
    aux_lectura                    shift and go to state 249

state 240

    (52) aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read COMMA aux_lectura .

    RPAREN          reduce using rule 52 (aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read COMMA aux_lectura .)


state 241

    (58) decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque pn_if_2 .

    ID              reduce using rule 58 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque pn_if_2 .)
    WHILE           reduce using rule 58 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque pn_if_2 .)
    WRITE           reduce using rule 58 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque pn_if_2 .)
    RETURN          reduce using rule 58 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque pn_if_2 .)
    READ            reduce using rule 58 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque pn_if_2 .)
    IF              reduce using rule 58 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque pn_if_2 .)
    FOR             reduce using rule 58 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque pn_if_2 .)
    RBRACKET        reduce using rule 58 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque pn_if_2 .)


state 242

    (59) decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE . pn_else bloque pn_if_2
    (114) pn_else -> .

    LBRACKET        reduce using rule 114 (pn_else -> .)

    pn_else                        shift and go to state 250

state 243

    (63) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign . TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back

    TO              shift and go to state 251


state 244

    (64) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO . expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (68) expresion -> . comparacion aux_expresion
    (69) expresion -> . aux_comparacion
    (74) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (75) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (77) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp
    (81) exp -> . termino pn_addition_substraction
    (82) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (83) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (84) termino -> . factor pn_multiplication_division
    (85) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (86) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (87) factor -> . LPAREN expresion RPAREN
    (88) factor -> . PLUS var_cte
    (89) factor -> . PLUS llamada
    (90) factor -> . MINUS var_cte
    (91) factor -> . MINUS llamada
    (92) factor -> . var_cte
    (93) factor -> . llamada
    (94) var_cte -> . ID pn_push_operand_and_type
    (95) var_cte -> . CTE_INT pn_push_constant_and_type
    (96) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (60) llamada -> . ID LPAREN aux_llamada RPAREN SEMICOLON

    LPAREN          shift and go to state 95
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    ID              shift and go to state 106
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    expresion                      shift and go to state 252
    comparacion                    shift and go to state 97
    aux_comparacion                shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 103
    var_cte                        shift and go to state 104
    llamada                        shift and go to state 105

state 245

    (34) condicional -> WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN DO bloque pn_while_3 .

    ID              reduce using rule 34 (condicional -> WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN DO bloque pn_while_3 .)
    WHILE           reduce using rule 34 (condicional -> WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN DO bloque pn_while_3 .)
    WRITE           reduce using rule 34 (condicional -> WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN DO bloque pn_while_3 .)
    RETURN          reduce using rule 34 (condicional -> WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN DO bloque pn_while_3 .)
    READ            reduce using rule 34 (condicional -> WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN DO bloque pn_while_3 .)
    IF              reduce using rule 34 (condicional -> WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN DO bloque pn_while_3 .)
    FOR             reduce using rule 34 (condicional -> WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN DO bloque pn_while_3 .)
    RBRACKET        reduce using rule 34 (condicional -> WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN DO bloque pn_while_3 .)


state 246

    (74) comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .

    AND             reduce using rule 74 (comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)
    OR              reduce using rule 74 (comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)
    RPAREN          reduce using rule 74 (comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)
    RSQUARE         reduce using rule 74 (comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)
    COMMA           reduce using rule 74 (comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)
    SEMICOLON       reduce using rule 74 (comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)
    TO              reduce using rule 74 (comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)
    DO              reduce using rule 74 (comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)


state 247

    (75) comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .

    AND             reduce using rule 75 (comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)
    OR              reduce using rule 75 (comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)
    RPAREN          reduce using rule 75 (comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)
    RSQUARE         reduce using rule 75 (comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)
    COMMA           reduce using rule 75 (comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)
    SEMICOLON       reduce using rule 75 (comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)
    TO              reduce using rule 75 (comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)
    DO              reduce using rule 75 (comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)


state 248

    (76) comparacion -> exp EQUAL pn_push_operator exp pn_comparison .

    AND             reduce using rule 76 (comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)
    OR              reduce using rule 76 (comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)
    RPAREN          reduce using rule 76 (comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)
    RSQUARE         reduce using rule 76 (comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)
    COMMA           reduce using rule 76 (comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)
    SEMICOLON       reduce using rule 76 (comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)
    TO              reduce using rule 76 (comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)
    DO              reduce using rule 76 (comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)


state 249

    (53) aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones COMMA aux_lectura .

    RPAREN          reduce using rule 53 (aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones COMMA aux_lectura .)


state 250

    (59) decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else . bloque pn_if_2
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 48

    bloque                         shift and go to state 253

state 251

    (63) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO . expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (68) expresion -> . comparacion aux_expresion
    (69) expresion -> . aux_comparacion
    (74) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (75) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (77) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp
    (81) exp -> . termino pn_addition_substraction
    (82) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (83) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (84) termino -> . factor pn_multiplication_division
    (85) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (86) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (87) factor -> . LPAREN expresion RPAREN
    (88) factor -> . PLUS var_cte
    (89) factor -> . PLUS llamada
    (90) factor -> . MINUS var_cte
    (91) factor -> . MINUS llamada
    (92) factor -> . var_cte
    (93) factor -> . llamada
    (94) var_cte -> . ID pn_push_operand_and_type
    (95) var_cte -> . CTE_INT pn_push_constant_and_type
    (96) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (60) llamada -> . ID LPAREN aux_llamada RPAREN SEMICOLON

    LPAREN          shift and go to state 95
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    ID              shift and go to state 106
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    expresion                      shift and go to state 254
    comparacion                    shift and go to state 97
    aux_comparacion                shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 103
    var_cte                        shift and go to state 104
    llamada                        shift and go to state 105

state 252

    (64) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion . pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (118) pn_for_push_comparison -> .

    DO              reduce using rule 118 (pn_for_push_comparison -> .)

    pn_for_push_comparison         shift and go to state 255

state 253

    (59) decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque . pn_if_2
    (113) pn_if_2 -> .

    ID              reduce using rule 113 (pn_if_2 -> .)
    WHILE           reduce using rule 113 (pn_if_2 -> .)
    WRITE           reduce using rule 113 (pn_if_2 -> .)
    RETURN          reduce using rule 113 (pn_if_2 -> .)
    READ            reduce using rule 113 (pn_if_2 -> .)
    IF              reduce using rule 113 (pn_if_2 -> .)
    FOR             reduce using rule 113 (pn_if_2 -> .)
    RBRACKET        reduce using rule 113 (pn_if_2 -> .)

    pn_if_2                        shift and go to state 256

state 254

    (63) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion . pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (118) pn_for_push_comparison -> .

    DO              reduce using rule 118 (pn_for_push_comparison -> .)

    pn_for_push_comparison         shift and go to state 257

state 255

    (64) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison . pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (111) pn_comparison -> .

    DO              reduce using rule 111 (pn_comparison -> .)

    pn_comparison                  shift and go to state 258

state 256

    (59) decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2 .

    ID              reduce using rule 59 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2 .)
    WHILE           reduce using rule 59 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2 .)
    WRITE           reduce using rule 59 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2 .)
    RETURN          reduce using rule 59 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2 .)
    READ            reduce using rule 59 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2 .)
    IF              reduce using rule 59 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2 .)
    FOR             reduce using rule 59 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2 .)
    RBRACKET        reduce using rule 59 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2 .)


state 257

    (63) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison . pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (111) pn_comparison -> .

    DO              reduce using rule 111 (pn_comparison -> .)

    pn_comparison                  shift and go to state 259

state 258

    (64) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison . pn_for_go_false DO bloque pn_for_go_back
    (119) pn_for_go_false -> .

    DO              reduce using rule 119 (pn_for_go_false -> .)

    pn_for_go_false                shift and go to state 260

state 259

    (63) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison . pn_for_go_false DO bloque pn_for_go_back
    (119) pn_for_go_false -> .

    DO              reduce using rule 119 (pn_for_go_false -> .)

    pn_for_go_false                shift and go to state 261

state 260

    (64) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false . DO bloque pn_for_go_back

    DO              shift and go to state 262


state 261

    (63) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false . DO bloque pn_for_go_back

    DO              shift and go to state 263


state 262

    (64) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO . bloque pn_for_go_back
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 48

    bloque                         shift and go to state 264

state 263

    (63) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO . bloque pn_for_go_back
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 48

    bloque                         shift and go to state 265

state 264

    (64) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque . pn_for_go_back
    (120) pn_for_go_back -> .

    ID              reduce using rule 120 (pn_for_go_back -> .)
    WHILE           reduce using rule 120 (pn_for_go_back -> .)
    WRITE           reduce using rule 120 (pn_for_go_back -> .)
    RETURN          reduce using rule 120 (pn_for_go_back -> .)
    READ            reduce using rule 120 (pn_for_go_back -> .)
    IF              reduce using rule 120 (pn_for_go_back -> .)
    FOR             reduce using rule 120 (pn_for_go_back -> .)
    RBRACKET        reduce using rule 120 (pn_for_go_back -> .)

    pn_for_go_back                 shift and go to state 266

state 265

    (63) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque . pn_for_go_back
    (120) pn_for_go_back -> .

    ID              reduce using rule 120 (pn_for_go_back -> .)
    WHILE           reduce using rule 120 (pn_for_go_back -> .)
    WRITE           reduce using rule 120 (pn_for_go_back -> .)
    RETURN          reduce using rule 120 (pn_for_go_back -> .)
    READ            reduce using rule 120 (pn_for_go_back -> .)
    IF              reduce using rule 120 (pn_for_go_back -> .)
    FOR             reduce using rule 120 (pn_for_go_back -> .)
    RBRACKET        reduce using rule 120 (pn_for_go_back -> .)

    pn_for_go_back                 shift and go to state 267

state 266

    (64) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .

    ID              reduce using rule 64 (no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)
    WHILE           reduce using rule 64 (no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)
    WRITE           reduce using rule 64 (no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)
    RETURN          reduce using rule 64 (no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)
    READ            reduce using rule 64 (no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)
    IF              reduce using rule 64 (no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)
    FOR             reduce using rule 64 (no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)
    RBRACKET        reduce using rule 64 (no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)


state 267

    (63) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .

    ID              reduce using rule 63 (no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)
    WHILE           reduce using rule 63 (no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)
    WRITE           reduce using rule 63 (no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)
    RETURN          reduce using rule 63 (no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)
    READ            reduce using rule 63 (no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)
    IF              reduce using rule 63 (no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)
    FOR             reduce using rule 63 (no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)
    RBRACKET        reduce using rule 63 (no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT in state 43 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 43 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 43 resolved as shift
