Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON vars aux_funcion pn_go_main main pn_program_end
Rule 2     program -> PROGRAM ID SEMICOLON vars pn_go_main main pn_program_end
Rule 3     program -> PROGRAM ID SEMICOLON aux_funcion pn_go_main main pn_program_end
Rule 4     program -> PROGRAM ID SEMICOLON pn_go_main main pn_program_end
Rule 5     main -> MAIN pn_current_function LPAREN RPAREN vars bloque
Rule 6     main -> MAIN pn_current_function LPAREN RPAREN bloque
Rule 7     aux_funcion -> funcion
Rule 8     aux_funcion -> funcion aux_funcion
Rule 9     funcion -> tipo_retorno MODULE ID pn_add_function LPAREN parametros RPAREN vars bloque
Rule 10    funcion -> tipo_retorno MODULE ID pn_add_function LPAREN parametros RPAREN bloque
Rule 11    funcion -> tipo_retorno MODULE ID pn_add_function LPAREN RPAREN vars bloque
Rule 12    funcion -> tipo_retorno MODULE ID pn_add_function LPAREN RPAREN bloque
Rule 13    vars -> VAR var
Rule 14    var -> tipo COLON lista_ids SEMICOLON
Rule 15    var -> tipo COLON lista_ids SEMICOLON var
Rule 16    tipo_retorno -> tipo
Rule 17    tipo_retorno -> VOID pn_current_type
Rule 18    tipo -> INT pn_current_type
Rule 19    tipo -> FLOAT pn_current_type
Rule 20    tipo -> CHAR pn_current_type
Rule 21    parametros -> tipo ID pn_add_parameter
Rule 22    parametros -> tipo ID pn_add_parameter COMMA parametros
Rule 23    lista_ids -> aux_lista_rec
Rule 24    aux_lista_rec -> aux_lista
Rule 25    aux_lista_rec -> aux_lista COMMA aux_lista_rec
Rule 26    aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE
Rule 27    aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE
Rule 28    aux_lista -> ID pn_add_symbol
Rule 29    escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON
Rule 30    aux_escritura -> pn_push_write_operator letrero pn_write
Rule 31    aux_escritura -> pn_push_write_operator expresion pn_write
Rule 32    aux_escritura -> pn_push_write_operator letrero pn_write COMMA aux_escritura
Rule 33    aux_escritura -> pn_push_write_operator expresion pn_write COMMA aux_escritura
Rule 34    condicional -> WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN DO bloque pn_while_3
Rule 35    bloque -> LBRACKET estatutos RBRACKET
Rule 36    bloque -> LBRACKET RBRACKET
Rule 37    estatutos -> estatuto estatutos
Rule 38    estatutos -> estatuto
Rule 39    estatuto -> asignacion
Rule 40    estatuto -> condicional
Rule 41    estatuto -> escritura
Rule 42    estatuto -> retorno
Rule 43    estatuto -> lectura
Rule 44    estatuto -> decision
Rule 45    estatuto -> no_condicional
Rule 46    estatuto -> llamada SEMICOLON
Rule 47    asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON
Rule 48    asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON
Rule 49    retorno -> RETURN pn_push_operator LPAREN expresion pn_retorno RPAREN SEMICOLON
Rule 50    lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON
Rule 51    aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read
Rule 52    aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones
Rule 53    aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read COMMA aux_lectura
Rule 54    aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones COMMA aux_lectura
Rule 55    letrero -> QUOTATION aux_letrero QUOTATION
Rule 56    letrero -> QUOTATION QUOTATION
Rule 57    aux_letrero -> CTE_CHAR
Rule 58    aux_letrero -> CTE_CHAR aux_letrero
Rule 59    decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque pn_if_2
Rule 60    decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2
Rule 61    llamada -> ID LPAREN aux_llamada RPAREN
Rule 62    aux_llamada -> expresion
Rule 63    aux_llamada -> expresion COMMA aux_llamada
Rule 64    no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
Rule 65    no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
Rule 66    dimensiones -> LSQUARE expresion RSQUARE LSQUARE expresion RSQUARE
Rule 67    dimensiones -> LSQUARE expresion COMMA expresion RSQUARE
Rule 68    dimensiones -> LSQUARE expresion RSQUARE
Rule 69    expresion -> comparacion aux_expresion
Rule 70    expresion -> aux_comparacion
Rule 71    aux_expresion -> AND pn_push_operator comparacion pn_and
Rule 72    aux_expresion -> OR pn_push_operator comparacion pn_or
Rule 73    aux_expresion -> AND pn_push_operator comparacion pn_and aux_expresion
Rule 74    aux_expresion -> OR pn_push_operator comparacion pn_or aux_expresion
Rule 75    comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison
Rule 76    comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison
Rule 77    comparacion -> exp EQUAL pn_push_operator exp pn_comparison
Rule 78    aux_comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison
Rule 79    aux_comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison
Rule 80    aux_comparacion -> exp EQUAL pn_push_operator exp pn_comparison
Rule 81    aux_comparacion -> exp
Rule 82    exp -> termino pn_addition_substraction
Rule 83    exp -> termino pn_addition_substraction PLUS pn_push_operator exp
Rule 84    exp -> termino pn_addition_substraction MINUS pn_push_operator exp
Rule 85    termino -> factor pn_multiplication_division
Rule 86    termino -> factor pn_multiplication_division MULT pn_push_operator termino
Rule 87    termino -> factor pn_multiplication_division DIV pn_push_operator termino
Rule 88    factor -> LPAREN expresion RPAREN
Rule 89    factor -> PLUS var_cte
Rule 90    factor -> PLUS llamada
Rule 91    factor -> MINUS var_cte
Rule 92    factor -> MINUS llamada
Rule 93    factor -> var_cte
Rule 94    factor -> llamada
Rule 95    var_cte -> ID pn_push_operand_and_type
Rule 96    var_cte -> CTE_INT pn_push_constant_and_type
Rule 97    var_cte -> CTE_FLOAT pn_push_constant_and_type
Rule 98    pn_current_function -> <empty>
Rule 99    pn_current_type -> <empty>
Rule 100   pn_go_main -> <empty>
Rule 101   pn_program_end -> <empty>
Rule 102   pn_add_symbol -> <empty>
Rule 103   pn_push_constant_and_type -> <empty>
Rule 104   pn_push_operand_and_type -> <empty>
Rule 105   pn_push_operator -> <empty>
Rule 106   pn_addition_substraction -> <empty>
Rule 107   pn_multiplication_division -> <empty>
Rule 108   pn_assign -> <empty>
Rule 109   pn_push_read_operator -> <empty>
Rule 110   pn_read -> <empty>
Rule 111   pn_push_write_operator -> <empty>
Rule 112   pn_write -> <empty>
Rule 113   pn_and -> <empty>
Rule 114   pn_or -> <empty>
Rule 115   pn_comparison -> <empty>
Rule 116   pn_if_1 -> <empty>
Rule 117   pn_if_2 -> <empty>
Rule 118   pn_else -> <empty>
Rule 119   pn_while_1 -> <empty>
Rule 120   pn_while_2 -> <empty>
Rule 121   pn_while_3 -> <empty>
Rule 122   pn_for_push_comparison -> <empty>
Rule 123   pn_for_go_false -> <empty>
Rule 124   pn_for_go_back -> <empty>
Rule 125   pn_add_function -> <empty>
Rule 126   pn_add_parameter -> <empty>
Rule 127   pn_retorno -> <empty>

Terminals, with rules where they appear

AND                  : 71 73
ASSIGN               : 47 48 64 65
CHAR                 : 20
COLON                : 14 15
COMMA                : 22 25 32 33 53 54 63 67
CTE_CHAR             : 57 58
CTE_FLOAT            : 97
CTE_INT              : 26 26 27 96
DIV                  : 87
DO                   : 34 64 65
ELSE                 : 60
EQUAL                : 77 80
FLOAT                : 19
FOR                  : 64 65
GREATERTHAN          : 76 79
ID                   : 1 2 3 4 9 10 11 12 21 22 26 27 28 47 48 51 52 53 54 61 64 65 95
IF                   : 59 60
INT                  : 18
LBRACKET             : 35 36
LESSTHAN             : 75 78
LPAREN               : 5 6 9 10 11 12 29 34 49 50 59 60 61 88
LSQUARE              : 26 26 27 66 66 67 68
MAIN                 : 5 6
MINUS                : 84 91 92
MODULE               : 9 10 11 12
MULT                 : 86
OR                   : 72 74
PLUS                 : 83 89 90
PROGRAM              : 1 2 3 4
QUOTATION            : 55 55 56 56
RBRACKET             : 35 36
READ                 : 50
RETURN               : 49
RPAREN               : 5 6 9 10 11 12 29 34 49 50 59 60 61 88
RSQUARE              : 26 26 27 66 66 67 68
SEMICOLON            : 1 2 3 4 14 15 29 46 47 48 49 50
THEN                 : 59 60
TO                   : 64 65
VAR                  : 13
VOID                 : 17
WHILE                : 34
WRITE                : 29
error                : 

Nonterminals, with rules where they appear

asignacion           : 39
aux_comparacion      : 70
aux_escritura        : 29 32 33
aux_expresion        : 69 73 74
aux_funcion          : 1 3 8
aux_lectura          : 50 53 54
aux_letrero          : 55 58
aux_lista            : 24 25
aux_lista_rec        : 23 25
aux_llamada          : 61 63
bloque               : 5 6 9 10 11 12 34 59 60 60 64 65
comparacion          : 69 71 72 73 74
condicional          : 40
decision             : 44
dimensiones          : 47 52 54 64
escritura            : 41
estatuto             : 37 38
estatutos            : 35 37
exp                  : 75 75 76 76 77 77 78 78 79 79 80 80 81 83 84
expresion            : 31 33 34 47 48 49 59 60 62 63 64 64 65 65 66 66 67 67 68 88
factor               : 85 86 87
funcion              : 7 8
lectura              : 43
letrero              : 30 32
lista_ids            : 14 15
llamada              : 46 90 92 94
main                 : 1 2 3 4
no_condicional       : 45
parametros           : 9 10 22
pn_add_function      : 9 10 11 12
pn_add_parameter     : 21 22
pn_add_symbol        : 26 27 28
pn_addition_substraction : 82 83 84
pn_and               : 71 73
pn_assign            : 47 48 64 65
pn_comparison        : 64 65 75 76 77 78 79 80
pn_current_function  : 5 6
pn_current_type      : 17 18 19 20
pn_else              : 60
pn_for_go_back       : 64 65
pn_for_go_false      : 64 65
pn_for_push_comparison : 64 65
pn_go_main           : 1 2 3 4
pn_if_1              : 59 60
pn_if_2              : 59 60
pn_multiplication_division : 85 86 87
pn_or                : 72 74
pn_program_end       : 1 2 3 4
pn_push_constant_and_type : 96 97
pn_push_operand_and_type : 47 48 51 52 53 54 64 65 95
pn_push_operator     : 47 48 49 64 65 71 72 73 74 75 76 77 78 79 80 83 84 86 87
pn_push_read_operator : 51 52 53 54
pn_push_write_operator : 30 31 32 33
pn_read              : 51 52 53 54
pn_retorno           : 49
pn_while_1           : 34
pn_while_2           : 34
pn_while_3           : 34
pn_write             : 30 31 32 33
program              : 0
retorno              : 42
termino              : 82 83 84 86 87
tipo                 : 14 15 16 21 22
tipo_retorno         : 9 10 11 12
var                  : 13 15
var_cte              : 89 91 93
vars                 : 1 2 5 9 11

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON vars aux_funcion pn_go_main main pn_program_end
    (2) program -> . PROGRAM ID SEMICOLON vars pn_go_main main pn_program_end
    (3) program -> . PROGRAM ID SEMICOLON aux_funcion pn_go_main main pn_program_end
    (4) program -> . PROGRAM ID SEMICOLON pn_go_main main pn_program_end

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON vars aux_funcion pn_go_main main pn_program_end
    (2) program -> PROGRAM . ID SEMICOLON vars pn_go_main main pn_program_end
    (3) program -> PROGRAM . ID SEMICOLON aux_funcion pn_go_main main pn_program_end
    (4) program -> PROGRAM . ID SEMICOLON pn_go_main main pn_program_end

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON vars aux_funcion pn_go_main main pn_program_end
    (2) program -> PROGRAM ID . SEMICOLON vars pn_go_main main pn_program_end
    (3) program -> PROGRAM ID . SEMICOLON aux_funcion pn_go_main main pn_program_end
    (4) program -> PROGRAM ID . SEMICOLON pn_go_main main pn_program_end

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . vars aux_funcion pn_go_main main pn_program_end
    (2) program -> PROGRAM ID SEMICOLON . vars pn_go_main main pn_program_end
    (3) program -> PROGRAM ID SEMICOLON . aux_funcion pn_go_main main pn_program_end
    (4) program -> PROGRAM ID SEMICOLON . pn_go_main main pn_program_end
    (13) vars -> . VAR var
    (7) aux_funcion -> . funcion
    (8) aux_funcion -> . funcion aux_funcion
    (100) pn_go_main -> .
    (9) funcion -> . tipo_retorno MODULE ID pn_add_function LPAREN parametros RPAREN vars bloque
    (10) funcion -> . tipo_retorno MODULE ID pn_add_function LPAREN parametros RPAREN bloque
    (11) funcion -> . tipo_retorno MODULE ID pn_add_function LPAREN RPAREN vars bloque
    (12) funcion -> . tipo_retorno MODULE ID pn_add_function LPAREN RPAREN bloque
    (16) tipo_retorno -> . tipo
    (17) tipo_retorno -> . VOID pn_current_type
    (18) tipo -> . INT pn_current_type
    (19) tipo -> . FLOAT pn_current_type
    (20) tipo -> . CHAR pn_current_type

    VAR             shift and go to state 8
    MAIN            reduce using rule 100 (pn_go_main -> .)
    VOID            shift and go to state 12
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    vars                           shift and go to state 5
    aux_funcion                    shift and go to state 6
    pn_go_main                     shift and go to state 7
    funcion                        shift and go to state 9
    tipo_retorno                   shift and go to state 10
    tipo                           shift and go to state 11

state 5

    (1) program -> PROGRAM ID SEMICOLON vars . aux_funcion pn_go_main main pn_program_end
    (2) program -> PROGRAM ID SEMICOLON vars . pn_go_main main pn_program_end
    (7) aux_funcion -> . funcion
    (8) aux_funcion -> . funcion aux_funcion
    (100) pn_go_main -> .
    (9) funcion -> . tipo_retorno MODULE ID pn_add_function LPAREN parametros RPAREN vars bloque
    (10) funcion -> . tipo_retorno MODULE ID pn_add_function LPAREN parametros RPAREN bloque
    (11) funcion -> . tipo_retorno MODULE ID pn_add_function LPAREN RPAREN vars bloque
    (12) funcion -> . tipo_retorno MODULE ID pn_add_function LPAREN RPAREN bloque
    (16) tipo_retorno -> . tipo
    (17) tipo_retorno -> . VOID pn_current_type
    (18) tipo -> . INT pn_current_type
    (19) tipo -> . FLOAT pn_current_type
    (20) tipo -> . CHAR pn_current_type

    MAIN            reduce using rule 100 (pn_go_main -> .)
    VOID            shift and go to state 12
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    aux_funcion                    shift and go to state 16
    pn_go_main                     shift and go to state 17
    funcion                        shift and go to state 9
    tipo_retorno                   shift and go to state 10
    tipo                           shift and go to state 11

state 6

    (3) program -> PROGRAM ID SEMICOLON aux_funcion . pn_go_main main pn_program_end
    (100) pn_go_main -> .

    MAIN            reduce using rule 100 (pn_go_main -> .)

    pn_go_main                     shift and go to state 18

state 7

    (4) program -> PROGRAM ID SEMICOLON pn_go_main . main pn_program_end
    (5) main -> . MAIN pn_current_function LPAREN RPAREN vars bloque
    (6) main -> . MAIN pn_current_function LPAREN RPAREN bloque

    MAIN            shift and go to state 20

    main                           shift and go to state 19

state 8

    (13) vars -> VAR . var
    (14) var -> . tipo COLON lista_ids SEMICOLON
    (15) var -> . tipo COLON lista_ids SEMICOLON var
    (18) tipo -> . INT pn_current_type
    (19) tipo -> . FLOAT pn_current_type
    (20) tipo -> . CHAR pn_current_type

    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    var                            shift and go to state 21
    tipo                           shift and go to state 22

state 9

    (7) aux_funcion -> funcion .
    (8) aux_funcion -> funcion . aux_funcion
    (7) aux_funcion -> . funcion
    (8) aux_funcion -> . funcion aux_funcion
    (9) funcion -> . tipo_retorno MODULE ID pn_add_function LPAREN parametros RPAREN vars bloque
    (10) funcion -> . tipo_retorno MODULE ID pn_add_function LPAREN parametros RPAREN bloque
    (11) funcion -> . tipo_retorno MODULE ID pn_add_function LPAREN RPAREN vars bloque
    (12) funcion -> . tipo_retorno MODULE ID pn_add_function LPAREN RPAREN bloque
    (16) tipo_retorno -> . tipo
    (17) tipo_retorno -> . VOID pn_current_type
    (18) tipo -> . INT pn_current_type
    (19) tipo -> . FLOAT pn_current_type
    (20) tipo -> . CHAR pn_current_type

    MAIN            reduce using rule 7 (aux_funcion -> funcion .)
    VOID            shift and go to state 12
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    funcion                        shift and go to state 9
    aux_funcion                    shift and go to state 23
    tipo_retorno                   shift and go to state 10
    tipo                           shift and go to state 11

state 10

    (9) funcion -> tipo_retorno . MODULE ID pn_add_function LPAREN parametros RPAREN vars bloque
    (10) funcion -> tipo_retorno . MODULE ID pn_add_function LPAREN parametros RPAREN bloque
    (11) funcion -> tipo_retorno . MODULE ID pn_add_function LPAREN RPAREN vars bloque
    (12) funcion -> tipo_retorno . MODULE ID pn_add_function LPAREN RPAREN bloque

    MODULE          shift and go to state 24


state 11

    (16) tipo_retorno -> tipo .

    MODULE          reduce using rule 16 (tipo_retorno -> tipo .)


state 12

    (17) tipo_retorno -> VOID . pn_current_type
    (99) pn_current_type -> .

    MODULE          reduce using rule 99 (pn_current_type -> .)

    pn_current_type                shift and go to state 25

state 13

    (18) tipo -> INT . pn_current_type
    (99) pn_current_type -> .

    MODULE          reduce using rule 99 (pn_current_type -> .)
    COLON           reduce using rule 99 (pn_current_type -> .)
    ID              reduce using rule 99 (pn_current_type -> .)

    pn_current_type                shift and go to state 26

state 14

    (19) tipo -> FLOAT . pn_current_type
    (99) pn_current_type -> .

    MODULE          reduce using rule 99 (pn_current_type -> .)
    COLON           reduce using rule 99 (pn_current_type -> .)
    ID              reduce using rule 99 (pn_current_type -> .)

    pn_current_type                shift and go to state 27

state 15

    (20) tipo -> CHAR . pn_current_type
    (99) pn_current_type -> .

    MODULE          reduce using rule 99 (pn_current_type -> .)
    COLON           reduce using rule 99 (pn_current_type -> .)
    ID              reduce using rule 99 (pn_current_type -> .)

    pn_current_type                shift and go to state 28

state 16

    (1) program -> PROGRAM ID SEMICOLON vars aux_funcion . pn_go_main main pn_program_end
    (100) pn_go_main -> .

    MAIN            reduce using rule 100 (pn_go_main -> .)

    pn_go_main                     shift and go to state 29

state 17

    (2) program -> PROGRAM ID SEMICOLON vars pn_go_main . main pn_program_end
    (5) main -> . MAIN pn_current_function LPAREN RPAREN vars bloque
    (6) main -> . MAIN pn_current_function LPAREN RPAREN bloque

    MAIN            shift and go to state 20

    main                           shift and go to state 30

state 18

    (3) program -> PROGRAM ID SEMICOLON aux_funcion pn_go_main . main pn_program_end
    (5) main -> . MAIN pn_current_function LPAREN RPAREN vars bloque
    (6) main -> . MAIN pn_current_function LPAREN RPAREN bloque

    MAIN            shift and go to state 20

    main                           shift and go to state 31

state 19

    (4) program -> PROGRAM ID SEMICOLON pn_go_main main . pn_program_end
    (101) pn_program_end -> .

    $end            reduce using rule 101 (pn_program_end -> .)

    pn_program_end                 shift and go to state 32

state 20

    (5) main -> MAIN . pn_current_function LPAREN RPAREN vars bloque
    (6) main -> MAIN . pn_current_function LPAREN RPAREN bloque
    (98) pn_current_function -> .

    LPAREN          reduce using rule 98 (pn_current_function -> .)

    pn_current_function            shift and go to state 33

state 21

    (13) vars -> VAR var .

    VOID            reduce using rule 13 (vars -> VAR var .)
    INT             reduce using rule 13 (vars -> VAR var .)
    FLOAT           reduce using rule 13 (vars -> VAR var .)
    CHAR            reduce using rule 13 (vars -> VAR var .)
    MAIN            reduce using rule 13 (vars -> VAR var .)
    LBRACKET        reduce using rule 13 (vars -> VAR var .)


state 22

    (14) var -> tipo . COLON lista_ids SEMICOLON
    (15) var -> tipo . COLON lista_ids SEMICOLON var

    COLON           shift and go to state 34


state 23

    (8) aux_funcion -> funcion aux_funcion .

    MAIN            reduce using rule 8 (aux_funcion -> funcion aux_funcion .)


state 24

    (9) funcion -> tipo_retorno MODULE . ID pn_add_function LPAREN parametros RPAREN vars bloque
    (10) funcion -> tipo_retorno MODULE . ID pn_add_function LPAREN parametros RPAREN bloque
    (11) funcion -> tipo_retorno MODULE . ID pn_add_function LPAREN RPAREN vars bloque
    (12) funcion -> tipo_retorno MODULE . ID pn_add_function LPAREN RPAREN bloque

    ID              shift and go to state 35


state 25

    (17) tipo_retorno -> VOID pn_current_type .

    MODULE          reduce using rule 17 (tipo_retorno -> VOID pn_current_type .)


state 26

    (18) tipo -> INT pn_current_type .

    MODULE          reduce using rule 18 (tipo -> INT pn_current_type .)
    COLON           reduce using rule 18 (tipo -> INT pn_current_type .)
    ID              reduce using rule 18 (tipo -> INT pn_current_type .)


state 27

    (19) tipo -> FLOAT pn_current_type .

    MODULE          reduce using rule 19 (tipo -> FLOAT pn_current_type .)
    COLON           reduce using rule 19 (tipo -> FLOAT pn_current_type .)
    ID              reduce using rule 19 (tipo -> FLOAT pn_current_type .)


state 28

    (20) tipo -> CHAR pn_current_type .

    MODULE          reduce using rule 20 (tipo -> CHAR pn_current_type .)
    COLON           reduce using rule 20 (tipo -> CHAR pn_current_type .)
    ID              reduce using rule 20 (tipo -> CHAR pn_current_type .)


state 29

    (1) program -> PROGRAM ID SEMICOLON vars aux_funcion pn_go_main . main pn_program_end
    (5) main -> . MAIN pn_current_function LPAREN RPAREN vars bloque
    (6) main -> . MAIN pn_current_function LPAREN RPAREN bloque

    MAIN            shift and go to state 20

    main                           shift and go to state 36

state 30

    (2) program -> PROGRAM ID SEMICOLON vars pn_go_main main . pn_program_end
    (101) pn_program_end -> .

    $end            reduce using rule 101 (pn_program_end -> .)

    pn_program_end                 shift and go to state 37

state 31

    (3) program -> PROGRAM ID SEMICOLON aux_funcion pn_go_main main . pn_program_end
    (101) pn_program_end -> .

    $end            reduce using rule 101 (pn_program_end -> .)

    pn_program_end                 shift and go to state 38

state 32

    (4) program -> PROGRAM ID SEMICOLON pn_go_main main pn_program_end .

    $end            reduce using rule 4 (program -> PROGRAM ID SEMICOLON pn_go_main main pn_program_end .)


state 33

    (5) main -> MAIN pn_current_function . LPAREN RPAREN vars bloque
    (6) main -> MAIN pn_current_function . LPAREN RPAREN bloque

    LPAREN          shift and go to state 39


state 34

    (14) var -> tipo COLON . lista_ids SEMICOLON
    (15) var -> tipo COLON . lista_ids SEMICOLON var
    (23) lista_ids -> . aux_lista_rec
    (24) aux_lista_rec -> . aux_lista
    (25) aux_lista_rec -> . aux_lista COMMA aux_lista_rec
    (26) aux_lista -> . ID pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE
    (27) aux_lista -> . ID pn_add_symbol LSQUARE CTE_INT RSQUARE
    (28) aux_lista -> . ID pn_add_symbol

    ID              shift and go to state 43

    lista_ids                      shift and go to state 40
    aux_lista_rec                  shift and go to state 41
    aux_lista                      shift and go to state 42

state 35

    (9) funcion -> tipo_retorno MODULE ID . pn_add_function LPAREN parametros RPAREN vars bloque
    (10) funcion -> tipo_retorno MODULE ID . pn_add_function LPAREN parametros RPAREN bloque
    (11) funcion -> tipo_retorno MODULE ID . pn_add_function LPAREN RPAREN vars bloque
    (12) funcion -> tipo_retorno MODULE ID . pn_add_function LPAREN RPAREN bloque
    (125) pn_add_function -> .

    LPAREN          reduce using rule 125 (pn_add_function -> .)

    pn_add_function                shift and go to state 44

state 36

    (1) program -> PROGRAM ID SEMICOLON vars aux_funcion pn_go_main main . pn_program_end
    (101) pn_program_end -> .

    $end            reduce using rule 101 (pn_program_end -> .)

    pn_program_end                 shift and go to state 45

state 37

    (2) program -> PROGRAM ID SEMICOLON vars pn_go_main main pn_program_end .

    $end            reduce using rule 2 (program -> PROGRAM ID SEMICOLON vars pn_go_main main pn_program_end .)


state 38

    (3) program -> PROGRAM ID SEMICOLON aux_funcion pn_go_main main pn_program_end .

    $end            reduce using rule 3 (program -> PROGRAM ID SEMICOLON aux_funcion pn_go_main main pn_program_end .)


state 39

    (5) main -> MAIN pn_current_function LPAREN . RPAREN vars bloque
    (6) main -> MAIN pn_current_function LPAREN . RPAREN bloque

    RPAREN          shift and go to state 46


state 40

    (14) var -> tipo COLON lista_ids . SEMICOLON
    (15) var -> tipo COLON lista_ids . SEMICOLON var

    SEMICOLON       shift and go to state 47


state 41

    (23) lista_ids -> aux_lista_rec .

    SEMICOLON       reduce using rule 23 (lista_ids -> aux_lista_rec .)


state 42

    (24) aux_lista_rec -> aux_lista .
    (25) aux_lista_rec -> aux_lista . COMMA aux_lista_rec

    SEMICOLON       reduce using rule 24 (aux_lista_rec -> aux_lista .)
    COMMA           shift and go to state 48


state 43

    (26) aux_lista -> ID . pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE
    (27) aux_lista -> ID . pn_add_symbol LSQUARE CTE_INT RSQUARE
    (28) aux_lista -> ID . pn_add_symbol
    (102) pn_add_symbol -> .

    LSQUARE         reduce using rule 102 (pn_add_symbol -> .)
    COMMA           reduce using rule 102 (pn_add_symbol -> .)
    SEMICOLON       reduce using rule 102 (pn_add_symbol -> .)

    pn_add_symbol                  shift and go to state 49

state 44

    (9) funcion -> tipo_retorno MODULE ID pn_add_function . LPAREN parametros RPAREN vars bloque
    (10) funcion -> tipo_retorno MODULE ID pn_add_function . LPAREN parametros RPAREN bloque
    (11) funcion -> tipo_retorno MODULE ID pn_add_function . LPAREN RPAREN vars bloque
    (12) funcion -> tipo_retorno MODULE ID pn_add_function . LPAREN RPAREN bloque

    LPAREN          shift and go to state 50


state 45

    (1) program -> PROGRAM ID SEMICOLON vars aux_funcion pn_go_main main pn_program_end .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON vars aux_funcion pn_go_main main pn_program_end .)


state 46

    (5) main -> MAIN pn_current_function LPAREN RPAREN . vars bloque
    (6) main -> MAIN pn_current_function LPAREN RPAREN . bloque
    (13) vars -> . VAR var
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    VAR             shift and go to state 8
    LBRACKET        shift and go to state 53

    vars                           shift and go to state 51
    bloque                         shift and go to state 52

state 47

    (14) var -> tipo COLON lista_ids SEMICOLON .
    (15) var -> tipo COLON lista_ids SEMICOLON . var
    (14) var -> . tipo COLON lista_ids SEMICOLON
    (15) var -> . tipo COLON lista_ids SEMICOLON var
    (18) tipo -> . INT pn_current_type
    (19) tipo -> . FLOAT pn_current_type
    (20) tipo -> . CHAR pn_current_type

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VOID            reduce using rule 14 (var -> tipo COLON lista_ids SEMICOLON .)
    MAIN            reduce using rule 14 (var -> tipo COLON lista_ids SEMICOLON .)
    LBRACKET        reduce using rule 14 (var -> tipo COLON lista_ids SEMICOLON .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

  ! INT             [ reduce using rule 14 (var -> tipo COLON lista_ids SEMICOLON .) ]
  ! FLOAT           [ reduce using rule 14 (var -> tipo COLON lista_ids SEMICOLON .) ]
  ! CHAR            [ reduce using rule 14 (var -> tipo COLON lista_ids SEMICOLON .) ]

    tipo                           shift and go to state 22
    var                            shift and go to state 54

state 48

    (25) aux_lista_rec -> aux_lista COMMA . aux_lista_rec
    (24) aux_lista_rec -> . aux_lista
    (25) aux_lista_rec -> . aux_lista COMMA aux_lista_rec
    (26) aux_lista -> . ID pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE
    (27) aux_lista -> . ID pn_add_symbol LSQUARE CTE_INT RSQUARE
    (28) aux_lista -> . ID pn_add_symbol

    ID              shift and go to state 43

    aux_lista                      shift and go to state 42
    aux_lista_rec                  shift and go to state 55

state 49

    (26) aux_lista -> ID pn_add_symbol . LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE
    (27) aux_lista -> ID pn_add_symbol . LSQUARE CTE_INT RSQUARE
    (28) aux_lista -> ID pn_add_symbol .

    LSQUARE         shift and go to state 56
    COMMA           reduce using rule 28 (aux_lista -> ID pn_add_symbol .)
    SEMICOLON       reduce using rule 28 (aux_lista -> ID pn_add_symbol .)


state 50

    (9) funcion -> tipo_retorno MODULE ID pn_add_function LPAREN . parametros RPAREN vars bloque
    (10) funcion -> tipo_retorno MODULE ID pn_add_function LPAREN . parametros RPAREN bloque
    (11) funcion -> tipo_retorno MODULE ID pn_add_function LPAREN . RPAREN vars bloque
    (12) funcion -> tipo_retorno MODULE ID pn_add_function LPAREN . RPAREN bloque
    (21) parametros -> . tipo ID pn_add_parameter
    (22) parametros -> . tipo ID pn_add_parameter COMMA parametros
    (18) tipo -> . INT pn_current_type
    (19) tipo -> . FLOAT pn_current_type
    (20) tipo -> . CHAR pn_current_type

    RPAREN          shift and go to state 58
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    parametros                     shift and go to state 57
    tipo                           shift and go to state 59

state 51

    (5) main -> MAIN pn_current_function LPAREN RPAREN vars . bloque
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 53

    bloque                         shift and go to state 60

state 52

    (6) main -> MAIN pn_current_function LPAREN RPAREN bloque .

    $end            reduce using rule 6 (main -> MAIN pn_current_function LPAREN RPAREN bloque .)


state 53

    (35) bloque -> LBRACKET . estatutos RBRACKET
    (36) bloque -> LBRACKET . RBRACKET
    (37) estatutos -> . estatuto estatutos
    (38) estatutos -> . estatuto
    (39) estatuto -> . asignacion
    (40) estatuto -> . condicional
    (41) estatuto -> . escritura
    (42) estatuto -> . retorno
    (43) estatuto -> . lectura
    (44) estatuto -> . decision
    (45) estatuto -> . no_condicional
    (46) estatuto -> . llamada SEMICOLON
    (47) asignacion -> . ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON
    (48) asignacion -> . ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON
    (34) condicional -> . WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN DO bloque pn_while_3
    (29) escritura -> . WRITE LPAREN aux_escritura RPAREN SEMICOLON
    (49) retorno -> . RETURN pn_push_operator LPAREN expresion pn_retorno RPAREN SEMICOLON
    (50) lectura -> . READ LPAREN aux_lectura RPAREN SEMICOLON
    (59) decision -> . IF LPAREN expresion pn_if_1 RPAREN THEN bloque pn_if_2
    (60) decision -> . IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2
    (64) no_condicional -> . FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (65) no_condicional -> . FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    RBRACKET        shift and go to state 62
    ID              shift and go to state 72
    WHILE           shift and go to state 73
    WRITE           shift and go to state 74
    RETURN          shift and go to state 75
    READ            shift and go to state 76
    IF              shift and go to state 77
    FOR             shift and go to state 78

    estatutos                      shift and go to state 61
    estatuto                       shift and go to state 63
    asignacion                     shift and go to state 64
    condicional                    shift and go to state 65
    escritura                      shift and go to state 66
    retorno                        shift and go to state 67
    lectura                        shift and go to state 68
    decision                       shift and go to state 69
    no_condicional                 shift and go to state 70
    llamada                        shift and go to state 71

state 54

    (15) var -> tipo COLON lista_ids SEMICOLON var .

    VOID            reduce using rule 15 (var -> tipo COLON lista_ids SEMICOLON var .)
    INT             reduce using rule 15 (var -> tipo COLON lista_ids SEMICOLON var .)
    FLOAT           reduce using rule 15 (var -> tipo COLON lista_ids SEMICOLON var .)
    CHAR            reduce using rule 15 (var -> tipo COLON lista_ids SEMICOLON var .)
    MAIN            reduce using rule 15 (var -> tipo COLON lista_ids SEMICOLON var .)
    LBRACKET        reduce using rule 15 (var -> tipo COLON lista_ids SEMICOLON var .)


state 55

    (25) aux_lista_rec -> aux_lista COMMA aux_lista_rec .

    SEMICOLON       reduce using rule 25 (aux_lista_rec -> aux_lista COMMA aux_lista_rec .)


state 56

    (26) aux_lista -> ID pn_add_symbol LSQUARE . CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE
    (27) aux_lista -> ID pn_add_symbol LSQUARE . CTE_INT RSQUARE

    CTE_INT         shift and go to state 79


state 57

    (9) funcion -> tipo_retorno MODULE ID pn_add_function LPAREN parametros . RPAREN vars bloque
    (10) funcion -> tipo_retorno MODULE ID pn_add_function LPAREN parametros . RPAREN bloque

    RPAREN          shift and go to state 80


state 58

    (11) funcion -> tipo_retorno MODULE ID pn_add_function LPAREN RPAREN . vars bloque
    (12) funcion -> tipo_retorno MODULE ID pn_add_function LPAREN RPAREN . bloque
    (13) vars -> . VAR var
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    VAR             shift and go to state 8
    LBRACKET        shift and go to state 53

    vars                           shift and go to state 81
    bloque                         shift and go to state 82

state 59

    (21) parametros -> tipo . ID pn_add_parameter
    (22) parametros -> tipo . ID pn_add_parameter COMMA parametros

    ID              shift and go to state 83


state 60

    (5) main -> MAIN pn_current_function LPAREN RPAREN vars bloque .

    $end            reduce using rule 5 (main -> MAIN pn_current_function LPAREN RPAREN vars bloque .)


state 61

    (35) bloque -> LBRACKET estatutos . RBRACKET

    RBRACKET        shift and go to state 84


state 62

    (36) bloque -> LBRACKET RBRACKET .

    $end            reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    VOID            reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    INT             reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    FLOAT           reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    CHAR            reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    MAIN            reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    ELSE            reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    ID              reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    WHILE           reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    WRITE           reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    RETURN          reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    READ            reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    IF              reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    FOR             reduce using rule 36 (bloque -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 36 (bloque -> LBRACKET RBRACKET .)


state 63

    (37) estatutos -> estatuto . estatutos
    (38) estatutos -> estatuto .
    (37) estatutos -> . estatuto estatutos
    (38) estatutos -> . estatuto
    (39) estatuto -> . asignacion
    (40) estatuto -> . condicional
    (41) estatuto -> . escritura
    (42) estatuto -> . retorno
    (43) estatuto -> . lectura
    (44) estatuto -> . decision
    (45) estatuto -> . no_condicional
    (46) estatuto -> . llamada SEMICOLON
    (47) asignacion -> . ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON
    (48) asignacion -> . ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON
    (34) condicional -> . WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN DO bloque pn_while_3
    (29) escritura -> . WRITE LPAREN aux_escritura RPAREN SEMICOLON
    (49) retorno -> . RETURN pn_push_operator LPAREN expresion pn_retorno RPAREN SEMICOLON
    (50) lectura -> . READ LPAREN aux_lectura RPAREN SEMICOLON
    (59) decision -> . IF LPAREN expresion pn_if_1 RPAREN THEN bloque pn_if_2
    (60) decision -> . IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2
    (64) no_condicional -> . FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (65) no_condicional -> . FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    RBRACKET        reduce using rule 38 (estatutos -> estatuto .)
    ID              shift and go to state 72
    WHILE           shift and go to state 73
    WRITE           shift and go to state 74
    RETURN          shift and go to state 75
    READ            shift and go to state 76
    IF              shift and go to state 77
    FOR             shift and go to state 78

    estatuto                       shift and go to state 63
    estatutos                      shift and go to state 85
    asignacion                     shift and go to state 64
    condicional                    shift and go to state 65
    escritura                      shift and go to state 66
    retorno                        shift and go to state 67
    lectura                        shift and go to state 68
    decision                       shift and go to state 69
    no_condicional                 shift and go to state 70
    llamada                        shift and go to state 71

state 64

    (39) estatuto -> asignacion .

    ID              reduce using rule 39 (estatuto -> asignacion .)
    WHILE           reduce using rule 39 (estatuto -> asignacion .)
    WRITE           reduce using rule 39 (estatuto -> asignacion .)
    RETURN          reduce using rule 39 (estatuto -> asignacion .)
    READ            reduce using rule 39 (estatuto -> asignacion .)
    IF              reduce using rule 39 (estatuto -> asignacion .)
    FOR             reduce using rule 39 (estatuto -> asignacion .)
    RBRACKET        reduce using rule 39 (estatuto -> asignacion .)


state 65

    (40) estatuto -> condicional .

    ID              reduce using rule 40 (estatuto -> condicional .)
    WHILE           reduce using rule 40 (estatuto -> condicional .)
    WRITE           reduce using rule 40 (estatuto -> condicional .)
    RETURN          reduce using rule 40 (estatuto -> condicional .)
    READ            reduce using rule 40 (estatuto -> condicional .)
    IF              reduce using rule 40 (estatuto -> condicional .)
    FOR             reduce using rule 40 (estatuto -> condicional .)
    RBRACKET        reduce using rule 40 (estatuto -> condicional .)


state 66

    (41) estatuto -> escritura .

    ID              reduce using rule 41 (estatuto -> escritura .)
    WHILE           reduce using rule 41 (estatuto -> escritura .)
    WRITE           reduce using rule 41 (estatuto -> escritura .)
    RETURN          reduce using rule 41 (estatuto -> escritura .)
    READ            reduce using rule 41 (estatuto -> escritura .)
    IF              reduce using rule 41 (estatuto -> escritura .)
    FOR             reduce using rule 41 (estatuto -> escritura .)
    RBRACKET        reduce using rule 41 (estatuto -> escritura .)


state 67

    (42) estatuto -> retorno .

    ID              reduce using rule 42 (estatuto -> retorno .)
    WHILE           reduce using rule 42 (estatuto -> retorno .)
    WRITE           reduce using rule 42 (estatuto -> retorno .)
    RETURN          reduce using rule 42 (estatuto -> retorno .)
    READ            reduce using rule 42 (estatuto -> retorno .)
    IF              reduce using rule 42 (estatuto -> retorno .)
    FOR             reduce using rule 42 (estatuto -> retorno .)
    RBRACKET        reduce using rule 42 (estatuto -> retorno .)


state 68

    (43) estatuto -> lectura .

    ID              reduce using rule 43 (estatuto -> lectura .)
    WHILE           reduce using rule 43 (estatuto -> lectura .)
    WRITE           reduce using rule 43 (estatuto -> lectura .)
    RETURN          reduce using rule 43 (estatuto -> lectura .)
    READ            reduce using rule 43 (estatuto -> lectura .)
    IF              reduce using rule 43 (estatuto -> lectura .)
    FOR             reduce using rule 43 (estatuto -> lectura .)
    RBRACKET        reduce using rule 43 (estatuto -> lectura .)


state 69

    (44) estatuto -> decision .

    ID              reduce using rule 44 (estatuto -> decision .)
    WHILE           reduce using rule 44 (estatuto -> decision .)
    WRITE           reduce using rule 44 (estatuto -> decision .)
    RETURN          reduce using rule 44 (estatuto -> decision .)
    READ            reduce using rule 44 (estatuto -> decision .)
    IF              reduce using rule 44 (estatuto -> decision .)
    FOR             reduce using rule 44 (estatuto -> decision .)
    RBRACKET        reduce using rule 44 (estatuto -> decision .)


state 70

    (45) estatuto -> no_condicional .

    ID              reduce using rule 45 (estatuto -> no_condicional .)
    WHILE           reduce using rule 45 (estatuto -> no_condicional .)
    WRITE           reduce using rule 45 (estatuto -> no_condicional .)
    RETURN          reduce using rule 45 (estatuto -> no_condicional .)
    READ            reduce using rule 45 (estatuto -> no_condicional .)
    IF              reduce using rule 45 (estatuto -> no_condicional .)
    FOR             reduce using rule 45 (estatuto -> no_condicional .)
    RBRACKET        reduce using rule 45 (estatuto -> no_condicional .)


state 71

    (46) estatuto -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 86


state 72

    (47) asignacion -> ID . pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON
    (48) asignacion -> ID . pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON
    (61) llamada -> ID . LPAREN aux_llamada RPAREN
    (104) pn_push_operand_and_type -> .

    LPAREN          shift and go to state 88
    ASSIGN          reduce using rule 104 (pn_push_operand_and_type -> .)
    LSQUARE         reduce using rule 104 (pn_push_operand_and_type -> .)

    pn_push_operand_and_type       shift and go to state 87

state 73

    (34) condicional -> WHILE . pn_while_1 LPAREN expresion pn_while_2 RPAREN DO bloque pn_while_3
    (119) pn_while_1 -> .

    LPAREN          reduce using rule 119 (pn_while_1 -> .)

    pn_while_1                     shift and go to state 89

state 74

    (29) escritura -> WRITE . LPAREN aux_escritura RPAREN SEMICOLON

    LPAREN          shift and go to state 90


state 75

    (49) retorno -> RETURN . pn_push_operator LPAREN expresion pn_retorno RPAREN SEMICOLON
    (105) pn_push_operator -> .

    LPAREN          reduce using rule 105 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 91

state 76

    (50) lectura -> READ . LPAREN aux_lectura RPAREN SEMICOLON

    LPAREN          shift and go to state 92


state 77

    (59) decision -> IF . LPAREN expresion pn_if_1 RPAREN THEN bloque pn_if_2
    (60) decision -> IF . LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2

    LPAREN          shift and go to state 93


state 78

    (64) no_condicional -> FOR . ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (65) no_condicional -> FOR . ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back

    ID              shift and go to state 94


state 79

    (26) aux_lista -> ID pn_add_symbol LSQUARE CTE_INT . RSQUARE LSQUARE CTE_INT RSQUARE
    (27) aux_lista -> ID pn_add_symbol LSQUARE CTE_INT . RSQUARE

    RSQUARE         shift and go to state 95


state 80

    (9) funcion -> tipo_retorno MODULE ID pn_add_function LPAREN parametros RPAREN . vars bloque
    (10) funcion -> tipo_retorno MODULE ID pn_add_function LPAREN parametros RPAREN . bloque
    (13) vars -> . VAR var
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    VAR             shift and go to state 8
    LBRACKET        shift and go to state 53

    vars                           shift and go to state 96
    bloque                         shift and go to state 97

state 81

    (11) funcion -> tipo_retorno MODULE ID pn_add_function LPAREN RPAREN vars . bloque
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 53

    bloque                         shift and go to state 98

state 82

    (12) funcion -> tipo_retorno MODULE ID pn_add_function LPAREN RPAREN bloque .

    VOID            reduce using rule 12 (funcion -> tipo_retorno MODULE ID pn_add_function LPAREN RPAREN bloque .)
    INT             reduce using rule 12 (funcion -> tipo_retorno MODULE ID pn_add_function LPAREN RPAREN bloque .)
    FLOAT           reduce using rule 12 (funcion -> tipo_retorno MODULE ID pn_add_function LPAREN RPAREN bloque .)
    CHAR            reduce using rule 12 (funcion -> tipo_retorno MODULE ID pn_add_function LPAREN RPAREN bloque .)
    MAIN            reduce using rule 12 (funcion -> tipo_retorno MODULE ID pn_add_function LPAREN RPAREN bloque .)


state 83

    (21) parametros -> tipo ID . pn_add_parameter
    (22) parametros -> tipo ID . pn_add_parameter COMMA parametros
    (126) pn_add_parameter -> .

    COMMA           reduce using rule 126 (pn_add_parameter -> .)
    RPAREN          reduce using rule 126 (pn_add_parameter -> .)

    pn_add_parameter               shift and go to state 99

state 84

    (35) bloque -> LBRACKET estatutos RBRACKET .

    $end            reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    VOID            reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    INT             reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    FLOAT           reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    CHAR            reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    MAIN            reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    ELSE            reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    ID              reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    WHILE           reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    WRITE           reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    RETURN          reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    READ            reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    IF              reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    FOR             reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)
    RBRACKET        reduce using rule 35 (bloque -> LBRACKET estatutos RBRACKET .)


state 85

    (37) estatutos -> estatuto estatutos .

    RBRACKET        reduce using rule 37 (estatutos -> estatuto estatutos .)


state 86

    (46) estatuto -> llamada SEMICOLON .

    ID              reduce using rule 46 (estatuto -> llamada SEMICOLON .)
    WHILE           reduce using rule 46 (estatuto -> llamada SEMICOLON .)
    WRITE           reduce using rule 46 (estatuto -> llamada SEMICOLON .)
    RETURN          reduce using rule 46 (estatuto -> llamada SEMICOLON .)
    READ            reduce using rule 46 (estatuto -> llamada SEMICOLON .)
    IF              reduce using rule 46 (estatuto -> llamada SEMICOLON .)
    FOR             reduce using rule 46 (estatuto -> llamada SEMICOLON .)
    RBRACKET        reduce using rule 46 (estatuto -> llamada SEMICOLON .)


state 87

    (47) asignacion -> ID pn_push_operand_and_type . dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON
    (48) asignacion -> ID pn_push_operand_and_type . ASSIGN pn_push_operator expresion pn_assign SEMICOLON
    (66) dimensiones -> . LSQUARE expresion RSQUARE LSQUARE expresion RSQUARE
    (67) dimensiones -> . LSQUARE expresion COMMA expresion RSQUARE
    (68) dimensiones -> . LSQUARE expresion RSQUARE

    ASSIGN          shift and go to state 101
    LSQUARE         shift and go to state 102

    dimensiones                    shift and go to state 100

state 88

    (61) llamada -> ID LPAREN . aux_llamada RPAREN
    (62) aux_llamada -> . expresion
    (63) aux_llamada -> . expresion COMMA aux_llamada
    (69) expresion -> . comparacion aux_expresion
    (70) expresion -> . aux_comparacion
    (75) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (77) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (81) aux_comparacion -> . exp
    (82) exp -> . termino pn_addition_substraction
    (83) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (84) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (85) termino -> . factor pn_multiplication_division
    (86) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (87) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (88) factor -> . LPAREN expresion RPAREN
    (89) factor -> . PLUS var_cte
    (90) factor -> . PLUS llamada
    (91) factor -> . MINUS var_cte
    (92) factor -> . MINUS llamada
    (93) factor -> . var_cte
    (94) factor -> . llamada
    (95) var_cte -> . ID pn_push_operand_and_type
    (96) var_cte -> . CTE_INT pn_push_constant_and_type
    (97) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 104
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    ID              shift and go to state 103
    CTE_INT         shift and go to state 116
    CTE_FLOAT       shift and go to state 117

    aux_llamada                    shift and go to state 105
    expresion                      shift and go to state 106
    comparacion                    shift and go to state 107
    aux_comparacion                shift and go to state 108
    exp                            shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 113
    var_cte                        shift and go to state 114
    llamada                        shift and go to state 115

state 89

    (34) condicional -> WHILE pn_while_1 . LPAREN expresion pn_while_2 RPAREN DO bloque pn_while_3

    LPAREN          shift and go to state 118


state 90

    (29) escritura -> WRITE LPAREN . aux_escritura RPAREN SEMICOLON
    (30) aux_escritura -> . pn_push_write_operator letrero pn_write
    (31) aux_escritura -> . pn_push_write_operator expresion pn_write
    (32) aux_escritura -> . pn_push_write_operator letrero pn_write COMMA aux_escritura
    (33) aux_escritura -> . pn_push_write_operator expresion pn_write COMMA aux_escritura
    (111) pn_push_write_operator -> .

    QUOTATION       reduce using rule 111 (pn_push_write_operator -> .)
    LPAREN          reduce using rule 111 (pn_push_write_operator -> .)
    PLUS            reduce using rule 111 (pn_push_write_operator -> .)
    MINUS           reduce using rule 111 (pn_push_write_operator -> .)
    ID              reduce using rule 111 (pn_push_write_operator -> .)
    CTE_INT         reduce using rule 111 (pn_push_write_operator -> .)
    CTE_FLOAT       reduce using rule 111 (pn_push_write_operator -> .)

    aux_escritura                  shift and go to state 119
    pn_push_write_operator         shift and go to state 120

state 91

    (49) retorno -> RETURN pn_push_operator . LPAREN expresion pn_retorno RPAREN SEMICOLON

    LPAREN          shift and go to state 121


state 92

    (50) lectura -> READ LPAREN . aux_lectura RPAREN SEMICOLON
    (51) aux_lectura -> . pn_push_read_operator ID pn_push_operand_and_type pn_read
    (52) aux_lectura -> . pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones
    (53) aux_lectura -> . pn_push_read_operator ID pn_push_operand_and_type pn_read COMMA aux_lectura
    (54) aux_lectura -> . pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones COMMA aux_lectura
    (109) pn_push_read_operator -> .

    ID              reduce using rule 109 (pn_push_read_operator -> .)

    aux_lectura                    shift and go to state 122
    pn_push_read_operator          shift and go to state 123

state 93

    (59) decision -> IF LPAREN . expresion pn_if_1 RPAREN THEN bloque pn_if_2
    (60) decision -> IF LPAREN . expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2
    (69) expresion -> . comparacion aux_expresion
    (70) expresion -> . aux_comparacion
    (75) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (77) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (81) aux_comparacion -> . exp
    (82) exp -> . termino pn_addition_substraction
    (83) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (84) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (85) termino -> . factor pn_multiplication_division
    (86) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (87) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (88) factor -> . LPAREN expresion RPAREN
    (89) factor -> . PLUS var_cte
    (90) factor -> . PLUS llamada
    (91) factor -> . MINUS var_cte
    (92) factor -> . MINUS llamada
    (93) factor -> . var_cte
    (94) factor -> . llamada
    (95) var_cte -> . ID pn_push_operand_and_type
    (96) var_cte -> . CTE_INT pn_push_constant_and_type
    (97) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 104
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    ID              shift and go to state 103
    CTE_INT         shift and go to state 116
    CTE_FLOAT       shift and go to state 117

    expresion                      shift and go to state 124
    comparacion                    shift and go to state 107
    aux_comparacion                shift and go to state 108
    exp                            shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 113
    var_cte                        shift and go to state 114
    llamada                        shift and go to state 115

state 94

    (64) no_condicional -> FOR ID . pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (65) no_condicional -> FOR ID . pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (104) pn_push_operand_and_type -> .

    ASSIGN          reduce using rule 104 (pn_push_operand_and_type -> .)
    LSQUARE         reduce using rule 104 (pn_push_operand_and_type -> .)

    pn_push_operand_and_type       shift and go to state 125

state 95

    (26) aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE . LSQUARE CTE_INT RSQUARE
    (27) aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE .

    LSQUARE         shift and go to state 126
    COMMA           reduce using rule 27 (aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE .)
    SEMICOLON       reduce using rule 27 (aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE .)


state 96

    (9) funcion -> tipo_retorno MODULE ID pn_add_function LPAREN parametros RPAREN vars . bloque
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 53

    bloque                         shift and go to state 127

state 97

    (10) funcion -> tipo_retorno MODULE ID pn_add_function LPAREN parametros RPAREN bloque .

    VOID            reduce using rule 10 (funcion -> tipo_retorno MODULE ID pn_add_function LPAREN parametros RPAREN bloque .)
    INT             reduce using rule 10 (funcion -> tipo_retorno MODULE ID pn_add_function LPAREN parametros RPAREN bloque .)
    FLOAT           reduce using rule 10 (funcion -> tipo_retorno MODULE ID pn_add_function LPAREN parametros RPAREN bloque .)
    CHAR            reduce using rule 10 (funcion -> tipo_retorno MODULE ID pn_add_function LPAREN parametros RPAREN bloque .)
    MAIN            reduce using rule 10 (funcion -> tipo_retorno MODULE ID pn_add_function LPAREN parametros RPAREN bloque .)


state 98

    (11) funcion -> tipo_retorno MODULE ID pn_add_function LPAREN RPAREN vars bloque .

    VOID            reduce using rule 11 (funcion -> tipo_retorno MODULE ID pn_add_function LPAREN RPAREN vars bloque .)
    INT             reduce using rule 11 (funcion -> tipo_retorno MODULE ID pn_add_function LPAREN RPAREN vars bloque .)
    FLOAT           reduce using rule 11 (funcion -> tipo_retorno MODULE ID pn_add_function LPAREN RPAREN vars bloque .)
    CHAR            reduce using rule 11 (funcion -> tipo_retorno MODULE ID pn_add_function LPAREN RPAREN vars bloque .)
    MAIN            reduce using rule 11 (funcion -> tipo_retorno MODULE ID pn_add_function LPAREN RPAREN vars bloque .)


state 99

    (21) parametros -> tipo ID pn_add_parameter .
    (22) parametros -> tipo ID pn_add_parameter . COMMA parametros

    RPAREN          reduce using rule 21 (parametros -> tipo ID pn_add_parameter .)
    COMMA           shift and go to state 128


state 100

    (47) asignacion -> ID pn_push_operand_and_type dimensiones . ASSIGN pn_push_operator expresion pn_assign SEMICOLON

    ASSIGN          shift and go to state 129


state 101

    (48) asignacion -> ID pn_push_operand_and_type ASSIGN . pn_push_operator expresion pn_assign SEMICOLON
    (105) pn_push_operator -> .

    LPAREN          reduce using rule 105 (pn_push_operator -> .)
    PLUS            reduce using rule 105 (pn_push_operator -> .)
    MINUS           reduce using rule 105 (pn_push_operator -> .)
    ID              reduce using rule 105 (pn_push_operator -> .)
    CTE_INT         reduce using rule 105 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 105 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 130

state 102

    (66) dimensiones -> LSQUARE . expresion RSQUARE LSQUARE expresion RSQUARE
    (67) dimensiones -> LSQUARE . expresion COMMA expresion RSQUARE
    (68) dimensiones -> LSQUARE . expresion RSQUARE
    (69) expresion -> . comparacion aux_expresion
    (70) expresion -> . aux_comparacion
    (75) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (77) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (81) aux_comparacion -> . exp
    (82) exp -> . termino pn_addition_substraction
    (83) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (84) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (85) termino -> . factor pn_multiplication_division
    (86) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (87) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (88) factor -> . LPAREN expresion RPAREN
    (89) factor -> . PLUS var_cte
    (90) factor -> . PLUS llamada
    (91) factor -> . MINUS var_cte
    (92) factor -> . MINUS llamada
    (93) factor -> . var_cte
    (94) factor -> . llamada
    (95) var_cte -> . ID pn_push_operand_and_type
    (96) var_cte -> . CTE_INT pn_push_constant_and_type
    (97) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 104
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    ID              shift and go to state 103
    CTE_INT         shift and go to state 116
    CTE_FLOAT       shift and go to state 117

    expresion                      shift and go to state 131
    comparacion                    shift and go to state 107
    aux_comparacion                shift and go to state 108
    exp                            shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 113
    var_cte                        shift and go to state 114
    llamada                        shift and go to state 115

state 103

    (95) var_cte -> ID . pn_push_operand_and_type
    (61) llamada -> ID . LPAREN aux_llamada RPAREN
    (104) pn_push_operand_and_type -> .

    LPAREN          shift and go to state 88
    MULT            reduce using rule 104 (pn_push_operand_and_type -> .)
    DIV             reduce using rule 104 (pn_push_operand_and_type -> .)
    PLUS            reduce using rule 104 (pn_push_operand_and_type -> .)
    MINUS           reduce using rule 104 (pn_push_operand_and_type -> .)
    LESSTHAN        reduce using rule 104 (pn_push_operand_and_type -> .)
    GREATERTHAN     reduce using rule 104 (pn_push_operand_and_type -> .)
    EQUAL           reduce using rule 104 (pn_push_operand_and_type -> .)
    COMMA           reduce using rule 104 (pn_push_operand_and_type -> .)
    RPAREN          reduce using rule 104 (pn_push_operand_and_type -> .)
    RSQUARE         reduce using rule 104 (pn_push_operand_and_type -> .)
    SEMICOLON       reduce using rule 104 (pn_push_operand_and_type -> .)
    AND             reduce using rule 104 (pn_push_operand_and_type -> .)
    OR              reduce using rule 104 (pn_push_operand_and_type -> .)
    TO              reduce using rule 104 (pn_push_operand_and_type -> .)
    DO              reduce using rule 104 (pn_push_operand_and_type -> .)

    pn_push_operand_and_type       shift and go to state 132

state 104

    (88) factor -> LPAREN . expresion RPAREN
    (69) expresion -> . comparacion aux_expresion
    (70) expresion -> . aux_comparacion
    (75) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (77) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (81) aux_comparacion -> . exp
    (82) exp -> . termino pn_addition_substraction
    (83) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (84) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (85) termino -> . factor pn_multiplication_division
    (86) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (87) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (88) factor -> . LPAREN expresion RPAREN
    (89) factor -> . PLUS var_cte
    (90) factor -> . PLUS llamada
    (91) factor -> . MINUS var_cte
    (92) factor -> . MINUS llamada
    (93) factor -> . var_cte
    (94) factor -> . llamada
    (95) var_cte -> . ID pn_push_operand_and_type
    (96) var_cte -> . CTE_INT pn_push_constant_and_type
    (97) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 104
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    ID              shift and go to state 103
    CTE_INT         shift and go to state 116
    CTE_FLOAT       shift and go to state 117

    expresion                      shift and go to state 133
    comparacion                    shift and go to state 107
    aux_comparacion                shift and go to state 108
    exp                            shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 113
    var_cte                        shift and go to state 114
    llamada                        shift and go to state 115

state 105

    (61) llamada -> ID LPAREN aux_llamada . RPAREN

    RPAREN          shift and go to state 134


state 106

    (62) aux_llamada -> expresion .
    (63) aux_llamada -> expresion . COMMA aux_llamada

    RPAREN          reduce using rule 62 (aux_llamada -> expresion .)
    COMMA           shift and go to state 135


state 107

    (69) expresion -> comparacion . aux_expresion
    (71) aux_expresion -> . AND pn_push_operator comparacion pn_and
    (72) aux_expresion -> . OR pn_push_operator comparacion pn_or
    (73) aux_expresion -> . AND pn_push_operator comparacion pn_and aux_expresion
    (74) aux_expresion -> . OR pn_push_operator comparacion pn_or aux_expresion

    AND             shift and go to state 137
    OR              shift and go to state 138

    aux_expresion                  shift and go to state 136

state 108

    (70) expresion -> aux_comparacion .

    COMMA           reduce using rule 70 (expresion -> aux_comparacion .)
    RPAREN          reduce using rule 70 (expresion -> aux_comparacion .)
    RSQUARE         reduce using rule 70 (expresion -> aux_comparacion .)
    SEMICOLON       reduce using rule 70 (expresion -> aux_comparacion .)
    TO              reduce using rule 70 (expresion -> aux_comparacion .)
    DO              reduce using rule 70 (expresion -> aux_comparacion .)


state 109

    (75) comparacion -> exp . LESSTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> exp . GREATERTHAN pn_push_operator exp pn_comparison
    (77) comparacion -> exp . EQUAL pn_push_operator exp pn_comparison
    (78) aux_comparacion -> exp . LESSTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> exp . GREATERTHAN pn_push_operator exp pn_comparison
    (80) aux_comparacion -> exp . EQUAL pn_push_operator exp pn_comparison
    (81) aux_comparacion -> exp .

    LESSTHAN        shift and go to state 139
    GREATERTHAN     shift and go to state 140
    EQUAL           shift and go to state 141
    COMMA           reduce using rule 81 (aux_comparacion -> exp .)
    RPAREN          reduce using rule 81 (aux_comparacion -> exp .)
    RSQUARE         reduce using rule 81 (aux_comparacion -> exp .)
    SEMICOLON       reduce using rule 81 (aux_comparacion -> exp .)
    TO              reduce using rule 81 (aux_comparacion -> exp .)
    DO              reduce using rule 81 (aux_comparacion -> exp .)


state 110

    (82) exp -> termino . pn_addition_substraction
    (83) exp -> termino . pn_addition_substraction PLUS pn_push_operator exp
    (84) exp -> termino . pn_addition_substraction MINUS pn_push_operator exp
    (106) pn_addition_substraction -> .

    PLUS            reduce using rule 106 (pn_addition_substraction -> .)
    MINUS           reduce using rule 106 (pn_addition_substraction -> .)
    LESSTHAN        reduce using rule 106 (pn_addition_substraction -> .)
    GREATERTHAN     reduce using rule 106 (pn_addition_substraction -> .)
    EQUAL           reduce using rule 106 (pn_addition_substraction -> .)
    COMMA           reduce using rule 106 (pn_addition_substraction -> .)
    RPAREN          reduce using rule 106 (pn_addition_substraction -> .)
    RSQUARE         reduce using rule 106 (pn_addition_substraction -> .)
    SEMICOLON       reduce using rule 106 (pn_addition_substraction -> .)
    AND             reduce using rule 106 (pn_addition_substraction -> .)
    OR              reduce using rule 106 (pn_addition_substraction -> .)
    TO              reduce using rule 106 (pn_addition_substraction -> .)
    DO              reduce using rule 106 (pn_addition_substraction -> .)

    pn_addition_substraction       shift and go to state 142

state 111

    (89) factor -> PLUS . var_cte
    (90) factor -> PLUS . llamada
    (95) var_cte -> . ID pn_push_operand_and_type
    (96) var_cte -> . CTE_INT pn_push_constant_and_type
    (97) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    ID              shift and go to state 103
    CTE_INT         shift and go to state 116
    CTE_FLOAT       shift and go to state 117

    var_cte                        shift and go to state 143
    llamada                        shift and go to state 144

state 112

    (91) factor -> MINUS . var_cte
    (92) factor -> MINUS . llamada
    (95) var_cte -> . ID pn_push_operand_and_type
    (96) var_cte -> . CTE_INT pn_push_constant_and_type
    (97) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    ID              shift and go to state 103
    CTE_INT         shift and go to state 116
    CTE_FLOAT       shift and go to state 117

    var_cte                        shift and go to state 145
    llamada                        shift and go to state 146

state 113

    (85) termino -> factor . pn_multiplication_division
    (86) termino -> factor . pn_multiplication_division MULT pn_push_operator termino
    (87) termino -> factor . pn_multiplication_division DIV pn_push_operator termino
    (107) pn_multiplication_division -> .

    MULT            reduce using rule 107 (pn_multiplication_division -> .)
    DIV             reduce using rule 107 (pn_multiplication_division -> .)
    PLUS            reduce using rule 107 (pn_multiplication_division -> .)
    MINUS           reduce using rule 107 (pn_multiplication_division -> .)
    LESSTHAN        reduce using rule 107 (pn_multiplication_division -> .)
    GREATERTHAN     reduce using rule 107 (pn_multiplication_division -> .)
    EQUAL           reduce using rule 107 (pn_multiplication_division -> .)
    COMMA           reduce using rule 107 (pn_multiplication_division -> .)
    RPAREN          reduce using rule 107 (pn_multiplication_division -> .)
    RSQUARE         reduce using rule 107 (pn_multiplication_division -> .)
    SEMICOLON       reduce using rule 107 (pn_multiplication_division -> .)
    AND             reduce using rule 107 (pn_multiplication_division -> .)
    OR              reduce using rule 107 (pn_multiplication_division -> .)
    TO              reduce using rule 107 (pn_multiplication_division -> .)
    DO              reduce using rule 107 (pn_multiplication_division -> .)

    pn_multiplication_division     shift and go to state 147

state 114

    (93) factor -> var_cte .

    MULT            reduce using rule 93 (factor -> var_cte .)
    DIV             reduce using rule 93 (factor -> var_cte .)
    PLUS            reduce using rule 93 (factor -> var_cte .)
    MINUS           reduce using rule 93 (factor -> var_cte .)
    LESSTHAN        reduce using rule 93 (factor -> var_cte .)
    GREATERTHAN     reduce using rule 93 (factor -> var_cte .)
    EQUAL           reduce using rule 93 (factor -> var_cte .)
    COMMA           reduce using rule 93 (factor -> var_cte .)
    RPAREN          reduce using rule 93 (factor -> var_cte .)
    RSQUARE         reduce using rule 93 (factor -> var_cte .)
    SEMICOLON       reduce using rule 93 (factor -> var_cte .)
    AND             reduce using rule 93 (factor -> var_cte .)
    OR              reduce using rule 93 (factor -> var_cte .)
    TO              reduce using rule 93 (factor -> var_cte .)
    DO              reduce using rule 93 (factor -> var_cte .)


state 115

    (94) factor -> llamada .

    MULT            reduce using rule 94 (factor -> llamada .)
    DIV             reduce using rule 94 (factor -> llamada .)
    PLUS            reduce using rule 94 (factor -> llamada .)
    MINUS           reduce using rule 94 (factor -> llamada .)
    LESSTHAN        reduce using rule 94 (factor -> llamada .)
    GREATERTHAN     reduce using rule 94 (factor -> llamada .)
    EQUAL           reduce using rule 94 (factor -> llamada .)
    COMMA           reduce using rule 94 (factor -> llamada .)
    RPAREN          reduce using rule 94 (factor -> llamada .)
    RSQUARE         reduce using rule 94 (factor -> llamada .)
    SEMICOLON       reduce using rule 94 (factor -> llamada .)
    AND             reduce using rule 94 (factor -> llamada .)
    OR              reduce using rule 94 (factor -> llamada .)
    TO              reduce using rule 94 (factor -> llamada .)
    DO              reduce using rule 94 (factor -> llamada .)


state 116

    (96) var_cte -> CTE_INT . pn_push_constant_and_type
    (103) pn_push_constant_and_type -> .

    MULT            reduce using rule 103 (pn_push_constant_and_type -> .)
    DIV             reduce using rule 103 (pn_push_constant_and_type -> .)
    PLUS            reduce using rule 103 (pn_push_constant_and_type -> .)
    MINUS           reduce using rule 103 (pn_push_constant_and_type -> .)
    LESSTHAN        reduce using rule 103 (pn_push_constant_and_type -> .)
    GREATERTHAN     reduce using rule 103 (pn_push_constant_and_type -> .)
    EQUAL           reduce using rule 103 (pn_push_constant_and_type -> .)
    COMMA           reduce using rule 103 (pn_push_constant_and_type -> .)
    RPAREN          reduce using rule 103 (pn_push_constant_and_type -> .)
    RSQUARE         reduce using rule 103 (pn_push_constant_and_type -> .)
    SEMICOLON       reduce using rule 103 (pn_push_constant_and_type -> .)
    AND             reduce using rule 103 (pn_push_constant_and_type -> .)
    OR              reduce using rule 103 (pn_push_constant_and_type -> .)
    TO              reduce using rule 103 (pn_push_constant_and_type -> .)
    DO              reduce using rule 103 (pn_push_constant_and_type -> .)

    pn_push_constant_and_type      shift and go to state 148

state 117

    (97) var_cte -> CTE_FLOAT . pn_push_constant_and_type
    (103) pn_push_constant_and_type -> .

    MULT            reduce using rule 103 (pn_push_constant_and_type -> .)
    DIV             reduce using rule 103 (pn_push_constant_and_type -> .)
    PLUS            reduce using rule 103 (pn_push_constant_and_type -> .)
    MINUS           reduce using rule 103 (pn_push_constant_and_type -> .)
    LESSTHAN        reduce using rule 103 (pn_push_constant_and_type -> .)
    GREATERTHAN     reduce using rule 103 (pn_push_constant_and_type -> .)
    EQUAL           reduce using rule 103 (pn_push_constant_and_type -> .)
    COMMA           reduce using rule 103 (pn_push_constant_and_type -> .)
    RPAREN          reduce using rule 103 (pn_push_constant_and_type -> .)
    RSQUARE         reduce using rule 103 (pn_push_constant_and_type -> .)
    SEMICOLON       reduce using rule 103 (pn_push_constant_and_type -> .)
    AND             reduce using rule 103 (pn_push_constant_and_type -> .)
    OR              reduce using rule 103 (pn_push_constant_and_type -> .)
    TO              reduce using rule 103 (pn_push_constant_and_type -> .)
    DO              reduce using rule 103 (pn_push_constant_and_type -> .)

    pn_push_constant_and_type      shift and go to state 149

state 118

    (34) condicional -> WHILE pn_while_1 LPAREN . expresion pn_while_2 RPAREN DO bloque pn_while_3
    (69) expresion -> . comparacion aux_expresion
    (70) expresion -> . aux_comparacion
    (75) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (77) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (81) aux_comparacion -> . exp
    (82) exp -> . termino pn_addition_substraction
    (83) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (84) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (85) termino -> . factor pn_multiplication_division
    (86) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (87) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (88) factor -> . LPAREN expresion RPAREN
    (89) factor -> . PLUS var_cte
    (90) factor -> . PLUS llamada
    (91) factor -> . MINUS var_cte
    (92) factor -> . MINUS llamada
    (93) factor -> . var_cte
    (94) factor -> . llamada
    (95) var_cte -> . ID pn_push_operand_and_type
    (96) var_cte -> . CTE_INT pn_push_constant_and_type
    (97) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 104
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    ID              shift and go to state 103
    CTE_INT         shift and go to state 116
    CTE_FLOAT       shift and go to state 117

    expresion                      shift and go to state 150
    comparacion                    shift and go to state 107
    aux_comparacion                shift and go to state 108
    exp                            shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 113
    var_cte                        shift and go to state 114
    llamada                        shift and go to state 115

state 119

    (29) escritura -> WRITE LPAREN aux_escritura . RPAREN SEMICOLON

    RPAREN          shift and go to state 151


state 120

    (30) aux_escritura -> pn_push_write_operator . letrero pn_write
    (31) aux_escritura -> pn_push_write_operator . expresion pn_write
    (32) aux_escritura -> pn_push_write_operator . letrero pn_write COMMA aux_escritura
    (33) aux_escritura -> pn_push_write_operator . expresion pn_write COMMA aux_escritura
    (55) letrero -> . QUOTATION aux_letrero QUOTATION
    (56) letrero -> . QUOTATION QUOTATION
    (69) expresion -> . comparacion aux_expresion
    (70) expresion -> . aux_comparacion
    (75) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (77) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (81) aux_comparacion -> . exp
    (82) exp -> . termino pn_addition_substraction
    (83) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (84) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (85) termino -> . factor pn_multiplication_division
    (86) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (87) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (88) factor -> . LPAREN expresion RPAREN
    (89) factor -> . PLUS var_cte
    (90) factor -> . PLUS llamada
    (91) factor -> . MINUS var_cte
    (92) factor -> . MINUS llamada
    (93) factor -> . var_cte
    (94) factor -> . llamada
    (95) var_cte -> . ID pn_push_operand_and_type
    (96) var_cte -> . CTE_INT pn_push_constant_and_type
    (97) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    QUOTATION       shift and go to state 154
    LPAREN          shift and go to state 104
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    ID              shift and go to state 103
    CTE_INT         shift and go to state 116
    CTE_FLOAT       shift and go to state 117

    letrero                        shift and go to state 152
    expresion                      shift and go to state 153
    comparacion                    shift and go to state 107
    aux_comparacion                shift and go to state 108
    exp                            shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 113
    var_cte                        shift and go to state 114
    llamada                        shift and go to state 115

state 121

    (49) retorno -> RETURN pn_push_operator LPAREN . expresion pn_retorno RPAREN SEMICOLON
    (69) expresion -> . comparacion aux_expresion
    (70) expresion -> . aux_comparacion
    (75) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (77) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (81) aux_comparacion -> . exp
    (82) exp -> . termino pn_addition_substraction
    (83) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (84) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (85) termino -> . factor pn_multiplication_division
    (86) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (87) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (88) factor -> . LPAREN expresion RPAREN
    (89) factor -> . PLUS var_cte
    (90) factor -> . PLUS llamada
    (91) factor -> . MINUS var_cte
    (92) factor -> . MINUS llamada
    (93) factor -> . var_cte
    (94) factor -> . llamada
    (95) var_cte -> . ID pn_push_operand_and_type
    (96) var_cte -> . CTE_INT pn_push_constant_and_type
    (97) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 104
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    ID              shift and go to state 103
    CTE_INT         shift and go to state 116
    CTE_FLOAT       shift and go to state 117

    expresion                      shift and go to state 155
    comparacion                    shift and go to state 107
    aux_comparacion                shift and go to state 108
    exp                            shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 113
    var_cte                        shift and go to state 114
    llamada                        shift and go to state 115

state 122

    (50) lectura -> READ LPAREN aux_lectura . RPAREN SEMICOLON

    RPAREN          shift and go to state 156


state 123

    (51) aux_lectura -> pn_push_read_operator . ID pn_push_operand_and_type pn_read
    (52) aux_lectura -> pn_push_read_operator . ID pn_push_operand_and_type pn_read dimensiones
    (53) aux_lectura -> pn_push_read_operator . ID pn_push_operand_and_type pn_read COMMA aux_lectura
    (54) aux_lectura -> pn_push_read_operator . ID pn_push_operand_and_type pn_read dimensiones COMMA aux_lectura

    ID              shift and go to state 157


state 124

    (59) decision -> IF LPAREN expresion . pn_if_1 RPAREN THEN bloque pn_if_2
    (60) decision -> IF LPAREN expresion . pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2
    (116) pn_if_1 -> .

    RPAREN          reduce using rule 116 (pn_if_1 -> .)

    pn_if_1                        shift and go to state 158

state 125

    (64) no_condicional -> FOR ID pn_push_operand_and_type . dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (65) no_condicional -> FOR ID pn_push_operand_and_type . ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (66) dimensiones -> . LSQUARE expresion RSQUARE LSQUARE expresion RSQUARE
    (67) dimensiones -> . LSQUARE expresion COMMA expresion RSQUARE
    (68) dimensiones -> . LSQUARE expresion RSQUARE

    ASSIGN          shift and go to state 160
    LSQUARE         shift and go to state 102

    dimensiones                    shift and go to state 159

state 126

    (26) aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE . CTE_INT RSQUARE

    CTE_INT         shift and go to state 161


state 127

    (9) funcion -> tipo_retorno MODULE ID pn_add_function LPAREN parametros RPAREN vars bloque .

    VOID            reduce using rule 9 (funcion -> tipo_retorno MODULE ID pn_add_function LPAREN parametros RPAREN vars bloque .)
    INT             reduce using rule 9 (funcion -> tipo_retorno MODULE ID pn_add_function LPAREN parametros RPAREN vars bloque .)
    FLOAT           reduce using rule 9 (funcion -> tipo_retorno MODULE ID pn_add_function LPAREN parametros RPAREN vars bloque .)
    CHAR            reduce using rule 9 (funcion -> tipo_retorno MODULE ID pn_add_function LPAREN parametros RPAREN vars bloque .)
    MAIN            reduce using rule 9 (funcion -> tipo_retorno MODULE ID pn_add_function LPAREN parametros RPAREN vars bloque .)


state 128

    (22) parametros -> tipo ID pn_add_parameter COMMA . parametros
    (21) parametros -> . tipo ID pn_add_parameter
    (22) parametros -> . tipo ID pn_add_parameter COMMA parametros
    (18) tipo -> . INT pn_current_type
    (19) tipo -> . FLOAT pn_current_type
    (20) tipo -> . CHAR pn_current_type

    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    tipo                           shift and go to state 59
    parametros                     shift and go to state 162

state 129

    (47) asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN . pn_push_operator expresion pn_assign SEMICOLON
    (105) pn_push_operator -> .

    LPAREN          reduce using rule 105 (pn_push_operator -> .)
    PLUS            reduce using rule 105 (pn_push_operator -> .)
    MINUS           reduce using rule 105 (pn_push_operator -> .)
    ID              reduce using rule 105 (pn_push_operator -> .)
    CTE_INT         reduce using rule 105 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 105 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 163

state 130

    (48) asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator . expresion pn_assign SEMICOLON
    (69) expresion -> . comparacion aux_expresion
    (70) expresion -> . aux_comparacion
    (75) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (77) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (81) aux_comparacion -> . exp
    (82) exp -> . termino pn_addition_substraction
    (83) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (84) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (85) termino -> . factor pn_multiplication_division
    (86) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (87) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (88) factor -> . LPAREN expresion RPAREN
    (89) factor -> . PLUS var_cte
    (90) factor -> . PLUS llamada
    (91) factor -> . MINUS var_cte
    (92) factor -> . MINUS llamada
    (93) factor -> . var_cte
    (94) factor -> . llamada
    (95) var_cte -> . ID pn_push_operand_and_type
    (96) var_cte -> . CTE_INT pn_push_constant_and_type
    (97) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 104
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    ID              shift and go to state 103
    CTE_INT         shift and go to state 116
    CTE_FLOAT       shift and go to state 117

    expresion                      shift and go to state 164
    comparacion                    shift and go to state 107
    aux_comparacion                shift and go to state 108
    exp                            shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 113
    var_cte                        shift and go to state 114
    llamada                        shift and go to state 115

state 131

    (66) dimensiones -> LSQUARE expresion . RSQUARE LSQUARE expresion RSQUARE
    (67) dimensiones -> LSQUARE expresion . COMMA expresion RSQUARE
    (68) dimensiones -> LSQUARE expresion . RSQUARE

    RSQUARE         shift and go to state 165
    COMMA           shift and go to state 166


state 132

    (95) var_cte -> ID pn_push_operand_and_type .

    MULT            reduce using rule 95 (var_cte -> ID pn_push_operand_and_type .)
    DIV             reduce using rule 95 (var_cte -> ID pn_push_operand_and_type .)
    PLUS            reduce using rule 95 (var_cte -> ID pn_push_operand_and_type .)
    MINUS           reduce using rule 95 (var_cte -> ID pn_push_operand_and_type .)
    LESSTHAN        reduce using rule 95 (var_cte -> ID pn_push_operand_and_type .)
    GREATERTHAN     reduce using rule 95 (var_cte -> ID pn_push_operand_and_type .)
    EQUAL           reduce using rule 95 (var_cte -> ID pn_push_operand_and_type .)
    COMMA           reduce using rule 95 (var_cte -> ID pn_push_operand_and_type .)
    RPAREN          reduce using rule 95 (var_cte -> ID pn_push_operand_and_type .)
    RSQUARE         reduce using rule 95 (var_cte -> ID pn_push_operand_and_type .)
    SEMICOLON       reduce using rule 95 (var_cte -> ID pn_push_operand_and_type .)
    AND             reduce using rule 95 (var_cte -> ID pn_push_operand_and_type .)
    OR              reduce using rule 95 (var_cte -> ID pn_push_operand_and_type .)
    TO              reduce using rule 95 (var_cte -> ID pn_push_operand_and_type .)
    DO              reduce using rule 95 (var_cte -> ID pn_push_operand_and_type .)


state 133

    (88) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 167


state 134

    (61) llamada -> ID LPAREN aux_llamada RPAREN .

    SEMICOLON       reduce using rule 61 (llamada -> ID LPAREN aux_llamada RPAREN .)
    MULT            reduce using rule 61 (llamada -> ID LPAREN aux_llamada RPAREN .)
    DIV             reduce using rule 61 (llamada -> ID LPAREN aux_llamada RPAREN .)
    PLUS            reduce using rule 61 (llamada -> ID LPAREN aux_llamada RPAREN .)
    MINUS           reduce using rule 61 (llamada -> ID LPAREN aux_llamada RPAREN .)
    LESSTHAN        reduce using rule 61 (llamada -> ID LPAREN aux_llamada RPAREN .)
    GREATERTHAN     reduce using rule 61 (llamada -> ID LPAREN aux_llamada RPAREN .)
    EQUAL           reduce using rule 61 (llamada -> ID LPAREN aux_llamada RPAREN .)
    COMMA           reduce using rule 61 (llamada -> ID LPAREN aux_llamada RPAREN .)
    RPAREN          reduce using rule 61 (llamada -> ID LPAREN aux_llamada RPAREN .)
    RSQUARE         reduce using rule 61 (llamada -> ID LPAREN aux_llamada RPAREN .)
    AND             reduce using rule 61 (llamada -> ID LPAREN aux_llamada RPAREN .)
    OR              reduce using rule 61 (llamada -> ID LPAREN aux_llamada RPAREN .)
    TO              reduce using rule 61 (llamada -> ID LPAREN aux_llamada RPAREN .)
    DO              reduce using rule 61 (llamada -> ID LPAREN aux_llamada RPAREN .)


state 135

    (63) aux_llamada -> expresion COMMA . aux_llamada
    (62) aux_llamada -> . expresion
    (63) aux_llamada -> . expresion COMMA aux_llamada
    (69) expresion -> . comparacion aux_expresion
    (70) expresion -> . aux_comparacion
    (75) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (77) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (81) aux_comparacion -> . exp
    (82) exp -> . termino pn_addition_substraction
    (83) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (84) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (85) termino -> . factor pn_multiplication_division
    (86) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (87) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (88) factor -> . LPAREN expresion RPAREN
    (89) factor -> . PLUS var_cte
    (90) factor -> . PLUS llamada
    (91) factor -> . MINUS var_cte
    (92) factor -> . MINUS llamada
    (93) factor -> . var_cte
    (94) factor -> . llamada
    (95) var_cte -> . ID pn_push_operand_and_type
    (96) var_cte -> . CTE_INT pn_push_constant_and_type
    (97) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 104
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    ID              shift and go to state 103
    CTE_INT         shift and go to state 116
    CTE_FLOAT       shift and go to state 117

    expresion                      shift and go to state 106
    aux_llamada                    shift and go to state 168
    comparacion                    shift and go to state 107
    aux_comparacion                shift and go to state 108
    exp                            shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 113
    var_cte                        shift and go to state 114
    llamada                        shift and go to state 115

state 136

    (69) expresion -> comparacion aux_expresion .

    COMMA           reduce using rule 69 (expresion -> comparacion aux_expresion .)
    RPAREN          reduce using rule 69 (expresion -> comparacion aux_expresion .)
    RSQUARE         reduce using rule 69 (expresion -> comparacion aux_expresion .)
    SEMICOLON       reduce using rule 69 (expresion -> comparacion aux_expresion .)
    TO              reduce using rule 69 (expresion -> comparacion aux_expresion .)
    DO              reduce using rule 69 (expresion -> comparacion aux_expresion .)


state 137

    (71) aux_expresion -> AND . pn_push_operator comparacion pn_and
    (73) aux_expresion -> AND . pn_push_operator comparacion pn_and aux_expresion
    (105) pn_push_operator -> .

    LPAREN          reduce using rule 105 (pn_push_operator -> .)
    PLUS            reduce using rule 105 (pn_push_operator -> .)
    MINUS           reduce using rule 105 (pn_push_operator -> .)
    ID              reduce using rule 105 (pn_push_operator -> .)
    CTE_INT         reduce using rule 105 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 105 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 169

state 138

    (72) aux_expresion -> OR . pn_push_operator comparacion pn_or
    (74) aux_expresion -> OR . pn_push_operator comparacion pn_or aux_expresion
    (105) pn_push_operator -> .

    LPAREN          reduce using rule 105 (pn_push_operator -> .)
    PLUS            reduce using rule 105 (pn_push_operator -> .)
    MINUS           reduce using rule 105 (pn_push_operator -> .)
    ID              reduce using rule 105 (pn_push_operator -> .)
    CTE_INT         reduce using rule 105 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 105 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 170

state 139

    (75) comparacion -> exp LESSTHAN . pn_push_operator exp pn_comparison
    (78) aux_comparacion -> exp LESSTHAN . pn_push_operator exp pn_comparison
    (105) pn_push_operator -> .

    LPAREN          reduce using rule 105 (pn_push_operator -> .)
    PLUS            reduce using rule 105 (pn_push_operator -> .)
    MINUS           reduce using rule 105 (pn_push_operator -> .)
    ID              reduce using rule 105 (pn_push_operator -> .)
    CTE_INT         reduce using rule 105 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 105 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 171

state 140

    (76) comparacion -> exp GREATERTHAN . pn_push_operator exp pn_comparison
    (79) aux_comparacion -> exp GREATERTHAN . pn_push_operator exp pn_comparison
    (105) pn_push_operator -> .

    LPAREN          reduce using rule 105 (pn_push_operator -> .)
    PLUS            reduce using rule 105 (pn_push_operator -> .)
    MINUS           reduce using rule 105 (pn_push_operator -> .)
    ID              reduce using rule 105 (pn_push_operator -> .)
    CTE_INT         reduce using rule 105 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 105 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 172

state 141

    (77) comparacion -> exp EQUAL . pn_push_operator exp pn_comparison
    (80) aux_comparacion -> exp EQUAL . pn_push_operator exp pn_comparison
    (105) pn_push_operator -> .

    LPAREN          reduce using rule 105 (pn_push_operator -> .)
    PLUS            reduce using rule 105 (pn_push_operator -> .)
    MINUS           reduce using rule 105 (pn_push_operator -> .)
    ID              reduce using rule 105 (pn_push_operator -> .)
    CTE_INT         reduce using rule 105 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 105 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 173

state 142

    (82) exp -> termino pn_addition_substraction .
    (83) exp -> termino pn_addition_substraction . PLUS pn_push_operator exp
    (84) exp -> termino pn_addition_substraction . MINUS pn_push_operator exp

    LESSTHAN        reduce using rule 82 (exp -> termino pn_addition_substraction .)
    GREATERTHAN     reduce using rule 82 (exp -> termino pn_addition_substraction .)
    EQUAL           reduce using rule 82 (exp -> termino pn_addition_substraction .)
    COMMA           reduce using rule 82 (exp -> termino pn_addition_substraction .)
    RPAREN          reduce using rule 82 (exp -> termino pn_addition_substraction .)
    RSQUARE         reduce using rule 82 (exp -> termino pn_addition_substraction .)
    SEMICOLON       reduce using rule 82 (exp -> termino pn_addition_substraction .)
    AND             reduce using rule 82 (exp -> termino pn_addition_substraction .)
    OR              reduce using rule 82 (exp -> termino pn_addition_substraction .)
    TO              reduce using rule 82 (exp -> termino pn_addition_substraction .)
    DO              reduce using rule 82 (exp -> termino pn_addition_substraction .)
    PLUS            shift and go to state 174
    MINUS           shift and go to state 175


state 143

    (89) factor -> PLUS var_cte .

    MULT            reduce using rule 89 (factor -> PLUS var_cte .)
    DIV             reduce using rule 89 (factor -> PLUS var_cte .)
    PLUS            reduce using rule 89 (factor -> PLUS var_cte .)
    MINUS           reduce using rule 89 (factor -> PLUS var_cte .)
    LESSTHAN        reduce using rule 89 (factor -> PLUS var_cte .)
    GREATERTHAN     reduce using rule 89 (factor -> PLUS var_cte .)
    EQUAL           reduce using rule 89 (factor -> PLUS var_cte .)
    COMMA           reduce using rule 89 (factor -> PLUS var_cte .)
    RPAREN          reduce using rule 89 (factor -> PLUS var_cte .)
    RSQUARE         reduce using rule 89 (factor -> PLUS var_cte .)
    SEMICOLON       reduce using rule 89 (factor -> PLUS var_cte .)
    AND             reduce using rule 89 (factor -> PLUS var_cte .)
    OR              reduce using rule 89 (factor -> PLUS var_cte .)
    TO              reduce using rule 89 (factor -> PLUS var_cte .)
    DO              reduce using rule 89 (factor -> PLUS var_cte .)


state 144

    (90) factor -> PLUS llamada .

    MULT            reduce using rule 90 (factor -> PLUS llamada .)
    DIV             reduce using rule 90 (factor -> PLUS llamada .)
    PLUS            reduce using rule 90 (factor -> PLUS llamada .)
    MINUS           reduce using rule 90 (factor -> PLUS llamada .)
    LESSTHAN        reduce using rule 90 (factor -> PLUS llamada .)
    GREATERTHAN     reduce using rule 90 (factor -> PLUS llamada .)
    EQUAL           reduce using rule 90 (factor -> PLUS llamada .)
    COMMA           reduce using rule 90 (factor -> PLUS llamada .)
    RPAREN          reduce using rule 90 (factor -> PLUS llamada .)
    RSQUARE         reduce using rule 90 (factor -> PLUS llamada .)
    SEMICOLON       reduce using rule 90 (factor -> PLUS llamada .)
    AND             reduce using rule 90 (factor -> PLUS llamada .)
    OR              reduce using rule 90 (factor -> PLUS llamada .)
    TO              reduce using rule 90 (factor -> PLUS llamada .)
    DO              reduce using rule 90 (factor -> PLUS llamada .)


state 145

    (91) factor -> MINUS var_cte .

    MULT            reduce using rule 91 (factor -> MINUS var_cte .)
    DIV             reduce using rule 91 (factor -> MINUS var_cte .)
    PLUS            reduce using rule 91 (factor -> MINUS var_cte .)
    MINUS           reduce using rule 91 (factor -> MINUS var_cte .)
    LESSTHAN        reduce using rule 91 (factor -> MINUS var_cte .)
    GREATERTHAN     reduce using rule 91 (factor -> MINUS var_cte .)
    EQUAL           reduce using rule 91 (factor -> MINUS var_cte .)
    COMMA           reduce using rule 91 (factor -> MINUS var_cte .)
    RPAREN          reduce using rule 91 (factor -> MINUS var_cte .)
    RSQUARE         reduce using rule 91 (factor -> MINUS var_cte .)
    SEMICOLON       reduce using rule 91 (factor -> MINUS var_cte .)
    AND             reduce using rule 91 (factor -> MINUS var_cte .)
    OR              reduce using rule 91 (factor -> MINUS var_cte .)
    TO              reduce using rule 91 (factor -> MINUS var_cte .)
    DO              reduce using rule 91 (factor -> MINUS var_cte .)


state 146

    (92) factor -> MINUS llamada .

    MULT            reduce using rule 92 (factor -> MINUS llamada .)
    DIV             reduce using rule 92 (factor -> MINUS llamada .)
    PLUS            reduce using rule 92 (factor -> MINUS llamada .)
    MINUS           reduce using rule 92 (factor -> MINUS llamada .)
    LESSTHAN        reduce using rule 92 (factor -> MINUS llamada .)
    GREATERTHAN     reduce using rule 92 (factor -> MINUS llamada .)
    EQUAL           reduce using rule 92 (factor -> MINUS llamada .)
    COMMA           reduce using rule 92 (factor -> MINUS llamada .)
    RPAREN          reduce using rule 92 (factor -> MINUS llamada .)
    RSQUARE         reduce using rule 92 (factor -> MINUS llamada .)
    SEMICOLON       reduce using rule 92 (factor -> MINUS llamada .)
    AND             reduce using rule 92 (factor -> MINUS llamada .)
    OR              reduce using rule 92 (factor -> MINUS llamada .)
    TO              reduce using rule 92 (factor -> MINUS llamada .)
    DO              reduce using rule 92 (factor -> MINUS llamada .)


state 147

    (85) termino -> factor pn_multiplication_division .
    (86) termino -> factor pn_multiplication_division . MULT pn_push_operator termino
    (87) termino -> factor pn_multiplication_division . DIV pn_push_operator termino

    PLUS            reduce using rule 85 (termino -> factor pn_multiplication_division .)
    MINUS           reduce using rule 85 (termino -> factor pn_multiplication_division .)
    LESSTHAN        reduce using rule 85 (termino -> factor pn_multiplication_division .)
    GREATERTHAN     reduce using rule 85 (termino -> factor pn_multiplication_division .)
    EQUAL           reduce using rule 85 (termino -> factor pn_multiplication_division .)
    COMMA           reduce using rule 85 (termino -> factor pn_multiplication_division .)
    RPAREN          reduce using rule 85 (termino -> factor pn_multiplication_division .)
    RSQUARE         reduce using rule 85 (termino -> factor pn_multiplication_division .)
    SEMICOLON       reduce using rule 85 (termino -> factor pn_multiplication_division .)
    AND             reduce using rule 85 (termino -> factor pn_multiplication_division .)
    OR              reduce using rule 85 (termino -> factor pn_multiplication_division .)
    TO              reduce using rule 85 (termino -> factor pn_multiplication_division .)
    DO              reduce using rule 85 (termino -> factor pn_multiplication_division .)
    MULT            shift and go to state 176
    DIV             shift and go to state 177


state 148

    (96) var_cte -> CTE_INT pn_push_constant_and_type .

    MULT            reduce using rule 96 (var_cte -> CTE_INT pn_push_constant_and_type .)
    DIV             reduce using rule 96 (var_cte -> CTE_INT pn_push_constant_and_type .)
    PLUS            reduce using rule 96 (var_cte -> CTE_INT pn_push_constant_and_type .)
    MINUS           reduce using rule 96 (var_cte -> CTE_INT pn_push_constant_and_type .)
    LESSTHAN        reduce using rule 96 (var_cte -> CTE_INT pn_push_constant_and_type .)
    GREATERTHAN     reduce using rule 96 (var_cte -> CTE_INT pn_push_constant_and_type .)
    EQUAL           reduce using rule 96 (var_cte -> CTE_INT pn_push_constant_and_type .)
    COMMA           reduce using rule 96 (var_cte -> CTE_INT pn_push_constant_and_type .)
    RPAREN          reduce using rule 96 (var_cte -> CTE_INT pn_push_constant_and_type .)
    RSQUARE         reduce using rule 96 (var_cte -> CTE_INT pn_push_constant_and_type .)
    SEMICOLON       reduce using rule 96 (var_cte -> CTE_INT pn_push_constant_and_type .)
    AND             reduce using rule 96 (var_cte -> CTE_INT pn_push_constant_and_type .)
    OR              reduce using rule 96 (var_cte -> CTE_INT pn_push_constant_and_type .)
    TO              reduce using rule 96 (var_cte -> CTE_INT pn_push_constant_and_type .)
    DO              reduce using rule 96 (var_cte -> CTE_INT pn_push_constant_and_type .)


state 149

    (97) var_cte -> CTE_FLOAT pn_push_constant_and_type .

    MULT            reduce using rule 97 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    DIV             reduce using rule 97 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    PLUS            reduce using rule 97 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    MINUS           reduce using rule 97 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    LESSTHAN        reduce using rule 97 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    GREATERTHAN     reduce using rule 97 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    EQUAL           reduce using rule 97 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    COMMA           reduce using rule 97 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    RPAREN          reduce using rule 97 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    RSQUARE         reduce using rule 97 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    SEMICOLON       reduce using rule 97 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    AND             reduce using rule 97 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    OR              reduce using rule 97 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    TO              reduce using rule 97 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)
    DO              reduce using rule 97 (var_cte -> CTE_FLOAT pn_push_constant_and_type .)


state 150

    (34) condicional -> WHILE pn_while_1 LPAREN expresion . pn_while_2 RPAREN DO bloque pn_while_3
    (120) pn_while_2 -> .

    RPAREN          reduce using rule 120 (pn_while_2 -> .)

    pn_while_2                     shift and go to state 178

state 151

    (29) escritura -> WRITE LPAREN aux_escritura RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 179


state 152

    (30) aux_escritura -> pn_push_write_operator letrero . pn_write
    (32) aux_escritura -> pn_push_write_operator letrero . pn_write COMMA aux_escritura
    (112) pn_write -> .

    COMMA           reduce using rule 112 (pn_write -> .)
    RPAREN          reduce using rule 112 (pn_write -> .)

    pn_write                       shift and go to state 180

state 153

    (31) aux_escritura -> pn_push_write_operator expresion . pn_write
    (33) aux_escritura -> pn_push_write_operator expresion . pn_write COMMA aux_escritura
    (112) pn_write -> .

    COMMA           reduce using rule 112 (pn_write -> .)
    RPAREN          reduce using rule 112 (pn_write -> .)

    pn_write                       shift and go to state 181

state 154

    (55) letrero -> QUOTATION . aux_letrero QUOTATION
    (56) letrero -> QUOTATION . QUOTATION
    (57) aux_letrero -> . CTE_CHAR
    (58) aux_letrero -> . CTE_CHAR aux_letrero

    QUOTATION       shift and go to state 182
    CTE_CHAR        shift and go to state 184

    aux_letrero                    shift and go to state 183

state 155

    (49) retorno -> RETURN pn_push_operator LPAREN expresion . pn_retorno RPAREN SEMICOLON
    (127) pn_retorno -> .

    RPAREN          reduce using rule 127 (pn_retorno -> .)

    pn_retorno                     shift and go to state 185

state 156

    (50) lectura -> READ LPAREN aux_lectura RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 186


state 157

    (51) aux_lectura -> pn_push_read_operator ID . pn_push_operand_and_type pn_read
    (52) aux_lectura -> pn_push_read_operator ID . pn_push_operand_and_type pn_read dimensiones
    (53) aux_lectura -> pn_push_read_operator ID . pn_push_operand_and_type pn_read COMMA aux_lectura
    (54) aux_lectura -> pn_push_read_operator ID . pn_push_operand_and_type pn_read dimensiones COMMA aux_lectura
    (104) pn_push_operand_and_type -> .

    COMMA           reduce using rule 104 (pn_push_operand_and_type -> .)
    LSQUARE         reduce using rule 104 (pn_push_operand_and_type -> .)
    RPAREN          reduce using rule 104 (pn_push_operand_and_type -> .)

    pn_push_operand_and_type       shift and go to state 187

state 158

    (59) decision -> IF LPAREN expresion pn_if_1 . RPAREN THEN bloque pn_if_2
    (60) decision -> IF LPAREN expresion pn_if_1 . RPAREN THEN bloque ELSE pn_else bloque pn_if_2

    RPAREN          shift and go to state 188


state 159

    (64) no_condicional -> FOR ID pn_push_operand_and_type dimensiones . ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back

    ASSIGN          shift and go to state 189


state 160

    (65) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN . pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (105) pn_push_operator -> .

    LPAREN          reduce using rule 105 (pn_push_operator -> .)
    PLUS            reduce using rule 105 (pn_push_operator -> .)
    MINUS           reduce using rule 105 (pn_push_operator -> .)
    ID              reduce using rule 105 (pn_push_operator -> .)
    CTE_INT         reduce using rule 105 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 105 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 190

state 161

    (26) aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT . RSQUARE

    RSQUARE         shift and go to state 191


state 162

    (22) parametros -> tipo ID pn_add_parameter COMMA parametros .

    RPAREN          reduce using rule 22 (parametros -> tipo ID pn_add_parameter COMMA parametros .)


state 163

    (47) asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator . expresion pn_assign SEMICOLON
    (69) expresion -> . comparacion aux_expresion
    (70) expresion -> . aux_comparacion
    (75) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (77) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (81) aux_comparacion -> . exp
    (82) exp -> . termino pn_addition_substraction
    (83) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (84) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (85) termino -> . factor pn_multiplication_division
    (86) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (87) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (88) factor -> . LPAREN expresion RPAREN
    (89) factor -> . PLUS var_cte
    (90) factor -> . PLUS llamada
    (91) factor -> . MINUS var_cte
    (92) factor -> . MINUS llamada
    (93) factor -> . var_cte
    (94) factor -> . llamada
    (95) var_cte -> . ID pn_push_operand_and_type
    (96) var_cte -> . CTE_INT pn_push_constant_and_type
    (97) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 104
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    ID              shift and go to state 103
    CTE_INT         shift and go to state 116
    CTE_FLOAT       shift and go to state 117

    expresion                      shift and go to state 192
    comparacion                    shift and go to state 107
    aux_comparacion                shift and go to state 108
    exp                            shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 113
    var_cte                        shift and go to state 114
    llamada                        shift and go to state 115

state 164

    (48) asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion . pn_assign SEMICOLON
    (108) pn_assign -> .

    SEMICOLON       reduce using rule 108 (pn_assign -> .)

    pn_assign                      shift and go to state 193

state 165

    (66) dimensiones -> LSQUARE expresion RSQUARE . LSQUARE expresion RSQUARE
    (68) dimensiones -> LSQUARE expresion RSQUARE .

    LSQUARE         shift and go to state 194
    ASSIGN          reduce using rule 68 (dimensiones -> LSQUARE expresion RSQUARE .)
    COMMA           reduce using rule 68 (dimensiones -> LSQUARE expresion RSQUARE .)
    RPAREN          reduce using rule 68 (dimensiones -> LSQUARE expresion RSQUARE .)


state 166

    (67) dimensiones -> LSQUARE expresion COMMA . expresion RSQUARE
    (69) expresion -> . comparacion aux_expresion
    (70) expresion -> . aux_comparacion
    (75) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (77) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (81) aux_comparacion -> . exp
    (82) exp -> . termino pn_addition_substraction
    (83) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (84) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (85) termino -> . factor pn_multiplication_division
    (86) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (87) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (88) factor -> . LPAREN expresion RPAREN
    (89) factor -> . PLUS var_cte
    (90) factor -> . PLUS llamada
    (91) factor -> . MINUS var_cte
    (92) factor -> . MINUS llamada
    (93) factor -> . var_cte
    (94) factor -> . llamada
    (95) var_cte -> . ID pn_push_operand_and_type
    (96) var_cte -> . CTE_INT pn_push_constant_and_type
    (97) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 104
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    ID              shift and go to state 103
    CTE_INT         shift and go to state 116
    CTE_FLOAT       shift and go to state 117

    expresion                      shift and go to state 195
    comparacion                    shift and go to state 107
    aux_comparacion                shift and go to state 108
    exp                            shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 113
    var_cte                        shift and go to state 114
    llamada                        shift and go to state 115

state 167

    (88) factor -> LPAREN expresion RPAREN .

    MULT            reduce using rule 88 (factor -> LPAREN expresion RPAREN .)
    DIV             reduce using rule 88 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 88 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 88 (factor -> LPAREN expresion RPAREN .)
    LESSTHAN        reduce using rule 88 (factor -> LPAREN expresion RPAREN .)
    GREATERTHAN     reduce using rule 88 (factor -> LPAREN expresion RPAREN .)
    EQUAL           reduce using rule 88 (factor -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 88 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 88 (factor -> LPAREN expresion RPAREN .)
    RSQUARE         reduce using rule 88 (factor -> LPAREN expresion RPAREN .)
    SEMICOLON       reduce using rule 88 (factor -> LPAREN expresion RPAREN .)
    AND             reduce using rule 88 (factor -> LPAREN expresion RPAREN .)
    OR              reduce using rule 88 (factor -> LPAREN expresion RPAREN .)
    TO              reduce using rule 88 (factor -> LPAREN expresion RPAREN .)
    DO              reduce using rule 88 (factor -> LPAREN expresion RPAREN .)


state 168

    (63) aux_llamada -> expresion COMMA aux_llamada .

    RPAREN          reduce using rule 63 (aux_llamada -> expresion COMMA aux_llamada .)


state 169

    (71) aux_expresion -> AND pn_push_operator . comparacion pn_and
    (73) aux_expresion -> AND pn_push_operator . comparacion pn_and aux_expresion
    (75) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (77) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (82) exp -> . termino pn_addition_substraction
    (83) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (84) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (85) termino -> . factor pn_multiplication_division
    (86) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (87) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (88) factor -> . LPAREN expresion RPAREN
    (89) factor -> . PLUS var_cte
    (90) factor -> . PLUS llamada
    (91) factor -> . MINUS var_cte
    (92) factor -> . MINUS llamada
    (93) factor -> . var_cte
    (94) factor -> . llamada
    (95) var_cte -> . ID pn_push_operand_and_type
    (96) var_cte -> . CTE_INT pn_push_constant_and_type
    (97) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 104
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    ID              shift and go to state 103
    CTE_INT         shift and go to state 116
    CTE_FLOAT       shift and go to state 117

    comparacion                    shift and go to state 196
    exp                            shift and go to state 197
    termino                        shift and go to state 110
    factor                         shift and go to state 113
    var_cte                        shift and go to state 114
    llamada                        shift and go to state 115

state 170

    (72) aux_expresion -> OR pn_push_operator . comparacion pn_or
    (74) aux_expresion -> OR pn_push_operator . comparacion pn_or aux_expresion
    (75) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (77) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (82) exp -> . termino pn_addition_substraction
    (83) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (84) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (85) termino -> . factor pn_multiplication_division
    (86) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (87) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (88) factor -> . LPAREN expresion RPAREN
    (89) factor -> . PLUS var_cte
    (90) factor -> . PLUS llamada
    (91) factor -> . MINUS var_cte
    (92) factor -> . MINUS llamada
    (93) factor -> . var_cte
    (94) factor -> . llamada
    (95) var_cte -> . ID pn_push_operand_and_type
    (96) var_cte -> . CTE_INT pn_push_constant_and_type
    (97) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 104
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    ID              shift and go to state 103
    CTE_INT         shift and go to state 116
    CTE_FLOAT       shift and go to state 117

    comparacion                    shift and go to state 198
    exp                            shift and go to state 197
    termino                        shift and go to state 110
    factor                         shift and go to state 113
    var_cte                        shift and go to state 114
    llamada                        shift and go to state 115

state 171

    (75) comparacion -> exp LESSTHAN pn_push_operator . exp pn_comparison
    (78) aux_comparacion -> exp LESSTHAN pn_push_operator . exp pn_comparison
    (82) exp -> . termino pn_addition_substraction
    (83) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (84) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (85) termino -> . factor pn_multiplication_division
    (86) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (87) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (88) factor -> . LPAREN expresion RPAREN
    (89) factor -> . PLUS var_cte
    (90) factor -> . PLUS llamada
    (91) factor -> . MINUS var_cte
    (92) factor -> . MINUS llamada
    (93) factor -> . var_cte
    (94) factor -> . llamada
    (95) var_cte -> . ID pn_push_operand_and_type
    (96) var_cte -> . CTE_INT pn_push_constant_and_type
    (97) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 104
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    ID              shift and go to state 103
    CTE_INT         shift and go to state 116
    CTE_FLOAT       shift and go to state 117

    exp                            shift and go to state 199
    termino                        shift and go to state 110
    factor                         shift and go to state 113
    var_cte                        shift and go to state 114
    llamada                        shift and go to state 115

state 172

    (76) comparacion -> exp GREATERTHAN pn_push_operator . exp pn_comparison
    (79) aux_comparacion -> exp GREATERTHAN pn_push_operator . exp pn_comparison
    (82) exp -> . termino pn_addition_substraction
    (83) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (84) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (85) termino -> . factor pn_multiplication_division
    (86) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (87) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (88) factor -> . LPAREN expresion RPAREN
    (89) factor -> . PLUS var_cte
    (90) factor -> . PLUS llamada
    (91) factor -> . MINUS var_cte
    (92) factor -> . MINUS llamada
    (93) factor -> . var_cte
    (94) factor -> . llamada
    (95) var_cte -> . ID pn_push_operand_and_type
    (96) var_cte -> . CTE_INT pn_push_constant_and_type
    (97) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 104
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    ID              shift and go to state 103
    CTE_INT         shift and go to state 116
    CTE_FLOAT       shift and go to state 117

    exp                            shift and go to state 200
    termino                        shift and go to state 110
    factor                         shift and go to state 113
    var_cte                        shift and go to state 114
    llamada                        shift and go to state 115

state 173

    (77) comparacion -> exp EQUAL pn_push_operator . exp pn_comparison
    (80) aux_comparacion -> exp EQUAL pn_push_operator . exp pn_comparison
    (82) exp -> . termino pn_addition_substraction
    (83) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (84) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (85) termino -> . factor pn_multiplication_division
    (86) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (87) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (88) factor -> . LPAREN expresion RPAREN
    (89) factor -> . PLUS var_cte
    (90) factor -> . PLUS llamada
    (91) factor -> . MINUS var_cte
    (92) factor -> . MINUS llamada
    (93) factor -> . var_cte
    (94) factor -> . llamada
    (95) var_cte -> . ID pn_push_operand_and_type
    (96) var_cte -> . CTE_INT pn_push_constant_and_type
    (97) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 104
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    ID              shift and go to state 103
    CTE_INT         shift and go to state 116
    CTE_FLOAT       shift and go to state 117

    exp                            shift and go to state 201
    termino                        shift and go to state 110
    factor                         shift and go to state 113
    var_cte                        shift and go to state 114
    llamada                        shift and go to state 115

state 174

    (83) exp -> termino pn_addition_substraction PLUS . pn_push_operator exp
    (105) pn_push_operator -> .

    LPAREN          reduce using rule 105 (pn_push_operator -> .)
    PLUS            reduce using rule 105 (pn_push_operator -> .)
    MINUS           reduce using rule 105 (pn_push_operator -> .)
    ID              reduce using rule 105 (pn_push_operator -> .)
    CTE_INT         reduce using rule 105 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 105 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 202

state 175

    (84) exp -> termino pn_addition_substraction MINUS . pn_push_operator exp
    (105) pn_push_operator -> .

    LPAREN          reduce using rule 105 (pn_push_operator -> .)
    PLUS            reduce using rule 105 (pn_push_operator -> .)
    MINUS           reduce using rule 105 (pn_push_operator -> .)
    ID              reduce using rule 105 (pn_push_operator -> .)
    CTE_INT         reduce using rule 105 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 105 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 203

state 176

    (86) termino -> factor pn_multiplication_division MULT . pn_push_operator termino
    (105) pn_push_operator -> .

    LPAREN          reduce using rule 105 (pn_push_operator -> .)
    PLUS            reduce using rule 105 (pn_push_operator -> .)
    MINUS           reduce using rule 105 (pn_push_operator -> .)
    ID              reduce using rule 105 (pn_push_operator -> .)
    CTE_INT         reduce using rule 105 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 105 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 204

state 177

    (87) termino -> factor pn_multiplication_division DIV . pn_push_operator termino
    (105) pn_push_operator -> .

    LPAREN          reduce using rule 105 (pn_push_operator -> .)
    PLUS            reduce using rule 105 (pn_push_operator -> .)
    MINUS           reduce using rule 105 (pn_push_operator -> .)
    ID              reduce using rule 105 (pn_push_operator -> .)
    CTE_INT         reduce using rule 105 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 105 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 205

state 178

    (34) condicional -> WHILE pn_while_1 LPAREN expresion pn_while_2 . RPAREN DO bloque pn_while_3

    RPAREN          shift and go to state 206


state 179

    (29) escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON .

    ID              reduce using rule 29 (escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON .)
    WHILE           reduce using rule 29 (escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON .)
    WRITE           reduce using rule 29 (escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON .)
    RETURN          reduce using rule 29 (escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON .)
    READ            reduce using rule 29 (escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON .)
    IF              reduce using rule 29 (escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON .)
    FOR             reduce using rule 29 (escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 29 (escritura -> WRITE LPAREN aux_escritura RPAREN SEMICOLON .)


state 180

    (30) aux_escritura -> pn_push_write_operator letrero pn_write .
    (32) aux_escritura -> pn_push_write_operator letrero pn_write . COMMA aux_escritura

    RPAREN          reduce using rule 30 (aux_escritura -> pn_push_write_operator letrero pn_write .)
    COMMA           shift and go to state 207


state 181

    (31) aux_escritura -> pn_push_write_operator expresion pn_write .
    (33) aux_escritura -> pn_push_write_operator expresion pn_write . COMMA aux_escritura

    RPAREN          reduce using rule 31 (aux_escritura -> pn_push_write_operator expresion pn_write .)
    COMMA           shift and go to state 208


state 182

    (56) letrero -> QUOTATION QUOTATION .

    COMMA           reduce using rule 56 (letrero -> QUOTATION QUOTATION .)
    RPAREN          reduce using rule 56 (letrero -> QUOTATION QUOTATION .)


state 183

    (55) letrero -> QUOTATION aux_letrero . QUOTATION

    QUOTATION       shift and go to state 209


state 184

    (57) aux_letrero -> CTE_CHAR .
    (58) aux_letrero -> CTE_CHAR . aux_letrero
    (57) aux_letrero -> . CTE_CHAR
    (58) aux_letrero -> . CTE_CHAR aux_letrero

    QUOTATION       reduce using rule 57 (aux_letrero -> CTE_CHAR .)
    CTE_CHAR        shift and go to state 184

    aux_letrero                    shift and go to state 210

state 185

    (49) retorno -> RETURN pn_push_operator LPAREN expresion pn_retorno . RPAREN SEMICOLON

    RPAREN          shift and go to state 211


state 186

    (50) lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON .

    ID              reduce using rule 50 (lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON .)
    WHILE           reduce using rule 50 (lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON .)
    WRITE           reduce using rule 50 (lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON .)
    RETURN          reduce using rule 50 (lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON .)
    READ            reduce using rule 50 (lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON .)
    IF              reduce using rule 50 (lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON .)
    FOR             reduce using rule 50 (lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 50 (lectura -> READ LPAREN aux_lectura RPAREN SEMICOLON .)


state 187

    (51) aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type . pn_read
    (52) aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type . pn_read dimensiones
    (53) aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type . pn_read COMMA aux_lectura
    (54) aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type . pn_read dimensiones COMMA aux_lectura
    (110) pn_read -> .

    COMMA           reduce using rule 110 (pn_read -> .)
    LSQUARE         reduce using rule 110 (pn_read -> .)
    RPAREN          reduce using rule 110 (pn_read -> .)

    pn_read                        shift and go to state 212

state 188

    (59) decision -> IF LPAREN expresion pn_if_1 RPAREN . THEN bloque pn_if_2
    (60) decision -> IF LPAREN expresion pn_if_1 RPAREN . THEN bloque ELSE pn_else bloque pn_if_2

    THEN            shift and go to state 213


state 189

    (64) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN . pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (105) pn_push_operator -> .

    LPAREN          reduce using rule 105 (pn_push_operator -> .)
    PLUS            reduce using rule 105 (pn_push_operator -> .)
    MINUS           reduce using rule 105 (pn_push_operator -> .)
    ID              reduce using rule 105 (pn_push_operator -> .)
    CTE_INT         reduce using rule 105 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 105 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 214

state 190

    (65) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator . expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (69) expresion -> . comparacion aux_expresion
    (70) expresion -> . aux_comparacion
    (75) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (77) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (81) aux_comparacion -> . exp
    (82) exp -> . termino pn_addition_substraction
    (83) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (84) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (85) termino -> . factor pn_multiplication_division
    (86) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (87) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (88) factor -> . LPAREN expresion RPAREN
    (89) factor -> . PLUS var_cte
    (90) factor -> . PLUS llamada
    (91) factor -> . MINUS var_cte
    (92) factor -> . MINUS llamada
    (93) factor -> . var_cte
    (94) factor -> . llamada
    (95) var_cte -> . ID pn_push_operand_and_type
    (96) var_cte -> . CTE_INT pn_push_constant_and_type
    (97) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 104
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    ID              shift and go to state 103
    CTE_INT         shift and go to state 116
    CTE_FLOAT       shift and go to state 117

    expresion                      shift and go to state 215
    comparacion                    shift and go to state 107
    aux_comparacion                shift and go to state 108
    exp                            shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 113
    var_cte                        shift and go to state 114
    llamada                        shift and go to state 115

state 191

    (26) aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE .

    COMMA           reduce using rule 26 (aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE .)
    SEMICOLON       reduce using rule 26 (aux_lista -> ID pn_add_symbol LSQUARE CTE_INT RSQUARE LSQUARE CTE_INT RSQUARE .)


state 192

    (47) asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion . pn_assign SEMICOLON
    (108) pn_assign -> .

    SEMICOLON       reduce using rule 108 (pn_assign -> .)

    pn_assign                      shift and go to state 216

state 193

    (48) asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign . SEMICOLON

    SEMICOLON       shift and go to state 217


state 194

    (66) dimensiones -> LSQUARE expresion RSQUARE LSQUARE . expresion RSQUARE
    (69) expresion -> . comparacion aux_expresion
    (70) expresion -> . aux_comparacion
    (75) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (77) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (81) aux_comparacion -> . exp
    (82) exp -> . termino pn_addition_substraction
    (83) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (84) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (85) termino -> . factor pn_multiplication_division
    (86) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (87) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (88) factor -> . LPAREN expresion RPAREN
    (89) factor -> . PLUS var_cte
    (90) factor -> . PLUS llamada
    (91) factor -> . MINUS var_cte
    (92) factor -> . MINUS llamada
    (93) factor -> . var_cte
    (94) factor -> . llamada
    (95) var_cte -> . ID pn_push_operand_and_type
    (96) var_cte -> . CTE_INT pn_push_constant_and_type
    (97) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 104
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    ID              shift and go to state 103
    CTE_INT         shift and go to state 116
    CTE_FLOAT       shift and go to state 117

    expresion                      shift and go to state 218
    comparacion                    shift and go to state 107
    aux_comparacion                shift and go to state 108
    exp                            shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 113
    var_cte                        shift and go to state 114
    llamada                        shift and go to state 115

state 195

    (67) dimensiones -> LSQUARE expresion COMMA expresion . RSQUARE

    RSQUARE         shift and go to state 219


state 196

    (71) aux_expresion -> AND pn_push_operator comparacion . pn_and
    (73) aux_expresion -> AND pn_push_operator comparacion . pn_and aux_expresion
    (113) pn_and -> .

    AND             reduce using rule 113 (pn_and -> .)
    OR              reduce using rule 113 (pn_and -> .)
    COMMA           reduce using rule 113 (pn_and -> .)
    RPAREN          reduce using rule 113 (pn_and -> .)
    RSQUARE         reduce using rule 113 (pn_and -> .)
    SEMICOLON       reduce using rule 113 (pn_and -> .)
    TO              reduce using rule 113 (pn_and -> .)
    DO              reduce using rule 113 (pn_and -> .)

    pn_and                         shift and go to state 220

state 197

    (75) comparacion -> exp . LESSTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> exp . GREATERTHAN pn_push_operator exp pn_comparison
    (77) comparacion -> exp . EQUAL pn_push_operator exp pn_comparison

    LESSTHAN        shift and go to state 221
    GREATERTHAN     shift and go to state 222
    EQUAL           shift and go to state 223


state 198

    (72) aux_expresion -> OR pn_push_operator comparacion . pn_or
    (74) aux_expresion -> OR pn_push_operator comparacion . pn_or aux_expresion
    (114) pn_or -> .

    AND             reduce using rule 114 (pn_or -> .)
    OR              reduce using rule 114 (pn_or -> .)
    COMMA           reduce using rule 114 (pn_or -> .)
    RPAREN          reduce using rule 114 (pn_or -> .)
    RSQUARE         reduce using rule 114 (pn_or -> .)
    SEMICOLON       reduce using rule 114 (pn_or -> .)
    TO              reduce using rule 114 (pn_or -> .)
    DO              reduce using rule 114 (pn_or -> .)

    pn_or                          shift and go to state 224

state 199

    (75) comparacion -> exp LESSTHAN pn_push_operator exp . pn_comparison
    (78) aux_comparacion -> exp LESSTHAN pn_push_operator exp . pn_comparison
    (115) pn_comparison -> .

    AND             reduce using rule 115 (pn_comparison -> .)
    OR              reduce using rule 115 (pn_comparison -> .)
    COMMA           reduce using rule 115 (pn_comparison -> .)
    RPAREN          reduce using rule 115 (pn_comparison -> .)
    RSQUARE         reduce using rule 115 (pn_comparison -> .)
    SEMICOLON       reduce using rule 115 (pn_comparison -> .)
    TO              reduce using rule 115 (pn_comparison -> .)
    DO              reduce using rule 115 (pn_comparison -> .)

    pn_comparison                  shift and go to state 225

state 200

    (76) comparacion -> exp GREATERTHAN pn_push_operator exp . pn_comparison
    (79) aux_comparacion -> exp GREATERTHAN pn_push_operator exp . pn_comparison
    (115) pn_comparison -> .

    AND             reduce using rule 115 (pn_comparison -> .)
    OR              reduce using rule 115 (pn_comparison -> .)
    COMMA           reduce using rule 115 (pn_comparison -> .)
    RPAREN          reduce using rule 115 (pn_comparison -> .)
    RSQUARE         reduce using rule 115 (pn_comparison -> .)
    SEMICOLON       reduce using rule 115 (pn_comparison -> .)
    TO              reduce using rule 115 (pn_comparison -> .)
    DO              reduce using rule 115 (pn_comparison -> .)

    pn_comparison                  shift and go to state 226

state 201

    (77) comparacion -> exp EQUAL pn_push_operator exp . pn_comparison
    (80) aux_comparacion -> exp EQUAL pn_push_operator exp . pn_comparison
    (115) pn_comparison -> .

    AND             reduce using rule 115 (pn_comparison -> .)
    OR              reduce using rule 115 (pn_comparison -> .)
    COMMA           reduce using rule 115 (pn_comparison -> .)
    RPAREN          reduce using rule 115 (pn_comparison -> .)
    RSQUARE         reduce using rule 115 (pn_comparison -> .)
    SEMICOLON       reduce using rule 115 (pn_comparison -> .)
    TO              reduce using rule 115 (pn_comparison -> .)
    DO              reduce using rule 115 (pn_comparison -> .)

    pn_comparison                  shift and go to state 227

state 202

    (83) exp -> termino pn_addition_substraction PLUS pn_push_operator . exp
    (82) exp -> . termino pn_addition_substraction
    (83) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (84) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (85) termino -> . factor pn_multiplication_division
    (86) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (87) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (88) factor -> . LPAREN expresion RPAREN
    (89) factor -> . PLUS var_cte
    (90) factor -> . PLUS llamada
    (91) factor -> . MINUS var_cte
    (92) factor -> . MINUS llamada
    (93) factor -> . var_cte
    (94) factor -> . llamada
    (95) var_cte -> . ID pn_push_operand_and_type
    (96) var_cte -> . CTE_INT pn_push_constant_and_type
    (97) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 104
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    ID              shift and go to state 103
    CTE_INT         shift and go to state 116
    CTE_FLOAT       shift and go to state 117

    termino                        shift and go to state 110
    exp                            shift and go to state 228
    factor                         shift and go to state 113
    var_cte                        shift and go to state 114
    llamada                        shift and go to state 115

state 203

    (84) exp -> termino pn_addition_substraction MINUS pn_push_operator . exp
    (82) exp -> . termino pn_addition_substraction
    (83) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (84) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (85) termino -> . factor pn_multiplication_division
    (86) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (87) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (88) factor -> . LPAREN expresion RPAREN
    (89) factor -> . PLUS var_cte
    (90) factor -> . PLUS llamada
    (91) factor -> . MINUS var_cte
    (92) factor -> . MINUS llamada
    (93) factor -> . var_cte
    (94) factor -> . llamada
    (95) var_cte -> . ID pn_push_operand_and_type
    (96) var_cte -> . CTE_INT pn_push_constant_and_type
    (97) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 104
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    ID              shift and go to state 103
    CTE_INT         shift and go to state 116
    CTE_FLOAT       shift and go to state 117

    termino                        shift and go to state 110
    exp                            shift and go to state 229
    factor                         shift and go to state 113
    var_cte                        shift and go to state 114
    llamada                        shift and go to state 115

state 204

    (86) termino -> factor pn_multiplication_division MULT pn_push_operator . termino
    (85) termino -> . factor pn_multiplication_division
    (86) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (87) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (88) factor -> . LPAREN expresion RPAREN
    (89) factor -> . PLUS var_cte
    (90) factor -> . PLUS llamada
    (91) factor -> . MINUS var_cte
    (92) factor -> . MINUS llamada
    (93) factor -> . var_cte
    (94) factor -> . llamada
    (95) var_cte -> . ID pn_push_operand_and_type
    (96) var_cte -> . CTE_INT pn_push_constant_and_type
    (97) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 104
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    ID              shift and go to state 103
    CTE_INT         shift and go to state 116
    CTE_FLOAT       shift and go to state 117

    factor                         shift and go to state 113
    termino                        shift and go to state 230
    var_cte                        shift and go to state 114
    llamada                        shift and go to state 115

state 205

    (87) termino -> factor pn_multiplication_division DIV pn_push_operator . termino
    (85) termino -> . factor pn_multiplication_division
    (86) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (87) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (88) factor -> . LPAREN expresion RPAREN
    (89) factor -> . PLUS var_cte
    (90) factor -> . PLUS llamada
    (91) factor -> . MINUS var_cte
    (92) factor -> . MINUS llamada
    (93) factor -> . var_cte
    (94) factor -> . llamada
    (95) var_cte -> . ID pn_push_operand_and_type
    (96) var_cte -> . CTE_INT pn_push_constant_and_type
    (97) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 104
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    ID              shift and go to state 103
    CTE_INT         shift and go to state 116
    CTE_FLOAT       shift and go to state 117

    factor                         shift and go to state 113
    termino                        shift and go to state 231
    var_cte                        shift and go to state 114
    llamada                        shift and go to state 115

state 206

    (34) condicional -> WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN . DO bloque pn_while_3

    DO              shift and go to state 232


state 207

    (32) aux_escritura -> pn_push_write_operator letrero pn_write COMMA . aux_escritura
    (30) aux_escritura -> . pn_push_write_operator letrero pn_write
    (31) aux_escritura -> . pn_push_write_operator expresion pn_write
    (32) aux_escritura -> . pn_push_write_operator letrero pn_write COMMA aux_escritura
    (33) aux_escritura -> . pn_push_write_operator expresion pn_write COMMA aux_escritura
    (111) pn_push_write_operator -> .

    QUOTATION       reduce using rule 111 (pn_push_write_operator -> .)
    LPAREN          reduce using rule 111 (pn_push_write_operator -> .)
    PLUS            reduce using rule 111 (pn_push_write_operator -> .)
    MINUS           reduce using rule 111 (pn_push_write_operator -> .)
    ID              reduce using rule 111 (pn_push_write_operator -> .)
    CTE_INT         reduce using rule 111 (pn_push_write_operator -> .)
    CTE_FLOAT       reduce using rule 111 (pn_push_write_operator -> .)

    pn_push_write_operator         shift and go to state 120
    aux_escritura                  shift and go to state 233

state 208

    (33) aux_escritura -> pn_push_write_operator expresion pn_write COMMA . aux_escritura
    (30) aux_escritura -> . pn_push_write_operator letrero pn_write
    (31) aux_escritura -> . pn_push_write_operator expresion pn_write
    (32) aux_escritura -> . pn_push_write_operator letrero pn_write COMMA aux_escritura
    (33) aux_escritura -> . pn_push_write_operator expresion pn_write COMMA aux_escritura
    (111) pn_push_write_operator -> .

    QUOTATION       reduce using rule 111 (pn_push_write_operator -> .)
    LPAREN          reduce using rule 111 (pn_push_write_operator -> .)
    PLUS            reduce using rule 111 (pn_push_write_operator -> .)
    MINUS           reduce using rule 111 (pn_push_write_operator -> .)
    ID              reduce using rule 111 (pn_push_write_operator -> .)
    CTE_INT         reduce using rule 111 (pn_push_write_operator -> .)
    CTE_FLOAT       reduce using rule 111 (pn_push_write_operator -> .)

    pn_push_write_operator         shift and go to state 120
    aux_escritura                  shift and go to state 234

state 209

    (55) letrero -> QUOTATION aux_letrero QUOTATION .

    COMMA           reduce using rule 55 (letrero -> QUOTATION aux_letrero QUOTATION .)
    RPAREN          reduce using rule 55 (letrero -> QUOTATION aux_letrero QUOTATION .)


state 210

    (58) aux_letrero -> CTE_CHAR aux_letrero .

    QUOTATION       reduce using rule 58 (aux_letrero -> CTE_CHAR aux_letrero .)


state 211

    (49) retorno -> RETURN pn_push_operator LPAREN expresion pn_retorno RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 235


state 212

    (51) aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read .
    (52) aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read . dimensiones
    (53) aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read . COMMA aux_lectura
    (54) aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read . dimensiones COMMA aux_lectura
    (66) dimensiones -> . LSQUARE expresion RSQUARE LSQUARE expresion RSQUARE
    (67) dimensiones -> . LSQUARE expresion COMMA expresion RSQUARE
    (68) dimensiones -> . LSQUARE expresion RSQUARE

    RPAREN          reduce using rule 51 (aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read .)
    COMMA           shift and go to state 237
    LSQUARE         shift and go to state 102

    dimensiones                    shift and go to state 236

state 213

    (59) decision -> IF LPAREN expresion pn_if_1 RPAREN THEN . bloque pn_if_2
    (60) decision -> IF LPAREN expresion pn_if_1 RPAREN THEN . bloque ELSE pn_else bloque pn_if_2
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 53

    bloque                         shift and go to state 238

state 214

    (64) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator . expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (69) expresion -> . comparacion aux_expresion
    (70) expresion -> . aux_comparacion
    (75) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (77) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (81) aux_comparacion -> . exp
    (82) exp -> . termino pn_addition_substraction
    (83) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (84) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (85) termino -> . factor pn_multiplication_division
    (86) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (87) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (88) factor -> . LPAREN expresion RPAREN
    (89) factor -> . PLUS var_cte
    (90) factor -> . PLUS llamada
    (91) factor -> . MINUS var_cte
    (92) factor -> . MINUS llamada
    (93) factor -> . var_cte
    (94) factor -> . llamada
    (95) var_cte -> . ID pn_push_operand_and_type
    (96) var_cte -> . CTE_INT pn_push_constant_and_type
    (97) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 104
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    ID              shift and go to state 103
    CTE_INT         shift and go to state 116
    CTE_FLOAT       shift and go to state 117

    expresion                      shift and go to state 239
    comparacion                    shift and go to state 107
    aux_comparacion                shift and go to state 108
    exp                            shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 113
    var_cte                        shift and go to state 114
    llamada                        shift and go to state 115

state 215

    (65) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion . pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (108) pn_assign -> .

    TO              reduce using rule 108 (pn_assign -> .)

    pn_assign                      shift and go to state 240

state 216

    (47) asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign . SEMICOLON

    SEMICOLON       shift and go to state 241


state 217

    (48) asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON .

    ID              reduce using rule 48 (asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    WHILE           reduce using rule 48 (asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    WRITE           reduce using rule 48 (asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    RETURN          reduce using rule 48 (asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    READ            reduce using rule 48 (asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    IF              reduce using rule 48 (asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    FOR             reduce using rule 48 (asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    RBRACKET        reduce using rule 48 (asignacion -> ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)


state 218

    (66) dimensiones -> LSQUARE expresion RSQUARE LSQUARE expresion . RSQUARE

    RSQUARE         shift and go to state 242


state 219

    (67) dimensiones -> LSQUARE expresion COMMA expresion RSQUARE .

    ASSIGN          reduce using rule 67 (dimensiones -> LSQUARE expresion COMMA expresion RSQUARE .)
    COMMA           reduce using rule 67 (dimensiones -> LSQUARE expresion COMMA expresion RSQUARE .)
    RPAREN          reduce using rule 67 (dimensiones -> LSQUARE expresion COMMA expresion RSQUARE .)


state 220

    (71) aux_expresion -> AND pn_push_operator comparacion pn_and .
    (73) aux_expresion -> AND pn_push_operator comparacion pn_and . aux_expresion
    (71) aux_expresion -> . AND pn_push_operator comparacion pn_and
    (72) aux_expresion -> . OR pn_push_operator comparacion pn_or
    (73) aux_expresion -> . AND pn_push_operator comparacion pn_and aux_expresion
    (74) aux_expresion -> . OR pn_push_operator comparacion pn_or aux_expresion

    COMMA           reduce using rule 71 (aux_expresion -> AND pn_push_operator comparacion pn_and .)
    RPAREN          reduce using rule 71 (aux_expresion -> AND pn_push_operator comparacion pn_and .)
    RSQUARE         reduce using rule 71 (aux_expresion -> AND pn_push_operator comparacion pn_and .)
    SEMICOLON       reduce using rule 71 (aux_expresion -> AND pn_push_operator comparacion pn_and .)
    TO              reduce using rule 71 (aux_expresion -> AND pn_push_operator comparacion pn_and .)
    DO              reduce using rule 71 (aux_expresion -> AND pn_push_operator comparacion pn_and .)
    AND             shift and go to state 137
    OR              shift and go to state 138

    aux_expresion                  shift and go to state 243

state 221

    (75) comparacion -> exp LESSTHAN . pn_push_operator exp pn_comparison
    (105) pn_push_operator -> .

    LPAREN          reduce using rule 105 (pn_push_operator -> .)
    PLUS            reduce using rule 105 (pn_push_operator -> .)
    MINUS           reduce using rule 105 (pn_push_operator -> .)
    ID              reduce using rule 105 (pn_push_operator -> .)
    CTE_INT         reduce using rule 105 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 105 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 244

state 222

    (76) comparacion -> exp GREATERTHAN . pn_push_operator exp pn_comparison
    (105) pn_push_operator -> .

    LPAREN          reduce using rule 105 (pn_push_operator -> .)
    PLUS            reduce using rule 105 (pn_push_operator -> .)
    MINUS           reduce using rule 105 (pn_push_operator -> .)
    ID              reduce using rule 105 (pn_push_operator -> .)
    CTE_INT         reduce using rule 105 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 105 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 245

state 223

    (77) comparacion -> exp EQUAL . pn_push_operator exp pn_comparison
    (105) pn_push_operator -> .

    LPAREN          reduce using rule 105 (pn_push_operator -> .)
    PLUS            reduce using rule 105 (pn_push_operator -> .)
    MINUS           reduce using rule 105 (pn_push_operator -> .)
    ID              reduce using rule 105 (pn_push_operator -> .)
    CTE_INT         reduce using rule 105 (pn_push_operator -> .)
    CTE_FLOAT       reduce using rule 105 (pn_push_operator -> .)

    pn_push_operator               shift and go to state 246

state 224

    (72) aux_expresion -> OR pn_push_operator comparacion pn_or .
    (74) aux_expresion -> OR pn_push_operator comparacion pn_or . aux_expresion
    (71) aux_expresion -> . AND pn_push_operator comparacion pn_and
    (72) aux_expresion -> . OR pn_push_operator comparacion pn_or
    (73) aux_expresion -> . AND pn_push_operator comparacion pn_and aux_expresion
    (74) aux_expresion -> . OR pn_push_operator comparacion pn_or aux_expresion

    COMMA           reduce using rule 72 (aux_expresion -> OR pn_push_operator comparacion pn_or .)
    RPAREN          reduce using rule 72 (aux_expresion -> OR pn_push_operator comparacion pn_or .)
    RSQUARE         reduce using rule 72 (aux_expresion -> OR pn_push_operator comparacion pn_or .)
    SEMICOLON       reduce using rule 72 (aux_expresion -> OR pn_push_operator comparacion pn_or .)
    TO              reduce using rule 72 (aux_expresion -> OR pn_push_operator comparacion pn_or .)
    DO              reduce using rule 72 (aux_expresion -> OR pn_push_operator comparacion pn_or .)
    AND             shift and go to state 137
    OR              shift and go to state 138

    aux_expresion                  shift and go to state 247

state 225

    (75) comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .
    (78) aux_comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .

    AND             reduce using rule 75 (comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)
    OR              reduce using rule 75 (comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)
    COMMA           reduce using rule 78 (aux_comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)
    RPAREN          reduce using rule 78 (aux_comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)
    RSQUARE         reduce using rule 78 (aux_comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)
    SEMICOLON       reduce using rule 78 (aux_comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)
    TO              reduce using rule 78 (aux_comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)
    DO              reduce using rule 78 (aux_comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)


state 226

    (76) comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .
    (79) aux_comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .

    AND             reduce using rule 76 (comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)
    OR              reduce using rule 76 (comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)
    COMMA           reduce using rule 79 (aux_comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)
    RPAREN          reduce using rule 79 (aux_comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)
    RSQUARE         reduce using rule 79 (aux_comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)
    SEMICOLON       reduce using rule 79 (aux_comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)
    TO              reduce using rule 79 (aux_comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)
    DO              reduce using rule 79 (aux_comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)


state 227

    (77) comparacion -> exp EQUAL pn_push_operator exp pn_comparison .
    (80) aux_comparacion -> exp EQUAL pn_push_operator exp pn_comparison .

    AND             reduce using rule 77 (comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)
    OR              reduce using rule 77 (comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)
    COMMA           reduce using rule 80 (aux_comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)
    RPAREN          reduce using rule 80 (aux_comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)
    RSQUARE         reduce using rule 80 (aux_comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)
    SEMICOLON       reduce using rule 80 (aux_comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)
    TO              reduce using rule 80 (aux_comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)
    DO              reduce using rule 80 (aux_comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)


state 228

    (83) exp -> termino pn_addition_substraction PLUS pn_push_operator exp .

    LESSTHAN        reduce using rule 83 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    GREATERTHAN     reduce using rule 83 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    EQUAL           reduce using rule 83 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    COMMA           reduce using rule 83 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    RPAREN          reduce using rule 83 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    RSQUARE         reduce using rule 83 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    SEMICOLON       reduce using rule 83 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    AND             reduce using rule 83 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    OR              reduce using rule 83 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    TO              reduce using rule 83 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)
    DO              reduce using rule 83 (exp -> termino pn_addition_substraction PLUS pn_push_operator exp .)


state 229

    (84) exp -> termino pn_addition_substraction MINUS pn_push_operator exp .

    LESSTHAN        reduce using rule 84 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    GREATERTHAN     reduce using rule 84 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    EQUAL           reduce using rule 84 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    COMMA           reduce using rule 84 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    RPAREN          reduce using rule 84 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    RSQUARE         reduce using rule 84 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    SEMICOLON       reduce using rule 84 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    AND             reduce using rule 84 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    OR              reduce using rule 84 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    TO              reduce using rule 84 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)
    DO              reduce using rule 84 (exp -> termino pn_addition_substraction MINUS pn_push_operator exp .)


state 230

    (86) termino -> factor pn_multiplication_division MULT pn_push_operator termino .

    PLUS            reduce using rule 86 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    MINUS           reduce using rule 86 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    LESSTHAN        reduce using rule 86 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    GREATERTHAN     reduce using rule 86 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    EQUAL           reduce using rule 86 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    COMMA           reduce using rule 86 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    RPAREN          reduce using rule 86 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    RSQUARE         reduce using rule 86 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    SEMICOLON       reduce using rule 86 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    AND             reduce using rule 86 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    OR              reduce using rule 86 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    TO              reduce using rule 86 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)
    DO              reduce using rule 86 (termino -> factor pn_multiplication_division MULT pn_push_operator termino .)


state 231

    (87) termino -> factor pn_multiplication_division DIV pn_push_operator termino .

    PLUS            reduce using rule 87 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    MINUS           reduce using rule 87 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    LESSTHAN        reduce using rule 87 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    GREATERTHAN     reduce using rule 87 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    EQUAL           reduce using rule 87 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    COMMA           reduce using rule 87 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    RPAREN          reduce using rule 87 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    RSQUARE         reduce using rule 87 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    SEMICOLON       reduce using rule 87 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    AND             reduce using rule 87 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    OR              reduce using rule 87 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    TO              reduce using rule 87 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)
    DO              reduce using rule 87 (termino -> factor pn_multiplication_division DIV pn_push_operator termino .)


state 232

    (34) condicional -> WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN DO . bloque pn_while_3
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 53

    bloque                         shift and go to state 248

state 233

    (32) aux_escritura -> pn_push_write_operator letrero pn_write COMMA aux_escritura .

    RPAREN          reduce using rule 32 (aux_escritura -> pn_push_write_operator letrero pn_write COMMA aux_escritura .)


state 234

    (33) aux_escritura -> pn_push_write_operator expresion pn_write COMMA aux_escritura .

    RPAREN          reduce using rule 33 (aux_escritura -> pn_push_write_operator expresion pn_write COMMA aux_escritura .)


state 235

    (49) retorno -> RETURN pn_push_operator LPAREN expresion pn_retorno RPAREN SEMICOLON .

    ID              reduce using rule 49 (retorno -> RETURN pn_push_operator LPAREN expresion pn_retorno RPAREN SEMICOLON .)
    WHILE           reduce using rule 49 (retorno -> RETURN pn_push_operator LPAREN expresion pn_retorno RPAREN SEMICOLON .)
    WRITE           reduce using rule 49 (retorno -> RETURN pn_push_operator LPAREN expresion pn_retorno RPAREN SEMICOLON .)
    RETURN          reduce using rule 49 (retorno -> RETURN pn_push_operator LPAREN expresion pn_retorno RPAREN SEMICOLON .)
    READ            reduce using rule 49 (retorno -> RETURN pn_push_operator LPAREN expresion pn_retorno RPAREN SEMICOLON .)
    IF              reduce using rule 49 (retorno -> RETURN pn_push_operator LPAREN expresion pn_retorno RPAREN SEMICOLON .)
    FOR             reduce using rule 49 (retorno -> RETURN pn_push_operator LPAREN expresion pn_retorno RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 49 (retorno -> RETURN pn_push_operator LPAREN expresion pn_retorno RPAREN SEMICOLON .)


state 236

    (52) aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones .
    (54) aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones . COMMA aux_lectura

    RPAREN          reduce using rule 52 (aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones .)
    COMMA           shift and go to state 249


state 237

    (53) aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read COMMA . aux_lectura
    (51) aux_lectura -> . pn_push_read_operator ID pn_push_operand_and_type pn_read
    (52) aux_lectura -> . pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones
    (53) aux_lectura -> . pn_push_read_operator ID pn_push_operand_and_type pn_read COMMA aux_lectura
    (54) aux_lectura -> . pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones COMMA aux_lectura
    (109) pn_push_read_operator -> .

    ID              reduce using rule 109 (pn_push_read_operator -> .)

    pn_push_read_operator          shift and go to state 123
    aux_lectura                    shift and go to state 250

state 238

    (59) decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque . pn_if_2
    (60) decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque . ELSE pn_else bloque pn_if_2
    (117) pn_if_2 -> .

    ELSE            shift and go to state 252
    ID              reduce using rule 117 (pn_if_2 -> .)
    WHILE           reduce using rule 117 (pn_if_2 -> .)
    WRITE           reduce using rule 117 (pn_if_2 -> .)
    RETURN          reduce using rule 117 (pn_if_2 -> .)
    READ            reduce using rule 117 (pn_if_2 -> .)
    IF              reduce using rule 117 (pn_if_2 -> .)
    FOR             reduce using rule 117 (pn_if_2 -> .)
    RBRACKET        reduce using rule 117 (pn_if_2 -> .)

    pn_if_2                        shift and go to state 251

state 239

    (64) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion . pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (108) pn_assign -> .

    TO              reduce using rule 108 (pn_assign -> .)

    pn_assign                      shift and go to state 253

state 240

    (65) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign . TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back

    TO              shift and go to state 254


state 241

    (47) asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON .

    ID              reduce using rule 47 (asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    WHILE           reduce using rule 47 (asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    WRITE           reduce using rule 47 (asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    RETURN          reduce using rule 47 (asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    READ            reduce using rule 47 (asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    IF              reduce using rule 47 (asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    FOR             reduce using rule 47 (asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)
    RBRACKET        reduce using rule 47 (asignacion -> ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign SEMICOLON .)


state 242

    (66) dimensiones -> LSQUARE expresion RSQUARE LSQUARE expresion RSQUARE .

    ASSIGN          reduce using rule 66 (dimensiones -> LSQUARE expresion RSQUARE LSQUARE expresion RSQUARE .)
    COMMA           reduce using rule 66 (dimensiones -> LSQUARE expresion RSQUARE LSQUARE expresion RSQUARE .)
    RPAREN          reduce using rule 66 (dimensiones -> LSQUARE expresion RSQUARE LSQUARE expresion RSQUARE .)


state 243

    (73) aux_expresion -> AND pn_push_operator comparacion pn_and aux_expresion .

    COMMA           reduce using rule 73 (aux_expresion -> AND pn_push_operator comparacion pn_and aux_expresion .)
    RPAREN          reduce using rule 73 (aux_expresion -> AND pn_push_operator comparacion pn_and aux_expresion .)
    RSQUARE         reduce using rule 73 (aux_expresion -> AND pn_push_operator comparacion pn_and aux_expresion .)
    SEMICOLON       reduce using rule 73 (aux_expresion -> AND pn_push_operator comparacion pn_and aux_expresion .)
    TO              reduce using rule 73 (aux_expresion -> AND pn_push_operator comparacion pn_and aux_expresion .)
    DO              reduce using rule 73 (aux_expresion -> AND pn_push_operator comparacion pn_and aux_expresion .)


state 244

    (75) comparacion -> exp LESSTHAN pn_push_operator . exp pn_comparison
    (82) exp -> . termino pn_addition_substraction
    (83) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (84) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (85) termino -> . factor pn_multiplication_division
    (86) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (87) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (88) factor -> . LPAREN expresion RPAREN
    (89) factor -> . PLUS var_cte
    (90) factor -> . PLUS llamada
    (91) factor -> . MINUS var_cte
    (92) factor -> . MINUS llamada
    (93) factor -> . var_cte
    (94) factor -> . llamada
    (95) var_cte -> . ID pn_push_operand_and_type
    (96) var_cte -> . CTE_INT pn_push_constant_and_type
    (97) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 104
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    ID              shift and go to state 103
    CTE_INT         shift and go to state 116
    CTE_FLOAT       shift and go to state 117

    exp                            shift and go to state 255
    termino                        shift and go to state 110
    factor                         shift and go to state 113
    var_cte                        shift and go to state 114
    llamada                        shift and go to state 115

state 245

    (76) comparacion -> exp GREATERTHAN pn_push_operator . exp pn_comparison
    (82) exp -> . termino pn_addition_substraction
    (83) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (84) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (85) termino -> . factor pn_multiplication_division
    (86) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (87) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (88) factor -> . LPAREN expresion RPAREN
    (89) factor -> . PLUS var_cte
    (90) factor -> . PLUS llamada
    (91) factor -> . MINUS var_cte
    (92) factor -> . MINUS llamada
    (93) factor -> . var_cte
    (94) factor -> . llamada
    (95) var_cte -> . ID pn_push_operand_and_type
    (96) var_cte -> . CTE_INT pn_push_constant_and_type
    (97) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 104
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    ID              shift and go to state 103
    CTE_INT         shift and go to state 116
    CTE_FLOAT       shift and go to state 117

    exp                            shift and go to state 256
    termino                        shift and go to state 110
    factor                         shift and go to state 113
    var_cte                        shift and go to state 114
    llamada                        shift and go to state 115

state 246

    (77) comparacion -> exp EQUAL pn_push_operator . exp pn_comparison
    (82) exp -> . termino pn_addition_substraction
    (83) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (84) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (85) termino -> . factor pn_multiplication_division
    (86) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (87) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (88) factor -> . LPAREN expresion RPAREN
    (89) factor -> . PLUS var_cte
    (90) factor -> . PLUS llamada
    (91) factor -> . MINUS var_cte
    (92) factor -> . MINUS llamada
    (93) factor -> . var_cte
    (94) factor -> . llamada
    (95) var_cte -> . ID pn_push_operand_and_type
    (96) var_cte -> . CTE_INT pn_push_constant_and_type
    (97) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 104
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    ID              shift and go to state 103
    CTE_INT         shift and go to state 116
    CTE_FLOAT       shift and go to state 117

    exp                            shift and go to state 257
    termino                        shift and go to state 110
    factor                         shift and go to state 113
    var_cte                        shift and go to state 114
    llamada                        shift and go to state 115

state 247

    (74) aux_expresion -> OR pn_push_operator comparacion pn_or aux_expresion .

    COMMA           reduce using rule 74 (aux_expresion -> OR pn_push_operator comparacion pn_or aux_expresion .)
    RPAREN          reduce using rule 74 (aux_expresion -> OR pn_push_operator comparacion pn_or aux_expresion .)
    RSQUARE         reduce using rule 74 (aux_expresion -> OR pn_push_operator comparacion pn_or aux_expresion .)
    SEMICOLON       reduce using rule 74 (aux_expresion -> OR pn_push_operator comparacion pn_or aux_expresion .)
    TO              reduce using rule 74 (aux_expresion -> OR pn_push_operator comparacion pn_or aux_expresion .)
    DO              reduce using rule 74 (aux_expresion -> OR pn_push_operator comparacion pn_or aux_expresion .)


state 248

    (34) condicional -> WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN DO bloque . pn_while_3
    (121) pn_while_3 -> .

    ID              reduce using rule 121 (pn_while_3 -> .)
    WHILE           reduce using rule 121 (pn_while_3 -> .)
    WRITE           reduce using rule 121 (pn_while_3 -> .)
    RETURN          reduce using rule 121 (pn_while_3 -> .)
    READ            reduce using rule 121 (pn_while_3 -> .)
    IF              reduce using rule 121 (pn_while_3 -> .)
    FOR             reduce using rule 121 (pn_while_3 -> .)
    RBRACKET        reduce using rule 121 (pn_while_3 -> .)

    pn_while_3                     shift and go to state 258

state 249

    (54) aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones COMMA . aux_lectura
    (51) aux_lectura -> . pn_push_read_operator ID pn_push_operand_and_type pn_read
    (52) aux_lectura -> . pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones
    (53) aux_lectura -> . pn_push_read_operator ID pn_push_operand_and_type pn_read COMMA aux_lectura
    (54) aux_lectura -> . pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones COMMA aux_lectura
    (109) pn_push_read_operator -> .

    ID              reduce using rule 109 (pn_push_read_operator -> .)

    pn_push_read_operator          shift and go to state 123
    aux_lectura                    shift and go to state 259

state 250

    (53) aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read COMMA aux_lectura .

    RPAREN          reduce using rule 53 (aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read COMMA aux_lectura .)


state 251

    (59) decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque pn_if_2 .

    ID              reduce using rule 59 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque pn_if_2 .)
    WHILE           reduce using rule 59 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque pn_if_2 .)
    WRITE           reduce using rule 59 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque pn_if_2 .)
    RETURN          reduce using rule 59 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque pn_if_2 .)
    READ            reduce using rule 59 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque pn_if_2 .)
    IF              reduce using rule 59 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque pn_if_2 .)
    FOR             reduce using rule 59 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque pn_if_2 .)
    RBRACKET        reduce using rule 59 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque pn_if_2 .)


state 252

    (60) decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE . pn_else bloque pn_if_2
    (118) pn_else -> .

    LBRACKET        reduce using rule 118 (pn_else -> .)

    pn_else                        shift and go to state 260

state 253

    (64) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign . TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back

    TO              shift and go to state 261


state 254

    (65) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO . expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (69) expresion -> . comparacion aux_expresion
    (70) expresion -> . aux_comparacion
    (75) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (77) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (81) aux_comparacion -> . exp
    (82) exp -> . termino pn_addition_substraction
    (83) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (84) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (85) termino -> . factor pn_multiplication_division
    (86) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (87) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (88) factor -> . LPAREN expresion RPAREN
    (89) factor -> . PLUS var_cte
    (90) factor -> . PLUS llamada
    (91) factor -> . MINUS var_cte
    (92) factor -> . MINUS llamada
    (93) factor -> . var_cte
    (94) factor -> . llamada
    (95) var_cte -> . ID pn_push_operand_and_type
    (96) var_cte -> . CTE_INT pn_push_constant_and_type
    (97) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 104
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    ID              shift and go to state 103
    CTE_INT         shift and go to state 116
    CTE_FLOAT       shift and go to state 117

    expresion                      shift and go to state 262
    comparacion                    shift and go to state 107
    aux_comparacion                shift and go to state 108
    exp                            shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 113
    var_cte                        shift and go to state 114
    llamada                        shift and go to state 115

state 255

    (75) comparacion -> exp LESSTHAN pn_push_operator exp . pn_comparison
    (115) pn_comparison -> .

    AND             reduce using rule 115 (pn_comparison -> .)
    OR              reduce using rule 115 (pn_comparison -> .)
    COMMA           reduce using rule 115 (pn_comparison -> .)
    RPAREN          reduce using rule 115 (pn_comparison -> .)
    RSQUARE         reduce using rule 115 (pn_comparison -> .)
    SEMICOLON       reduce using rule 115 (pn_comparison -> .)
    TO              reduce using rule 115 (pn_comparison -> .)
    DO              reduce using rule 115 (pn_comparison -> .)

    pn_comparison                  shift and go to state 263

state 256

    (76) comparacion -> exp GREATERTHAN pn_push_operator exp . pn_comparison
    (115) pn_comparison -> .

    AND             reduce using rule 115 (pn_comparison -> .)
    OR              reduce using rule 115 (pn_comparison -> .)
    COMMA           reduce using rule 115 (pn_comparison -> .)
    RPAREN          reduce using rule 115 (pn_comparison -> .)
    RSQUARE         reduce using rule 115 (pn_comparison -> .)
    SEMICOLON       reduce using rule 115 (pn_comparison -> .)
    TO              reduce using rule 115 (pn_comparison -> .)
    DO              reduce using rule 115 (pn_comparison -> .)

    pn_comparison                  shift and go to state 264

state 257

    (77) comparacion -> exp EQUAL pn_push_operator exp . pn_comparison
    (115) pn_comparison -> .

    AND             reduce using rule 115 (pn_comparison -> .)
    OR              reduce using rule 115 (pn_comparison -> .)
    COMMA           reduce using rule 115 (pn_comparison -> .)
    RPAREN          reduce using rule 115 (pn_comparison -> .)
    RSQUARE         reduce using rule 115 (pn_comparison -> .)
    SEMICOLON       reduce using rule 115 (pn_comparison -> .)
    TO              reduce using rule 115 (pn_comparison -> .)
    DO              reduce using rule 115 (pn_comparison -> .)

    pn_comparison                  shift and go to state 265

state 258

    (34) condicional -> WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN DO bloque pn_while_3 .

    ID              reduce using rule 34 (condicional -> WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN DO bloque pn_while_3 .)
    WHILE           reduce using rule 34 (condicional -> WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN DO bloque pn_while_3 .)
    WRITE           reduce using rule 34 (condicional -> WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN DO bloque pn_while_3 .)
    RETURN          reduce using rule 34 (condicional -> WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN DO bloque pn_while_3 .)
    READ            reduce using rule 34 (condicional -> WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN DO bloque pn_while_3 .)
    IF              reduce using rule 34 (condicional -> WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN DO bloque pn_while_3 .)
    FOR             reduce using rule 34 (condicional -> WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN DO bloque pn_while_3 .)
    RBRACKET        reduce using rule 34 (condicional -> WHILE pn_while_1 LPAREN expresion pn_while_2 RPAREN DO bloque pn_while_3 .)


state 259

    (54) aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones COMMA aux_lectura .

    RPAREN          reduce using rule 54 (aux_lectura -> pn_push_read_operator ID pn_push_operand_and_type pn_read dimensiones COMMA aux_lectura .)


state 260

    (60) decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else . bloque pn_if_2
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 53

    bloque                         shift and go to state 266

state 261

    (64) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO . expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (69) expresion -> . comparacion aux_expresion
    (70) expresion -> . aux_comparacion
    (75) comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (76) comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (77) comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (78) aux_comparacion -> . exp LESSTHAN pn_push_operator exp pn_comparison
    (79) aux_comparacion -> . exp GREATERTHAN pn_push_operator exp pn_comparison
    (80) aux_comparacion -> . exp EQUAL pn_push_operator exp pn_comparison
    (81) aux_comparacion -> . exp
    (82) exp -> . termino pn_addition_substraction
    (83) exp -> . termino pn_addition_substraction PLUS pn_push_operator exp
    (84) exp -> . termino pn_addition_substraction MINUS pn_push_operator exp
    (85) termino -> . factor pn_multiplication_division
    (86) termino -> . factor pn_multiplication_division MULT pn_push_operator termino
    (87) termino -> . factor pn_multiplication_division DIV pn_push_operator termino
    (88) factor -> . LPAREN expresion RPAREN
    (89) factor -> . PLUS var_cte
    (90) factor -> . PLUS llamada
    (91) factor -> . MINUS var_cte
    (92) factor -> . MINUS llamada
    (93) factor -> . var_cte
    (94) factor -> . llamada
    (95) var_cte -> . ID pn_push_operand_and_type
    (96) var_cte -> . CTE_INT pn_push_constant_and_type
    (97) var_cte -> . CTE_FLOAT pn_push_constant_and_type
    (61) llamada -> . ID LPAREN aux_llamada RPAREN

    LPAREN          shift and go to state 104
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    ID              shift and go to state 103
    CTE_INT         shift and go to state 116
    CTE_FLOAT       shift and go to state 117

    expresion                      shift and go to state 267
    comparacion                    shift and go to state 107
    aux_comparacion                shift and go to state 108
    exp                            shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 113
    var_cte                        shift and go to state 114
    llamada                        shift and go to state 115

state 262

    (65) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion . pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (122) pn_for_push_comparison -> .

    DO              reduce using rule 122 (pn_for_push_comparison -> .)

    pn_for_push_comparison         shift and go to state 268

state 263

    (75) comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .

    AND             reduce using rule 75 (comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)
    OR              reduce using rule 75 (comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)
    COMMA           reduce using rule 75 (comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)
    RPAREN          reduce using rule 75 (comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)
    RSQUARE         reduce using rule 75 (comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)
    SEMICOLON       reduce using rule 75 (comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)
    TO              reduce using rule 75 (comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)
    DO              reduce using rule 75 (comparacion -> exp LESSTHAN pn_push_operator exp pn_comparison .)


state 264

    (76) comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .

    AND             reduce using rule 76 (comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)
    OR              reduce using rule 76 (comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)
    COMMA           reduce using rule 76 (comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)
    RPAREN          reduce using rule 76 (comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)
    RSQUARE         reduce using rule 76 (comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)
    SEMICOLON       reduce using rule 76 (comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)
    TO              reduce using rule 76 (comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)
    DO              reduce using rule 76 (comparacion -> exp GREATERTHAN pn_push_operator exp pn_comparison .)


state 265

    (77) comparacion -> exp EQUAL pn_push_operator exp pn_comparison .

    AND             reduce using rule 77 (comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)
    OR              reduce using rule 77 (comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)
    COMMA           reduce using rule 77 (comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)
    RPAREN          reduce using rule 77 (comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)
    RSQUARE         reduce using rule 77 (comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)
    SEMICOLON       reduce using rule 77 (comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)
    TO              reduce using rule 77 (comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)
    DO              reduce using rule 77 (comparacion -> exp EQUAL pn_push_operator exp pn_comparison .)


state 266

    (60) decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque . pn_if_2
    (117) pn_if_2 -> .

    ID              reduce using rule 117 (pn_if_2 -> .)
    WHILE           reduce using rule 117 (pn_if_2 -> .)
    WRITE           reduce using rule 117 (pn_if_2 -> .)
    RETURN          reduce using rule 117 (pn_if_2 -> .)
    READ            reduce using rule 117 (pn_if_2 -> .)
    IF              reduce using rule 117 (pn_if_2 -> .)
    FOR             reduce using rule 117 (pn_if_2 -> .)
    RBRACKET        reduce using rule 117 (pn_if_2 -> .)

    pn_if_2                        shift and go to state 269

state 267

    (64) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion . pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (122) pn_for_push_comparison -> .

    DO              reduce using rule 122 (pn_for_push_comparison -> .)

    pn_for_push_comparison         shift and go to state 270

state 268

    (65) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison . pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (115) pn_comparison -> .

    DO              reduce using rule 115 (pn_comparison -> .)

    pn_comparison                  shift and go to state 271

state 269

    (60) decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2 .

    ID              reduce using rule 60 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2 .)
    WHILE           reduce using rule 60 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2 .)
    WRITE           reduce using rule 60 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2 .)
    RETURN          reduce using rule 60 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2 .)
    READ            reduce using rule 60 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2 .)
    IF              reduce using rule 60 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2 .)
    FOR             reduce using rule 60 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2 .)
    RBRACKET        reduce using rule 60 (decision -> IF LPAREN expresion pn_if_1 RPAREN THEN bloque ELSE pn_else bloque pn_if_2 .)


state 270

    (64) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison . pn_comparison pn_for_go_false DO bloque pn_for_go_back
    (115) pn_comparison -> .

    DO              reduce using rule 115 (pn_comparison -> .)

    pn_comparison                  shift and go to state 272

state 271

    (65) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison . pn_for_go_false DO bloque pn_for_go_back
    (123) pn_for_go_false -> .

    DO              reduce using rule 123 (pn_for_go_false -> .)

    pn_for_go_false                shift and go to state 273

state 272

    (64) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison . pn_for_go_false DO bloque pn_for_go_back
    (123) pn_for_go_false -> .

    DO              reduce using rule 123 (pn_for_go_false -> .)

    pn_for_go_false                shift and go to state 274

state 273

    (65) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false . DO bloque pn_for_go_back

    DO              shift and go to state 275


state 274

    (64) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false . DO bloque pn_for_go_back

    DO              shift and go to state 276


state 275

    (65) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO . bloque pn_for_go_back
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 53

    bloque                         shift and go to state 277

state 276

    (64) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO . bloque pn_for_go_back
    (35) bloque -> . LBRACKET estatutos RBRACKET
    (36) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 53

    bloque                         shift and go to state 278

state 277

    (65) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque . pn_for_go_back
    (124) pn_for_go_back -> .

    ID              reduce using rule 124 (pn_for_go_back -> .)
    WHILE           reduce using rule 124 (pn_for_go_back -> .)
    WRITE           reduce using rule 124 (pn_for_go_back -> .)
    RETURN          reduce using rule 124 (pn_for_go_back -> .)
    READ            reduce using rule 124 (pn_for_go_back -> .)
    IF              reduce using rule 124 (pn_for_go_back -> .)
    FOR             reduce using rule 124 (pn_for_go_back -> .)
    RBRACKET        reduce using rule 124 (pn_for_go_back -> .)

    pn_for_go_back                 shift and go to state 279

state 278

    (64) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque . pn_for_go_back
    (124) pn_for_go_back -> .

    ID              reduce using rule 124 (pn_for_go_back -> .)
    WHILE           reduce using rule 124 (pn_for_go_back -> .)
    WRITE           reduce using rule 124 (pn_for_go_back -> .)
    RETURN          reduce using rule 124 (pn_for_go_back -> .)
    READ            reduce using rule 124 (pn_for_go_back -> .)
    IF              reduce using rule 124 (pn_for_go_back -> .)
    FOR             reduce using rule 124 (pn_for_go_back -> .)
    RBRACKET        reduce using rule 124 (pn_for_go_back -> .)

    pn_for_go_back                 shift and go to state 280

state 279

    (65) no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .

    ID              reduce using rule 65 (no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)
    WHILE           reduce using rule 65 (no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)
    WRITE           reduce using rule 65 (no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)
    RETURN          reduce using rule 65 (no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)
    READ            reduce using rule 65 (no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)
    IF              reduce using rule 65 (no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)
    FOR             reduce using rule 65 (no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)
    RBRACKET        reduce using rule 65 (no_condicional -> FOR ID pn_push_operand_and_type ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)


state 280

    (64) no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .

    ID              reduce using rule 64 (no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)
    WHILE           reduce using rule 64 (no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)
    WRITE           reduce using rule 64 (no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)
    RETURN          reduce using rule 64 (no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)
    READ            reduce using rule 64 (no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)
    IF              reduce using rule 64 (no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)
    FOR             reduce using rule 64 (no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)
    RBRACKET        reduce using rule 64 (no_condicional -> FOR ID pn_push_operand_and_type dimensiones ASSIGN pn_push_operator expresion pn_assign TO expresion pn_for_push_comparison pn_comparison pn_for_go_false DO bloque pn_for_go_back .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT in state 47 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 47 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 47 resolved as shift
